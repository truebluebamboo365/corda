[INFO ] 2019-11-01T00:01:45,700Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.qn7265 in file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/classes/kotlin/test/com/qn7265: build/tmp/generated-test-cordapps/com.qn7265-28f01fb1-bc96-495a-b6cb-aa32c6ac2a94.jar {}
[INFO ] 2019-11-01T00:01:45,737Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.qn7265 in file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/classes/kotlin/main/com/qn7265: build/tmp/generated-test-cordapps/com.qn7265-b9b0f6e0-bfcc-42c3-8ee0-f6d86640b465.jar {}
[INFO ] 2019-11-01T00:01:45,824Z [Test worker] cordapp.CordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/tmp/generated-test-cordapps/com.qn7265-28f01fb1-bc96-495a-b6cb-aa32c6ac2a94.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/tmp/generated-test-cordapps/com.qn7265-b9b0f6e0-bfcc-42c3-8ee0-f6d86640b465.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/qn7265-contracts-new/build/libs/qn7265-contracts-new.jar, rootPackageName=com.qn7265), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/qn7265-contracts/build/libs/qn7265-contracts.jar, rootPackageName=com.qn7265), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/libs/prides.jar, rootPackageName=com.twig) {}
[INFO ] 2019-11-01T00:01:45,864Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:01:45,868Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:01:45,883Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/tmp/generated-test-cordapps/com.qn7265-28f01fb1-bc96-495a-b6cb-aa32c6ac2a94.jar {}
[INFO ] 2019-11-01T00:01:45,901Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/tmp/generated-test-cordapps/com.qn7265-b9b0f6e0-bfcc-42c3-8ee0-f6d86640b465.jar {}
[INFO ] 2019-11-01T00:01:45,944Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/qn7265-contracts-new/build/libs/qn7265-contracts-new.jar {}
[INFO ] 2019-11-01T00:01:46,007Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/qn7265-contracts/build/libs/qn7265-contracts.jar {}
[INFO ] 2019-11-01T00:01:46,077Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/libs/prides.jar {}
[INFO ] 2019-11-01T00:01:46,236Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@389f3897 {}
[INFO ] 2019-11-01T00:01:47,110Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:01:47,172Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:01:47,176Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:01:49,832Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:01:50,462Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:01:50,465Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566510465) {}
[INFO ] 2019-11-01T00:01:50,489Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:01:50,612Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566510465) {}
[INFO ] 2019-11-01T00:01:50,614Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566510465) {}
[INFO ] 2019-11-01T00:01:50,952Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:01:51,136Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:01:51,244Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:01:51,252Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:01:51,354Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:01:51,518Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:01:51,524Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:01:51,526Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:01:51,529Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:01:51,536Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:01:51,601Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 09E59F5E1B5E601ECEBD548637C35004C5F495B804E273470AAE339E7E733ACD, not inserting the second time {}
[INFO ] 2019-11-01T00:01:51,690Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566510465) {}
[INFO ] 2019-11-01T00:01:51,715Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:01:51,717Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566510465) {}
[INFO ] 2019-11-01T00:01:51,719Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566510465) {}
[INFO ] 2019-11-01T00:01:51,721Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:01:51,723Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566510465) {}
[INFO ] 2019-11-01T00:01:51,729Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:01:51,731Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:01:51,753Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:01:51,766Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@5900c70e {}
[INFO ] 2019-11-01T00:01:51,783Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:01:51,786Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:01:51,788Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:01:51,956Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:01:51,967Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:01:51,970Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566511970) {}
[INFO ] 2019-11-01T00:01:51,975Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:01:51,981Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566511970) {}
[INFO ] 2019-11-01T00:01:51,982Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566511970) {}
[INFO ] 2019-11-01T00:01:52,159Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:01:52,335Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:01:52,449Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:01:52,452Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:01:52,485Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:01:52,488Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:01:52,490Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:01:52,492Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:01:52,494Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:01:52,522Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key C7437F8CB63C0BFC9B2116AF34F8026607ECAE0D9D3A8A258D4F6FF269BCB1D4, not inserting the second time {}
[INFO ] 2019-11-01T00:01:52,546Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566510465) {}
[INFO ] 2019-11-01T00:01:52,553Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:01:52,572Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566510465) {}
[INFO ] 2019-11-01T00:01:52,575Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566511970) {}
[INFO ] 2019-11-01T00:01:52,583Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:01:52,607Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566511970) {}
[INFO ] 2019-11-01T00:01:52,609Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566511970) {}
[INFO ] 2019-11-01T00:01:52,624Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:01:52,626Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566511970) {}
[INFO ] 2019-11-01T00:01:52,629Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566511970) {}
[INFO ] 2019-11-01T00:01:52,634Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:01:52,636Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566511970) {}
[INFO ] 2019-11-01T00:01:52,641Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:01:52,643Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:01:52,685Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:01:52,705Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@38f58580 {}
[INFO ] 2019-11-01T00:01:52,732Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:01:52,741Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:01:52,742Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:01:52,952Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:01:52,974Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:01:52,977Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566512977) {}
[INFO ] 2019-11-01T00:01:52,989Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:01:53,001Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566512977) {}
[INFO ] 2019-11-01T00:01:53,004Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566512977) {}
[INFO ] 2019-11-01T00:01:53,174Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:01:53,320Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:01:53,420Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:01:53,423Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:01:53,443Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:01:53,445Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:01:53,447Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:01:53,448Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:01:53,450Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:01:53,480Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 811AACC35FD15728F68DD5BF28F475F42CA2E8B5E1B4F2853C6E9A64C9884584, not inserting the second time {}
[INFO ] 2019-11-01T00:01:53,489Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566510465) {}
[INFO ] 2019-11-01T00:01:53,496Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:01:53,517Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566510465) {}
[INFO ] 2019-11-01T00:01:53,519Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566512977) {}
[INFO ] 2019-11-01T00:01:53,525Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:01:53,543Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566512977) {}
[INFO ] 2019-11-01T00:01:53,545Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566511970) {}
[INFO ] 2019-11-01T00:01:53,553Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:01:53,572Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566511970) {}
[INFO ] 2019-11-01T00:01:53,592Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566512977) {}
[INFO ] 2019-11-01T00:01:53,600Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:01:53,621Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566512977) {}
[INFO ] 2019-11-01T00:01:53,626Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566512977) {}
[INFO ] 2019-11-01T00:01:53,636Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:01:53,638Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566512977) {}
[INFO ] 2019-11-01T00:01:53,641Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566512977) {}
[INFO ] 2019-11-01T00:01:53,643Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:01:53,645Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566512977) {}
[INFO ] 2019-11-01T00:01:53,650Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:01:53,653Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:01:53,689Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:01:53,709Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6a6bcdbb {}
[INFO ] 2019-11-01T00:01:53,738Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:01:53,740Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:01:53,745Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:01:53,966Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:01:53,981Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:01:53,982Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566513982) {}
[INFO ] 2019-11-01T00:01:53,989Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:01:53,998Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566513982) {}
[INFO ] 2019-11-01T00:01:54,000Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566513982) {}
[INFO ] 2019-11-01T00:01:54,149Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:01:54,304Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:01:54,406Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:01:54,410Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:01:54,437Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:01:54,439Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:01:54,441Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:01:54,442Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:01:54,444Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:01:54,507Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 206CFBE68D3403D9AD766502FB87EE515DF00688F1CD02637A2DA693628007B2, not inserting the second time {}
[INFO ] 2019-11-01T00:01:54,516Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566510465) {}
[INFO ] 2019-11-01T00:01:54,519Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:01:54,529Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566510465) {}
[INFO ] 2019-11-01T00:01:54,531Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566513982) {}
[INFO ] 2019-11-01T00:01:54,533Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:01:54,553Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566513982) {}
[INFO ] 2019-11-01T00:01:54,555Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566511970) {}
[INFO ] 2019-11-01T00:01:54,557Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:01:54,567Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566511970) {}
[INFO ] 2019-11-01T00:01:54,568Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566513982) {}
[INFO ] 2019-11-01T00:01:54,571Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:01:54,583Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566513982) {}
[INFO ] 2019-11-01T00:01:54,585Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566512977) {}
[INFO ] 2019-11-01T00:01:54,588Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:01:54,607Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566512977) {}
[INFO ] 2019-11-01T00:01:54,609Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566513982) {}
[INFO ] 2019-11-01T00:01:54,614Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:01:54,634Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566513982) {}
[INFO ] 2019-11-01T00:01:54,636Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566513982) {}
[INFO ] 2019-11-01T00:01:54,643Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:01:54,645Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566513982) {}
[INFO ] 2019-11-01T00:01:54,647Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566513982) {}
[INFO ] 2019-11-01T00:01:54,649Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:01:54,651Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566513982) {}
[INFO ] 2019-11-01T00:01:54,656Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:01:54,657Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:01:54,687Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:01:54,705Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@26eb910 {}
[INFO ] 2019-11-01T00:01:54,726Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:01:54,731Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:01:54,733Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:01:54,894Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:01:54,909Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:01:54,910Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566514910) {}
[INFO ] 2019-11-01T00:01:54,920Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:01:54,927Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566514910) {}
[INFO ] 2019-11-01T00:01:54,929Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566514910) {}
[INFO ] 2019-11-01T00:01:55,083Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:01:55,226Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:01:55,326Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:01:55,328Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:01:55,355Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:01:55,357Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:01:55,358Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:01:55,361Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:01:55,362Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:01:55,380Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key B5672295779F2C2E1E35FF469A3AA5537B6EB626CC74DE2EE21980AD663A1750, not inserting the second time {}
[INFO ] 2019-11-01T00:01:55,387Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566510465) {}
[INFO ] 2019-11-01T00:01:55,391Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:01:55,408Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566510465) {}
[INFO ] 2019-11-01T00:01:55,409Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566514910) {}
[INFO ] 2019-11-01T00:01:55,413Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:01:55,429Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566514910) {}
[INFO ] 2019-11-01T00:01:55,432Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566511970) {}
[INFO ] 2019-11-01T00:01:55,435Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:01:55,449Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566511970) {}
[INFO ] 2019-11-01T00:01:55,450Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566514910) {}
[INFO ] 2019-11-01T00:01:55,454Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:01:55,467Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566514910) {}
[INFO ] 2019-11-01T00:01:55,468Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566512977) {}
[INFO ] 2019-11-01T00:01:55,471Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:01:55,482Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566512977) {}
[INFO ] 2019-11-01T00:01:55,483Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566514910) {}
[INFO ] 2019-11-01T00:01:55,486Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:01:55,501Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566514910) {}
[INFO ] 2019-11-01T00:01:55,502Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566513982) {}
[INFO ] 2019-11-01T00:01:55,505Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:01:55,521Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566513982) {}
[INFO ] 2019-11-01T00:01:55,526Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566514910) {}
[INFO ] 2019-11-01T00:01:55,528Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:01:55,543Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566514910) {}
[INFO ] 2019-11-01T00:01:55,551Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566514910) {}
[INFO ] 2019-11-01T00:01:55,561Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:01:55,562Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566514910) {}
[INFO ] 2019-11-01T00:01:55,563Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566514910) {}
[INFO ] 2019-11-01T00:01:55,564Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:01:55,565Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566514910) {}
[INFO ] 2019-11-01T00:01:55,574Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:01:55,575Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:01:55,577Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:01:55,578Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:01:55,580Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:01:55,582Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:01:55,584Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:01:55,590Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:01:56,550Z [Mock network] flow.[b8e45534-6b57-4ad2-81de-ee5f33a8af75].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-6961423819724964177). {}
[INFO ] 2019-11-01T00:01:56,777Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-6961423819724964177). {invocation_id=d33479ce-6927-43d1-929c-e923cbcdc638, invocation_timestamp=2019-11-01T00:01:56.766Z, session_id=d33479ce-6927-43d1-929c-e923cbcdc638, session_timestamp=2019-11-01T00:01:56.766Z}
[INFO ] 2019-11-01T00:01:57,166Z [Mock network] flow.[b8e45534-6b57-4ad2-81de-ee5f33a8af75].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=1575018498066824076). {}
[INFO ] 2019-11-01T00:01:57,203Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=1575018498066824076). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=1ed62c4a-f37d-437c-bc7a-d7ab7745ff6f, invocation_timestamp=2019-11-01T00:01:57.201Z, session_id=1ed62c4a-f37d-437c-bc7a-d7ab7745ff6f, session_timestamp=2019-11-01T00:01:57.201Z}
[INFO ] 2019-11-01T00:01:57,311Z [Mock network] flow.[b8e45534-6b57-4ad2-81de-ee5f33a8af75].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-6018389615272035019). {}
[INFO ] 2019-11-01T00:01:57,332Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-6018389615272035019). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=3354f39f-675c-45d1-883f-874253a6afbc, invocation_timestamp=2019-11-01T00:01:57.332Z, session_id=3354f39f-675c-45d1-883f-874253a6afbc, session_timestamp=2019-11-01T00:01:57.332Z}
[INFO ] 2019-11-01T00:01:57,496Z [Mock network] flow.[eb17e2f4-9760-47e9-b498-84e5529861ce].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=1860806697698222580). {}
[INFO ] 2019-11-01T00:01:57,538Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=1860806697698222580). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=ad3b6b7a-4033-4299-abd1-43bef649182d, invocation_timestamp=2019-11-01T00:01:57.537Z, session_id=ad3b6b7a-4033-4299-abd1-43bef649182d, session_timestamp=2019-11-01T00:01:57.537Z}
[INFO ] 2019-11-01T00:01:57,756Z [Mock network] flow.[fc83dad2-6af6-4469-ab7a-bc4176866376].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=9099394277559899619). {}
[INFO ] 2019-11-01T00:01:57,822Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=9099394277559899619). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=8a044e9c-5bdf-4df8-97b8-dd259b3e9dda, invocation_timestamp=2019-11-01T00:01:57.821Z, session_id=8a044e9c-5bdf-4df8-97b8-dd259b3e9dda, session_timestamp=2019-11-01T00:01:57.821Z}
[INFO ] 2019-11-01T00:01:57,853Z [Mock network] flow.[2d50b9fb-778c-40d9-bc87-db212626ca28].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:01:57,975Z [Mock network] flow.[2d50b9fb-778c-40d9-bc87-db212626ca28].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:01:58,113Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:01:58,173Z [Mock network] flow.[6976d43c-3105-4a73-a305-dd503d88bb0d].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=2019901493090047192). {}
[INFO ] 2019-11-01T00:01:58,235Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=2019901493090047192). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=38ca8305-0a2b-467b-bcfa-4e1c6e9a1b72, invocation_timestamp=2019-11-01T00:01:58.234Z, session_id=38ca8305-0a2b-467b-bcfa-4e1c6e9a1b72, session_timestamp=2019-11-01T00:01:58.234Z}
[INFO ] 2019-11-01T00:01:58,265Z [Mock network] flow.[7f75c529-df82-469a-b15d-25f863991d4e].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:01:58,365Z [Mock network] flow.[7f75c529-df82-469a-b15d-25f863991d4e].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:01:58,412Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.qn7265.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:01:58,535Z [Mock network] flow.[6976d43c-3105-4a73-a305-dd503d88bb0d].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:01:58,578Z [Mock network] flow.[6976d43c-3105-4a73-a305-dd503d88bb0d].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:01:58,580Z [Mock network] flow.[6976d43c-3105-4a73-a305-dd503d88bb0d].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:01:58,633Z [Mock network] flow.[6976d43c-3105-4a73-a305-dd503d88bb0d].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:01:58,765Z [Mock network] flow.[7f75c529-df82-469a-b15d-25f863991d4e].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=1175859045911915193). {}
[INFO ] 2019-11-01T00:01:58,836Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=1175859045911915193). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=7784e041-63e1-4ec3-b475-87812011f025, invocation_timestamp=2019-11-01T00:01:58.835Z, session_id=7784e041-63e1-4ec3-b475-87812011f025, session_timestamp=2019-11-01T00:01:58.835Z}
[INFO ] 2019-11-01T00:01:58,850Z [Mock network] flow.[0f942992-dc5d-4ce3-9956-123662582108].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:01:58,941Z [Mock network] flow.[0f942992-dc5d-4ce3-9956-123662582108].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:01:58,945Z [Mock network] flow.[0f942992-dc5d-4ce3-9956-123662582108].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:01:58,980Z [Mock network] flow.[0f942992-dc5d-4ce3-9956-123662582108].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:01:59,230Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:01:59,234Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:01:59,245Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@1d80da5 {}
[INFO ] 2019-11-01T00:01:59,259Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:01:59,262Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:01:59,263Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:01:59,473Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:01:59,482Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:01:59,484Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566519484) {}
[INFO ] 2019-11-01T00:01:59,488Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:01:59,499Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566519484) {}
[INFO ] 2019-11-01T00:01:59,500Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566519484) {}
[INFO ] 2019-11-01T00:01:59,651Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:01:59,786Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:01:59,882Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:01:59,884Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:01:59,893Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:01:59,897Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:01:59,898Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:01:59,899Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:01:59,900Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:01:59,901Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:01:59,912Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 957D19DBF09A11EACB31E9E0A85F5A7E2236FEAFC3902793FD322DA99A587311, not inserting the second time {}
[INFO ] 2019-11-01T00:01:59,917Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566519484) {}
[INFO ] 2019-11-01T00:01:59,925Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:01:59,926Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566519484) {}
[INFO ] 2019-11-01T00:01:59,927Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566519484) {}
[INFO ] 2019-11-01T00:01:59,929Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:01:59,930Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566519484) {}
[INFO ] 2019-11-01T00:01:59,932Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:01:59,933Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:01:59,947Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:01:59,960Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@119f8737 {}
[INFO ] 2019-11-01T00:01:59,969Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:01:59,974Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:01:59,975Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:02:00,095Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:02:00,103Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:02:00,104Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566520104) {}
[INFO ] 2019-11-01T00:02:00,108Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:00,112Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566520104) {}
[INFO ] 2019-11-01T00:02:00,113Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566520104) {}
[INFO ] 2019-11-01T00:02:00,248Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:02:00,454Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:02:00,543Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:02:00,545Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:02:00,556Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:02:00,557Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:02:00,558Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:02:00,559Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:02:00,560Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:02:00,571Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 3F05E5BB40CED2D59CDC2E079AA6DA7E3DC7BB6C33B9C9186076CBEE28F3765E, not inserting the second time {}
[INFO ] 2019-11-01T00:02:00,576Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566519484) {}
[INFO ] 2019-11-01T00:02:00,578Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:00,593Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566519484) {}
[INFO ] 2019-11-01T00:02:00,595Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566520104) {}
[INFO ] 2019-11-01T00:02:00,596Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:00,602Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566520104) {}
[INFO ] 2019-11-01T00:02:00,603Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566520104) {}
[INFO ] 2019-11-01T00:02:00,606Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:02:00,610Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566520104) {}
[INFO ] 2019-11-01T00:02:00,611Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566520104) {}
[INFO ] 2019-11-01T00:02:00,612Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:02:00,613Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566520104) {}
[INFO ] 2019-11-01T00:02:00,616Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:02:00,617Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:02:00,640Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:02:00,650Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@50443d0a {}
[INFO ] 2019-11-01T00:02:00,661Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:02:00,663Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:02:00,664Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:02:00,803Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:02:00,816Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:02:00,826Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566520826) {}
[INFO ] 2019-11-01T00:02:00,830Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:00,834Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566520826) {}
[INFO ] 2019-11-01T00:02:00,835Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566520826) {}
[INFO ] 2019-11-01T00:02:00,978Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:02:01,113Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:02:01,263Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:02:01,266Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:02:01,279Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:02:01,280Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:02:01,281Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:02:01,282Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:02:01,283Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:02:01,295Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key BEA307D8540B4BDEA2E56CA4053E95DF66FBA878A2F730536DAB212E658C0525, not inserting the second time {}
[INFO ] 2019-11-01T00:02:01,300Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566519484) {}
[INFO ] 2019-11-01T00:02:01,306Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:01,314Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566519484) {}
[INFO ] 2019-11-01T00:02:01,316Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566520826) {}
[INFO ] 2019-11-01T00:02:01,317Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:01,324Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566520826) {}
[INFO ] 2019-11-01T00:02:01,325Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566520104) {}
[INFO ] 2019-11-01T00:02:01,327Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:01,333Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566520104) {}
[INFO ] 2019-11-01T00:02:01,334Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566520826) {}
[INFO ] 2019-11-01T00:02:01,335Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:01,341Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566520826) {}
[INFO ] 2019-11-01T00:02:01,342Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566520826) {}
[INFO ] 2019-11-01T00:02:01,345Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:02:01,346Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566520826) {}
[INFO ] 2019-11-01T00:02:01,347Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566520826) {}
[INFO ] 2019-11-01T00:02:01,348Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:02:01,349Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566520826) {}
[INFO ] 2019-11-01T00:02:01,352Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:02:01,353Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:02:01,366Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:02:01,373Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@7d350f3e {}
[INFO ] 2019-11-01T00:02:01,385Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:02:01,387Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:02:01,388Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:02:01,477Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:02:01,488Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:02:01,489Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566521489) {}
[INFO ] 2019-11-01T00:02:01,493Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:01,497Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566521489) {}
[INFO ] 2019-11-01T00:02:01,498Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566521489) {}
[INFO ] 2019-11-01T00:02:01,641Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:02:01,766Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:02:01,858Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:02:01,860Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:02:01,871Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:02:01,872Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:02:01,873Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:02:01,874Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:02:01,875Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:02:01,885Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 85CAE71B6E58B5CD95BE074A69F9A6A439F2DF7D6B20A60A2C7E7BAC51720451, not inserting the second time {}
[INFO ] 2019-11-01T00:02:01,890Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566519484) {}
[INFO ] 2019-11-01T00:02:01,891Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:01,904Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566519484) {}
[INFO ] 2019-11-01T00:02:01,907Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566521489) {}
[INFO ] 2019-11-01T00:02:01,910Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:01,920Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566521489) {}
[INFO ] 2019-11-01T00:02:01,924Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566520104) {}
[INFO ] 2019-11-01T00:02:01,927Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:01,933Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566520104) {}
[INFO ] 2019-11-01T00:02:01,937Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566521489) {}
[INFO ] 2019-11-01T00:02:01,938Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:01,948Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566521489) {}
[INFO ] 2019-11-01T00:02:01,949Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566520826) {}
[INFO ] 2019-11-01T00:02:01,954Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:01,963Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566520826) {}
[INFO ] 2019-11-01T00:02:01,974Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566521489) {}
[INFO ] 2019-11-01T00:02:01,976Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:01,984Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566521489) {}
[INFO ] 2019-11-01T00:02:01,986Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566521489) {}
[INFO ] 2019-11-01T00:02:01,990Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:02:01,991Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566521489) {}
[INFO ] 2019-11-01T00:02:01,992Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566521489) {}
[INFO ] 2019-11-01T00:02:01,993Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:02:01,994Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566521489) {}
[INFO ] 2019-11-01T00:02:01,997Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:02:01,998Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:02:02,021Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:02:02,039Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@c703329 {}
[INFO ] 2019-11-01T00:02:02,112Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:02:02,114Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:02:02,115Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:02:02,228Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:02:02,235Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:02:02,236Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566522236) {}
[INFO ] 2019-11-01T00:02:02,239Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:02,244Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566522236) {}
[INFO ] 2019-11-01T00:02:02,246Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566522236) {}
[INFO ] 2019-11-01T00:02:02,396Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:02:02,515Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:02:02,610Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:02:02,611Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:02:02,622Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:02:02,625Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:02:02,626Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:02:02,627Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:02:02,628Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:02:02,638Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 9946DA8D34900AD54ABE9A5BA9805A4A2CDC4883E95143BD83C11B7BD5446598, not inserting the second time {}
[INFO ] 2019-11-01T00:02:02,643Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566519484) {}
[INFO ] 2019-11-01T00:02:02,649Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:02,657Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566519484) {}
[INFO ] 2019-11-01T00:02:02,664Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566522236) {}
[INFO ] 2019-11-01T00:02:02,666Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:02,670Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566522236) {}
[INFO ] 2019-11-01T00:02:02,671Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566520104) {}
[INFO ] 2019-11-01T00:02:02,673Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:02,677Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566520104) {}
[INFO ] 2019-11-01T00:02:02,678Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566522236) {}
[INFO ] 2019-11-01T00:02:02,679Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:02,684Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566522236) {}
[INFO ] 2019-11-01T00:02:02,685Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566520826) {}
[INFO ] 2019-11-01T00:02:02,692Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:02,697Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566520826) {}
[INFO ] 2019-11-01T00:02:02,699Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566522236) {}
[INFO ] 2019-11-01T00:02:02,701Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:02,707Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566522236) {}
[INFO ] 2019-11-01T00:02:02,709Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566521489) {}
[INFO ] 2019-11-01T00:02:02,715Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:02,723Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566521489) {}
[INFO ] 2019-11-01T00:02:02,724Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566522236) {}
[INFO ] 2019-11-01T00:02:02,725Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:02,736Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566522236) {}
[INFO ] 2019-11-01T00:02:02,737Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566522236) {}
[INFO ] 2019-11-01T00:02:02,742Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:02:02,743Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566522236) {}
[INFO ] 2019-11-01T00:02:02,744Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566522236) {}
[INFO ] 2019-11-01T00:02:02,745Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:02:02,746Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566522236) {}
[INFO ] 2019-11-01T00:02:02,748Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:02:02,749Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:02:02,797Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:02:02,798Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:02:02,799Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:02:02,800Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:02:02,801Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:02:02,802Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:02:02,880Z [Mock network] flow.[8c3519b6-bc79-4f3d-affe-735433a12e1e].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-1139253481971719395). {}
[INFO ] 2019-11-01T00:02:02,958Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-1139253481971719395). {invocation_id=bdc03d05-ec7a-43a9-80a2-0969641f4d98, invocation_timestamp=2019-11-01T00:02:02.955Z, session_id=bdc03d05-ec7a-43a9-80a2-0969641f4d98, session_timestamp=2019-11-01T00:02:02.955Z}
[INFO ] 2019-11-01T00:02:03,104Z [Mock network] flow.[8c3519b6-bc79-4f3d-affe-735433a12e1e].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-5312681392078694559). {}
[INFO ] 2019-11-01T00:02:03,124Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-5312681392078694559). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=b1cf14d8-c627-4fd5-8d98-a15b080a5c79, invocation_timestamp=2019-11-01T00:02:03.123Z, session_id=b1cf14d8-c627-4fd5-8d98-a15b080a5c79, session_timestamp=2019-11-01T00:02:03.123Z}
[INFO ] 2019-11-01T00:02:03,211Z [Mock network] flow.[8c3519b6-bc79-4f3d-affe-735433a12e1e].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-3633214137011065950). {}
[INFO ] 2019-11-01T00:02:03,238Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-3633214137011065950). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=5cf79a9a-2548-48c5-9fd7-824aa2716f38, invocation_timestamp=2019-11-01T00:02:03.236Z, session_id=5cf79a9a-2548-48c5-9fd7-824aa2716f38, session_timestamp=2019-11-01T00:02:03.236Z}
[INFO ] 2019-11-01T00:02:03,352Z [Mock network] flow.[7e7d6b08-2a48-4f07-bffb-d9517d3cd268].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=2169006975871883419). {}
[INFO ] 2019-11-01T00:02:03,385Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=2169006975871883419). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=ee4477e7-7dd7-4656-a826-3125b379b72c, invocation_timestamp=2019-11-01T00:02:03.384Z, session_id=ee4477e7-7dd7-4656-a826-3125b379b72c, session_timestamp=2019-11-01T00:02:03.384Z}
[INFO ] 2019-11-01T00:02:03,516Z [Mock network] flow.[588f275c-5016-43ed-bced-304bd7c92861].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=1453851486405245908). {}
[INFO ] 2019-11-01T00:02:03,553Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=1453851486405245908). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=f5bff3d0-7a8e-455c-8f49-e6965e736d55, invocation_timestamp=2019-11-01T00:02:03.552Z, session_id=f5bff3d0-7a8e-455c-8f49-e6965e736d55, session_timestamp=2019-11-01T00:02:03.552Z}
[INFO ] 2019-11-01T00:02:03,567Z [Mock network] flow.[26f83fb4-f624-4805-beeb-9517e06adbeb].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:02:03,606Z [Mock network] flow.[26f83fb4-f624-4805-beeb-9517e06adbeb].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:02:03,658Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:02:03,676Z [Mock network] flow.[3b272895-7e71-4830-a25c-e413111d099f].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-6057791854331000651). {}
[INFO ] 2019-11-01T00:02:03,695Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-6057791854331000651). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=8fe25dc4-ce77-4ba9-a446-5b42266220af, invocation_timestamp=2019-11-01T00:02:03.694Z, session_id=8fe25dc4-ce77-4ba9-a446-5b42266220af, session_timestamp=2019-11-01T00:02:03.694Z}
[INFO ] 2019-11-01T00:02:03,701Z [Mock network] flow.[ffd7cddc-1e71-4a0e-bb5a-46fb842da61e].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:02:03,787Z [Mock network] flow.[ffd7cddc-1e71-4a0e-bb5a-46fb842da61e].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:02:03,823Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.qn7265.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:02:03,894Z [Mock network] flow.[3b272895-7e71-4830-a25c-e413111d099f].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:02:03,924Z [Mock network] flow.[3b272895-7e71-4830-a25c-e413111d099f].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:02:03,930Z [Mock network] flow.[3b272895-7e71-4830-a25c-e413111d099f].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:02:03,962Z [Mock network] flow.[3b272895-7e71-4830-a25c-e413111d099f].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:02:04,098Z [Mock network] flow.[ffd7cddc-1e71-4a0e-bb5a-46fb842da61e].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=3418836092922075265). {}
[INFO ] 2019-11-01T00:02:04,130Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=3418836092922075265). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=fdf69a07-98a1-43fd-bf92-57da5d9d0129, invocation_timestamp=2019-11-01T00:02:04.129Z, session_id=fdf69a07-98a1-43fd-bf92-57da5d9d0129, session_timestamp=2019-11-01T00:02:04.129Z}
[INFO ] 2019-11-01T00:02:04,153Z [Mock network] flow.[078ef774-baa9-44be-8846-b428ac8e6c85].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:02:04,235Z [Mock network] flow.[078ef774-baa9-44be-8846-b428ac8e6c85].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:02:04,240Z [Mock network] flow.[078ef774-baa9-44be-8846-b428ac8e6c85].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:02:04,287Z [Mock network] flow.[078ef774-baa9-44be-8846-b428ac8e6c85].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:02:04,463Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:02:04,464Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:02:04,471Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6b342042 {}
[INFO ] 2019-11-01T00:02:04,483Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:02:04,484Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:02:04,485Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:02:04,610Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:02:04,620Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:02:04,622Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566524621) {}
[INFO ] 2019-11-01T00:02:04,631Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:04,638Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566524621) {}
[INFO ] 2019-11-01T00:02:04,640Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566524621) {}
[INFO ] 2019-11-01T00:02:04,771Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:02:04,894Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:02:04,992Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:02:04,994Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:02:05,002Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:02:05,007Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:02:05,008Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:02:05,009Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:02:05,010Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:02:05,011Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:02:05,022Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key B57B69CE67A2CAB4B3A767AE6BF5EA345806886477B1F09FE2346613342D27BA, not inserting the second time {}
[INFO ] 2019-11-01T00:02:05,029Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566524621) {}
[INFO ] 2019-11-01T00:02:05,033Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:02:05,034Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566524621) {}
[INFO ] 2019-11-01T00:02:05,034Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566524621) {}
[INFO ] 2019-11-01T00:02:05,035Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:02:05,036Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566524621) {}
[INFO ] 2019-11-01T00:02:05,040Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:02:05,041Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:02:05,060Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:02:05,070Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@87987fe {}
[INFO ] 2019-11-01T00:02:05,080Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:02:05,081Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:02:05,082Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:02:05,171Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:02:05,178Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:02:05,179Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566525179) {}
[INFO ] 2019-11-01T00:02:05,191Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:05,194Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566525179) {}
[INFO ] 2019-11-01T00:02:05,194Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566525179) {}
[INFO ] 2019-11-01T00:02:05,348Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:02:05,482Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:02:05,575Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:02:05,576Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:02:05,587Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:02:05,588Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:02:05,588Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:02:05,590Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:02:05,591Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:02:05,605Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key B9788DC160C2A7C9C0FF08BEE57CCCE31ACE2629AFE39D3B54DC5BE607B690A5, not inserting the second time {}
[INFO ] 2019-11-01T00:02:05,609Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566524621) {}
[INFO ] 2019-11-01T00:02:05,610Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:05,622Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566524621) {}
[INFO ] 2019-11-01T00:02:05,624Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566525179) {}
[INFO ] 2019-11-01T00:02:05,625Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:05,629Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566525179) {}
[INFO ] 2019-11-01T00:02:05,629Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566525179) {}
[INFO ] 2019-11-01T00:02:05,632Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:02:05,632Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566525179) {}
[INFO ] 2019-11-01T00:02:05,633Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566525179) {}
[INFO ] 2019-11-01T00:02:05,634Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:02:05,634Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566525179) {}
[INFO ] 2019-11-01T00:02:05,636Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:02:05,637Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:02:05,658Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:02:05,676Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@11c50525 {}
[INFO ] 2019-11-01T00:02:05,684Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:02:05,685Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:02:05,685Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:02:05,802Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:02:05,814Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:02:05,820Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566525820) {}
[INFO ] 2019-11-01T00:02:05,828Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:05,831Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566525820) {}
[INFO ] 2019-11-01T00:02:05,832Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566525820) {}
[INFO ] 2019-11-01T00:02:05,982Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:02:06,107Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:02:06,200Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:02:06,202Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:02:06,212Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:02:06,213Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:02:06,213Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:02:06,214Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:02:06,215Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:02:06,225Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key E325F87EC3B6661B264671405F818D2E5368A500B6F276457D0EC20D8D69A8EA, not inserting the second time {}
[INFO ] 2019-11-01T00:02:06,229Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566524621) {}
[INFO ] 2019-11-01T00:02:06,235Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:06,243Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566524621) {}
[INFO ] 2019-11-01T00:02:06,244Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566525820) {}
[INFO ] 2019-11-01T00:02:06,245Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:06,249Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566525820) {}
[INFO ] 2019-11-01T00:02:06,249Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566525179) {}
[INFO ] 2019-11-01T00:02:06,250Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:06,254Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566525179) {}
[INFO ] 2019-11-01T00:02:06,255Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566525820) {}
[INFO ] 2019-11-01T00:02:06,256Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:06,260Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566525820) {}
[INFO ] 2019-11-01T00:02:06,261Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566525820) {}
[INFO ] 2019-11-01T00:02:06,263Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:02:06,264Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566525820) {}
[INFO ] 2019-11-01T00:02:06,264Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566525820) {}
[INFO ] 2019-11-01T00:02:06,265Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:02:06,266Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566525820) {}
[INFO ] 2019-11-01T00:02:06,268Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:02:06,268Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:02:06,282Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:02:06,290Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@673d5f6b {}
[INFO ] 2019-11-01T00:02:06,299Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:02:06,300Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:02:06,302Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:02:06,390Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:02:06,398Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:02:06,399Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566526399) {}
[INFO ] 2019-11-01T00:02:06,402Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:06,404Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566526399) {}
[INFO ] 2019-11-01T00:02:06,405Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566526399) {}
[INFO ] 2019-11-01T00:02:06,566Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:02:06,680Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:02:06,766Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:02:06,767Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:02:06,777Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:02:06,778Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:02:06,778Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:02:06,779Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:02:06,780Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:02:06,789Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 400273C474CDB528D3429549823B96D52257EC730C6FF20700B519A59382B006, not inserting the second time {}
[INFO ] 2019-11-01T00:02:06,796Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566524621) {}
[INFO ] 2019-11-01T00:02:06,798Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:06,802Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566524621) {}
[INFO ] 2019-11-01T00:02:06,809Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566526399) {}
[INFO ] 2019-11-01T00:02:06,810Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:06,818Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566526399) {}
[INFO ] 2019-11-01T00:02:06,822Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566525179) {}
[INFO ] 2019-11-01T00:02:06,823Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:06,827Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566525179) {}
[INFO ] 2019-11-01T00:02:06,828Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566526399) {}
[INFO ] 2019-11-01T00:02:06,829Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:06,839Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566526399) {}
[INFO ] 2019-11-01T00:02:06,840Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566525820) {}
[INFO ] 2019-11-01T00:02:06,841Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:06,847Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566525820) {}
[INFO ] 2019-11-01T00:02:06,848Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566526399) {}
[INFO ] 2019-11-01T00:02:06,850Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:06,860Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566526399) {}
[INFO ] 2019-11-01T00:02:06,861Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566526399) {}
[INFO ] 2019-11-01T00:02:06,863Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:02:06,864Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566526399) {}
[INFO ] 2019-11-01T00:02:06,864Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566526399) {}
[INFO ] 2019-11-01T00:02:06,865Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:02:06,866Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566526399) {}
[INFO ] 2019-11-01T00:02:06,868Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:02:06,869Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:02:06,886Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:02:06,899Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@5514c659 {}
[INFO ] 2019-11-01T00:02:06,907Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:02:06,908Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:02:06,909Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:02:06,994Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:02:07,010Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:02:07,011Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566527011) {}
[INFO ] 2019-11-01T00:02:07,021Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:07,025Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566527011) {}
[INFO ] 2019-11-01T00:02:07,026Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566527011) {}
[INFO ] 2019-11-01T00:02:07,148Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:02:07,296Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:02:07,388Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:02:07,389Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:02:07,399Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:02:07,400Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:02:07,401Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:02:07,402Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:02:07,402Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:02:07,412Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key A7730F3B240D5DECD5C0E25DA8C3696CCD6D07D35D5FB2FB9168119ED59C4533, not inserting the second time {}
[INFO ] 2019-11-01T00:02:07,416Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566524621) {}
[INFO ] 2019-11-01T00:02:07,421Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:07,432Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566524621) {}
[INFO ] 2019-11-01T00:02:07,439Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566527011) {}
[INFO ] 2019-11-01T00:02:07,440Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:07,444Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566527011) {}
[INFO ] 2019-11-01T00:02:07,445Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566525179) {}
[INFO ] 2019-11-01T00:02:07,446Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:07,458Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566525179) {}
[INFO ] 2019-11-01T00:02:07,459Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566527011) {}
[INFO ] 2019-11-01T00:02:07,460Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:07,465Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566527011) {}
[INFO ] 2019-11-01T00:02:07,466Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566525820) {}
[INFO ] 2019-11-01T00:02:07,468Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:07,472Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566525820) {}
[INFO ] 2019-11-01T00:02:07,472Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566527011) {}
[INFO ] 2019-11-01T00:02:07,475Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:07,479Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566527011) {}
[INFO ] 2019-11-01T00:02:07,480Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566526399) {}
[INFO ] 2019-11-01T00:02:07,481Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:07,486Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566526399) {}
[INFO ] 2019-11-01T00:02:07,486Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566527011) {}
[INFO ] 2019-11-01T00:02:07,488Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:07,494Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566527011) {}
[INFO ] 2019-11-01T00:02:07,494Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566527011) {}
[INFO ] 2019-11-01T00:02:07,497Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:02:07,498Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566527011) {}
[INFO ] 2019-11-01T00:02:07,499Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566527011) {}
[INFO ] 2019-11-01T00:02:07,500Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:02:07,500Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566527011) {}
[INFO ] 2019-11-01T00:02:07,501Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:02:07,502Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:02:07,503Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:02:07,503Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:02:07,504Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:02:07,505Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:02:07,505Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:02:07,506Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:02:07,567Z [Mock network] flow.[ee8bbad1-e3c1-4fd3-8c30-89d49bcf52df].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-655545012127684037). {}
[INFO ] 2019-11-01T00:02:07,650Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-655545012127684037). {invocation_id=eb1f8a65-cf75-422f-b73f-8376240fdc90, invocation_timestamp=2019-11-01T00:02:07.649Z, session_id=eb1f8a65-cf75-422f-b73f-8376240fdc90, session_timestamp=2019-11-01T00:02:07.649Z}
[INFO ] 2019-11-01T00:02:07,842Z [Mock network] flow.[ee8bbad1-e3c1-4fd3-8c30-89d49bcf52df].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=8977551975234194318). {}
[INFO ] 2019-11-01T00:02:07,854Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=8977551975234194318). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=85e74bda-8255-4fdb-910f-98b9b2c37fbc, invocation_timestamp=2019-11-01T00:02:07.853Z, session_id=85e74bda-8255-4fdb-910f-98b9b2c37fbc, session_timestamp=2019-11-01T00:02:07.853Z}
[INFO ] 2019-11-01T00:02:07,890Z [Mock network] flow.[ee8bbad1-e3c1-4fd3-8c30-89d49bcf52df].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-5507539533171300461). {}
[INFO ] 2019-11-01T00:02:07,916Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-5507539533171300461). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=723cc82f-ef51-410d-9dc5-cf983d44f9bb, invocation_timestamp=2019-11-01T00:02:07.914Z, session_id=723cc82f-ef51-410d-9dc5-cf983d44f9bb, session_timestamp=2019-11-01T00:02:07.914Z}
[INFO ] 2019-11-01T00:02:07,999Z [Mock network] flow.[bdbc2dd4-0a4c-4600-a447-970e20bc99fa].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-7183620232341140052). {}
[INFO ] 2019-11-01T00:02:08,037Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-7183620232341140052). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=f93c08cb-0614-4efa-953d-4870312ba8d9, invocation_timestamp=2019-11-01T00:02:08.036Z, session_id=f93c08cb-0614-4efa-953d-4870312ba8d9, session_timestamp=2019-11-01T00:02:08.036Z}
[INFO ] 2019-11-01T00:02:08,089Z [Mock network] flow.[f0110408-0d78-4757-9ecf-d26caf305406].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=3690924019990009257). {}
[INFO ] 2019-11-01T00:02:08,155Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=3690924019990009257). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=a4afa60c-f7f9-4d1f-b642-6e21edaff88d, invocation_timestamp=2019-11-01T00:02:08.154Z, session_id=a4afa60c-f7f9-4d1f-b642-6e21edaff88d, session_timestamp=2019-11-01T00:02:08.154Z}
[INFO ] 2019-11-01T00:02:08,166Z [Mock network] flow.[cd6a7e78-d3b4-4ffd-ba73-49483c0f588f].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:02:08,209Z [Mock network] flow.[cd6a7e78-d3b4-4ffd-ba73-49483c0f588f].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:02:08,260Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:02:08,278Z [Mock network] flow.[1f389c8f-f3f5-40ec-9819-d3b80fab044c].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-879643168031423666). {}
[INFO ] 2019-11-01T00:02:08,288Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-879643168031423666). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=50eb3c0b-b56a-49e1-9eb8-2039f9ad7fed, invocation_timestamp=2019-11-01T00:02:08.287Z, session_id=50eb3c0b-b56a-49e1-9eb8-2039f9ad7fed, session_timestamp=2019-11-01T00:02:08.287Z}
[INFO ] 2019-11-01T00:02:08,295Z [Mock network] flow.[f3e5522f-e3cc-4bc4-bf9f-83ee233ffaf9].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:02:08,329Z [Mock network] flow.[f3e5522f-e3cc-4bc4-bf9f-83ee233ffaf9].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:02:08,356Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.qn7265.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:02:08,454Z [Mock network] flow.[1f389c8f-f3f5-40ec-9819-d3b80fab044c].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:02:08,478Z [Mock network] flow.[1f389c8f-f3f5-40ec-9819-d3b80fab044c].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:02:08,480Z [Mock network] flow.[1f389c8f-f3f5-40ec-9819-d3b80fab044c].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:02:08,505Z [Mock network] flow.[1f389c8f-f3f5-40ec-9819-d3b80fab044c].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:02:08,584Z [Mock network] flow.[f3e5522f-e3cc-4bc4-bf9f-83ee233ffaf9].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=2773164887159469072). {}
[INFO ] 2019-11-01T00:02:08,607Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=2773164887159469072). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=49b2e36c-9d29-46fa-a096-2648a2496d14, invocation_timestamp=2019-11-01T00:02:08.606Z, session_id=49b2e36c-9d29-46fa-a096-2648a2496d14, session_timestamp=2019-11-01T00:02:08.606Z}
[INFO ] 2019-11-01T00:02:08,649Z [Mock network] flow.[4acd8589-e377-4ba2-9e1a-e18af46cc894].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:02:08,707Z [Mock network] flow.[4acd8589-e377-4ba2-9e1a-e18af46cc894].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:02:08,708Z [Mock network] flow.[4acd8589-e377-4ba2-9e1a-e18af46cc894].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:02:08,738Z [Mock network] flow.[4acd8589-e377-4ba2-9e1a-e18af46cc894].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:02:08,895Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:02:08,896Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:02:08,900Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@2487e108 {}
[INFO ] 2019-11-01T00:02:08,913Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:02:08,913Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:02:08,914Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:02:09,017Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:02:09,023Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:02:09,024Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566529024) {}
[INFO ] 2019-11-01T00:02:09,027Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:09,033Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566529024) {}
[INFO ] 2019-11-01T00:02:09,034Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566529024) {}
[INFO ] 2019-11-01T00:02:09,176Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:02:09,290Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:02:09,379Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:02:09,381Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:02:09,388Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:02:09,392Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:02:09,393Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:02:09,394Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:02:09,395Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:02:09,395Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:02:09,405Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key C4DC6B1F67B970C85BB7D67D0CE6E4DBDAD1D6E1523C437C906976CAB6F141AC, not inserting the second time {}
[INFO ] 2019-11-01T00:02:09,414Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566529024) {}
[INFO ] 2019-11-01T00:02:09,417Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:02:09,418Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566529024) {}
[INFO ] 2019-11-01T00:02:09,419Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566529024) {}
[INFO ] 2019-11-01T00:02:09,420Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:02:09,421Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566529024) {}
[INFO ] 2019-11-01T00:02:09,424Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:02:09,425Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:02:09,436Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:02:09,442Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@d3efdfa {}
[INFO ] 2019-11-01T00:02:09,448Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:02:09,449Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:02:09,450Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:02:09,543Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:02:09,552Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:02:09,553Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566529552) {}
[INFO ] 2019-11-01T00:02:09,556Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:09,560Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566529552) {}
[INFO ] 2019-11-01T00:02:09,560Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566529552) {}
[INFO ] 2019-11-01T00:02:09,693Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:02:09,799Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:02:09,896Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:02:09,898Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:02:09,908Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:02:09,909Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:02:09,909Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:02:09,910Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:02:09,910Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:02:09,920Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key D918315232B66D2B567FCF6ADDB073053F5887CE9B717AF6413D6C2DB2B5DEAA, not inserting the second time {}
[INFO ] 2019-11-01T00:02:09,924Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566529024) {}
[INFO ] 2019-11-01T00:02:09,925Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:09,933Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566529024) {}
[INFO ] 2019-11-01T00:02:09,933Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566529552) {}
[INFO ] 2019-11-01T00:02:09,934Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:09,948Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566529552) {}
[INFO ] 2019-11-01T00:02:09,949Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566529552) {}
[INFO ] 2019-11-01T00:02:09,951Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:02:09,951Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566529552) {}
[INFO ] 2019-11-01T00:02:09,952Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566529552) {}
[INFO ] 2019-11-01T00:02:09,955Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:02:09,956Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566529552) {}
[INFO ] 2019-11-01T00:02:09,961Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:02:09,961Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:02:09,974Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:02:09,980Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@2be0c71d {}
[INFO ] 2019-11-01T00:02:09,987Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:02:09,988Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:02:09,989Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:02:10,047Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:02:10,053Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:02:10,054Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566530054) {}
[INFO ] 2019-11-01T00:02:10,057Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:10,060Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566530054) {}
[INFO ] 2019-11-01T00:02:10,061Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566530054) {}
[INFO ] 2019-11-01T00:02:10,235Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:02:10,350Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:02:10,438Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:02:10,440Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:02:10,450Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:02:10,451Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:02:10,451Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:02:10,452Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:02:10,453Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:02:10,463Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 5E6DF39DCACFED811E99171DA85DB8B55F36AA05ED0C2BB299D044390DF35EAA, not inserting the second time {}
[INFO ] 2019-11-01T00:02:10,467Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566529024) {}
[INFO ] 2019-11-01T00:02:10,469Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:10,474Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566529024) {}
[INFO ] 2019-11-01T00:02:10,477Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566530054) {}
[INFO ] 2019-11-01T00:02:10,479Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:10,484Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566530054) {}
[INFO ] 2019-11-01T00:02:10,484Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566529552) {}
[INFO ] 2019-11-01T00:02:10,485Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:10,495Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566529552) {}
[INFO ] 2019-11-01T00:02:10,495Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566530054) {}
[INFO ] 2019-11-01T00:02:10,497Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:10,504Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566530054) {}
[INFO ] 2019-11-01T00:02:10,504Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566530054) {}
[INFO ] 2019-11-01T00:02:10,508Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:02:10,511Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566530054) {}
[INFO ] 2019-11-01T00:02:10,512Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566530054) {}
[INFO ] 2019-11-01T00:02:10,512Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:02:10,513Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566530054) {}
[INFO ] 2019-11-01T00:02:10,591Z [Mock network] flow.[f084714a-e73b-45c0-807f-5de6b9cce2de].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-2417147705763005064). {}
[INFO ] 2019-11-01T00:02:10,658Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-2417147705763005064). {invocation_id=30fcb77d-dffa-40c3-8a3b-d8bbe02113b0, invocation_timestamp=2019-11-01T00:02:10.657Z, session_id=30fcb77d-dffa-40c3-8a3b-d8bbe02113b0, session_timestamp=2019-11-01T00:02:10.657Z}
[INFO ] 2019-11-01T00:02:10,850Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:02:10,851Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:02:10,856Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@2ddc7a8 {}
[INFO ] 2019-11-01T00:02:10,864Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:02:10,864Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:02:10,865Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:02:10,942Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:02:10,950Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:02:10,951Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566530951) {}
[INFO ] 2019-11-01T00:02:10,958Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:10,964Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566530951) {}
[INFO ] 2019-11-01T00:02:10,965Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566530951) {}
[INFO ] 2019-11-01T00:02:11,107Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:02:11,220Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:02:11,310Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:02:11,312Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:02:11,324Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:02:11,327Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:02:11,328Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:02:11,329Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:02:11,329Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:02:11,330Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:02:11,339Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 52617091B3772B15B9C969357AA7E926FF655F87673CEED5AF2300952B33F701, not inserting the second time {}
[INFO ] 2019-11-01T00:02:11,343Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566530951) {}
[INFO ] 2019-11-01T00:02:11,350Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:02:11,351Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566530951) {}
[INFO ] 2019-11-01T00:02:11,351Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566530951) {}
[INFO ] 2019-11-01T00:02:11,352Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:02:11,352Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566530951) {}
[INFO ] 2019-11-01T00:02:11,354Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:02:11,360Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:02:11,378Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:02:11,390Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@2639c92a {}
[INFO ] 2019-11-01T00:02:11,397Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:02:11,398Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:02:11,399Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:02:11,538Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:02:11,544Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:02:11,545Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566531545) {}
[INFO ] 2019-11-01T00:02:11,549Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:11,556Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566531545) {}
[INFO ] 2019-11-01T00:02:11,558Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566531545) {}
[INFO ] 2019-11-01T00:02:11,695Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:02:11,813Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:02:11,897Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:02:11,899Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:02:11,908Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:02:11,909Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:02:11,910Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:02:11,910Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:02:11,911Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:02:11,921Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key A7817BEB53683F3C23D94E1021E81C7C200D1FB1D248174F82B3ACDFFB688BC6, not inserting the second time {}
[INFO ] 2019-11-01T00:02:11,924Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566530951) {}
[INFO ] 2019-11-01T00:02:11,925Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:11,929Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566530951) {}
[INFO ] 2019-11-01T00:02:11,930Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566531545) {}
[INFO ] 2019-11-01T00:02:11,931Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:11,935Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566531545) {}
[INFO ] 2019-11-01T00:02:11,941Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566531545) {}
[INFO ] 2019-11-01T00:02:11,944Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:02:11,945Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566531545) {}
[INFO ] 2019-11-01T00:02:11,947Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566531545) {}
[INFO ] 2019-11-01T00:02:11,947Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:02:11,948Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566531545) {}
[INFO ] 2019-11-01T00:02:11,952Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:02:11,955Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:02:11,976Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:02:11,985Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@144f5ccf {}
[INFO ] 2019-11-01T00:02:11,993Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:02:11,994Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:02:11,995Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:02:12,049Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:02:12,054Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:02:12,055Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566532055) {}
[INFO ] 2019-11-01T00:02:12,058Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:12,060Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566532055) {}
[INFO ] 2019-11-01T00:02:12,061Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566532055) {}
[INFO ] 2019-11-01T00:02:12,237Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:02:12,370Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:02:12,458Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:02:12,460Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:02:12,470Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:02:12,471Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:02:12,472Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:02:12,472Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:02:12,473Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:02:12,482Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 821D11B706C9B40674AE518D7553758A6C7C002AEA49AA4C5DB53C5AEDC97ACC, not inserting the second time {}
[INFO ] 2019-11-01T00:02:12,488Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566530951) {}
[INFO ] 2019-11-01T00:02:12,490Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:12,494Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566530951) {}
[INFO ] 2019-11-01T00:02:12,501Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566532055) {}
[INFO ] 2019-11-01T00:02:12,504Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:12,508Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566532055) {}
[INFO ] 2019-11-01T00:02:12,508Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566531545) {}
[INFO ] 2019-11-01T00:02:12,509Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:12,512Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566531545) {}
[INFO ] 2019-11-01T00:02:12,513Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566532055) {}
[INFO ] 2019-11-01T00:02:12,514Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:12,517Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566532055) {}
[INFO ] 2019-11-01T00:02:12,518Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566532055) {}
[INFO ] 2019-11-01T00:02:12,520Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:02:12,522Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566532055) {}
[INFO ] 2019-11-01T00:02:12,522Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566532055) {}
[INFO ] 2019-11-01T00:02:12,523Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:02:12,523Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566532055) {}
[INFO ] 2019-11-01T00:02:12,590Z [Mock network] flow.[fc9ada22-8c61-45c2-beec-dd06844f57fd].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=2780408083212339025). {}
[INFO ] 2019-11-01T00:02:12,642Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=2780408083212339025). {invocation_id=32ed5eef-7e72-4c78-9d55-464d11c92354, invocation_timestamp=2019-11-01T00:02:12.642Z, session_id=32ed5eef-7e72-4c78-9d55-464d11c92354, session_timestamp=2019-11-01T00:02:12.642Z}
[INFO ] 2019-11-01T00:02:12,854Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:02:12,859Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:02:12,864Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@7d77aa6a {}
[INFO ] 2019-11-01T00:02:12,876Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:02:12,877Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:02:12,878Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:02:12,977Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:02:12,983Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:02:12,984Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566532984) {}
[INFO ] 2019-11-01T00:02:12,986Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:12,993Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566532984) {}
[INFO ] 2019-11-01T00:02:12,994Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566532984) {}
[INFO ] 2019-11-01T00:02:13,122Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:02:13,234Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:02:13,324Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:02:13,325Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:02:13,332Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:02:13,336Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:02:13,337Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:02:13,337Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:02:13,338Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:02:13,338Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:02:13,357Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 51063B183C2D56834CCFA1CB9275CD8DD6B1B40D8948931B302C75C669D44E99, not inserting the second time {}
[INFO ] 2019-11-01T00:02:13,363Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566532984) {}
[INFO ] 2019-11-01T00:02:13,369Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:02:13,369Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566532984) {}
[INFO ] 2019-11-01T00:02:13,370Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566532984) {}
[INFO ] 2019-11-01T00:02:13,370Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:02:13,371Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566532984) {}
[INFO ] 2019-11-01T00:02:13,377Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:02:13,377Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:02:13,399Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:02:13,406Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@2cbc15f1 {}
[INFO ] 2019-11-01T00:02:13,413Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:02:13,414Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:02:13,415Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:02:13,519Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:02:13,532Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:02:13,533Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566533533) {}
[INFO ] 2019-11-01T00:02:13,539Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:13,541Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566533533) {}
[INFO ] 2019-11-01T00:02:13,541Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566533533) {}
[INFO ] 2019-11-01T00:02:13,674Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:02:13,789Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:02:13,879Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:02:13,880Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:02:13,892Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:02:13,893Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:02:13,894Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:02:13,894Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:02:13,896Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:02:13,905Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 0708FB735693EAE2B8D62BAE1BA07D38842D9B0A26F0F14FDE05272945E36E40, not inserting the second time {}
[INFO ] 2019-11-01T00:02:13,909Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566532984) {}
[INFO ] 2019-11-01T00:02:13,911Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:13,915Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566532984) {}
[INFO ] 2019-11-01T00:02:13,916Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566533533) {}
[INFO ] 2019-11-01T00:02:13,918Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:13,923Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566533533) {}
[INFO ] 2019-11-01T00:02:13,924Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566533533) {}
[INFO ] 2019-11-01T00:02:13,931Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:02:13,931Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566533533) {}
[INFO ] 2019-11-01T00:02:13,932Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566533533) {}
[INFO ] 2019-11-01T00:02:13,932Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:02:13,933Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566533533) {}
[INFO ] 2019-11-01T00:02:13,934Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:02:13,939Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:02:13,960Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:02:13,970Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@5a8b5f98 {}
[INFO ] 2019-11-01T00:02:13,976Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:02:13,976Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:02:13,977Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:02:14,054Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:02:14,060Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:02:14,060Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566534060) {}
[INFO ] 2019-11-01T00:02:14,066Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:14,068Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566534060) {}
[INFO ] 2019-11-01T00:02:14,069Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566534060) {}
[INFO ] 2019-11-01T00:02:14,250Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:02:14,366Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:02:14,453Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:02:14,455Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:02:14,465Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:02:14,466Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:02:14,467Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:02:14,467Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:02:14,468Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:02:14,477Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 9F6E2F8B8BC0A934AAF59C340805CCF771F506F5077AEB927E66715BC8B1E8F2, not inserting the second time {}
[INFO ] 2019-11-01T00:02:14,481Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566532984) {}
[INFO ] 2019-11-01T00:02:14,489Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:14,493Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566532984) {}
[INFO ] 2019-11-01T00:02:14,493Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566534060) {}
[INFO ] 2019-11-01T00:02:14,494Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:14,498Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566534060) {}
[INFO ] 2019-11-01T00:02:14,498Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566533533) {}
[INFO ] 2019-11-01T00:02:14,499Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:14,503Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566533533) {}
[INFO ] 2019-11-01T00:02:14,503Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566534060) {}
[INFO ] 2019-11-01T00:02:14,504Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:02:14,510Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566534060) {}
[INFO ] 2019-11-01T00:02:14,511Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566534060) {}
[INFO ] 2019-11-01T00:02:14,514Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:02:14,514Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566534060) {}
[INFO ] 2019-11-01T00:02:14,515Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566534060) {}
[INFO ] 2019-11-01T00:02:14,515Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:02:14,516Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566534060) {}
[WARN ] 2019-11-01T00:02:14,547Z [Mock network] flow.[1510cc61-1516-4ddd-b638-3f7e8b5febb5].run - Flow finished with exception {}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: A newly issued asset must have a positive amount., contract: com.qn7265.issue.AssetContract, transaction: 62D305226C13ACE5EA6D8E4494E2F9FC1EBBC4961E7395F74E1B03CA9AB152CD
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:127) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:80) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:143) ~[corda-core-3.4-corda.jar:?]
	at com.qn7265.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:82) ~[main/:?]
	at com.qn7265.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:27) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.4-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_211]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.4-corda.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: A newly issued asset must have a positive amount.
	at com.qn7265.issue.AssetContract.verifyIssue(AssetContract.kt:80) ~[qn7265-contracts.jar:?]
	at com.qn7265.issue.AssetContract.verify(AssetContract.kt:29) ~[qn7265-contracts.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:125) ~[corda-core-3.4-corda.jar:?]
	... 17 more
[INFO ] 2019-11-01T00:02:14,602Z [Mock network] flow.[52ef8748-ac66-4029-ab61-c6e07e08dc76].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=1857964571817932358). {}
[INFO ] 2019-11-01T00:02:14,641Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=1857964571817932358). {invocation_id=28815c3c-4749-454a-82bd-34383f16a3ee, invocation_timestamp=2019-11-01T00:02:14.640Z, session_id=28815c3c-4749-454a-82bd-34383f16a3ee, session_timestamp=2019-11-01T00:02:14.640Z}
[INFO ] 2019-11-01T00:03:04,043Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.qn7265 in file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/classes/kotlin/test/com/qn7265: build/tmp/generated-test-cordapps/com.qn7265-8436c4d8-6cb3-4d8e-aac1-fffffe0ba7c3.jar {}
[INFO ] 2019-11-01T00:03:04,079Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.qn7265 in file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/classes/kotlin/main/com/qn7265: build/tmp/generated-test-cordapps/com.qn7265-36567481-11d8-4a5a-9043-baa4a1a6b9a2.jar {}
[INFO ] 2019-11-01T00:03:04,133Z [Test worker] cordapp.CordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/tmp/generated-test-cordapps/com.qn7265-8436c4d8-6cb3-4d8e-aac1-fffffe0ba7c3.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/tmp/generated-test-cordapps/com.qn7265-36567481-11d8-4a5a-9043-baa4a1a6b9a2.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/qn7265-contracts-new/build/libs/qn7265-contracts-new.jar, rootPackageName=com.qn7265), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/qn7265-contracts/build/libs/qn7265-contracts.jar, rootPackageName=com.qn7265), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/libs/prides.jar, rootPackageName=com.twig) {}
[INFO ] 2019-11-01T00:03:04,173Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:03:04,178Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:03:04,208Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/tmp/generated-test-cordapps/com.qn7265-8436c4d8-6cb3-4d8e-aac1-fffffe0ba7c3.jar {}
[INFO ] 2019-11-01T00:03:04,239Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/tmp/generated-test-cordapps/com.qn7265-36567481-11d8-4a5a-9043-baa4a1a6b9a2.jar {}
[INFO ] 2019-11-01T00:03:04,298Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/qn7265-contracts-new/build/libs/qn7265-contracts-new.jar {}
[INFO ] 2019-11-01T00:03:04,361Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/qn7265-contracts/build/libs/qn7265-contracts.jar {}
[INFO ] 2019-11-01T00:03:04,411Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/libs/prides.jar {}
[INFO ] 2019-11-01T00:03:04,602Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@2ca5611a {}
[INFO ] 2019-11-01T00:03:05,458Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:03:05,521Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:05,527Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:08,061Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:08,688Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:03:08,691Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566588691) {}
[INFO ] 2019-11-01T00:03:08,703Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:08,824Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566588691) {}
[INFO ] 2019-11-01T00:03:08,826Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566588691) {}
[INFO ] 2019-11-01T00:03:09,129Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:03:09,327Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:03:09,463Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:03:09,473Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:03:09,592Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:03:09,756Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:03:09,761Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:03:09,768Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:09,770Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:09,774Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:03:09,881Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 2DCF4D1A8760E9E681BEBE8EF596DF734FF3F1BD655A5CD34573F3D9C40A7E57, not inserting the second time {}
[INFO ] 2019-11-01T00:03:09,978Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566588691) {}
[INFO ] 2019-11-01T00:03:10,017Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:10,021Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566588691) {}
[INFO ] 2019-11-01T00:03:10,024Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566588691) {}
[INFO ] 2019-11-01T00:03:10,027Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:10,029Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566588691) {}
[INFO ] 2019-11-01T00:03:10,036Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:03:10,043Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:03:10,087Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:03:10,115Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@2d77eb4c {}
[INFO ] 2019-11-01T00:03:10,139Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:03:10,146Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:10,148Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:10,395Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:10,417Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:03:10,421Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566590421) {}
[INFO ] 2019-11-01T00:03:10,431Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:10,443Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566590421) {}
[INFO ] 2019-11-01T00:03:10,445Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566590421) {}
[INFO ] 2019-11-01T00:03:10,616Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:03:10,758Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:03:10,856Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:03:10,859Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:03:10,883Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:03:10,886Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:03:10,888Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:10,891Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:10,893Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:03:10,919Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key A64A45804075F19CA4E30CFA080DB380201711F53210CEDE20128DA54E1930A8, not inserting the second time {}
[INFO ] 2019-11-01T00:03:10,930Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566588691) {}
[INFO ] 2019-11-01T00:03:10,941Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:10,964Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566588691) {}
[INFO ] 2019-11-01T00:03:10,966Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566590421) {}
[INFO ] 2019-11-01T00:03:10,975Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:10,997Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566590421) {}
[INFO ] 2019-11-01T00:03:10,998Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566590421) {}
[INFO ] 2019-11-01T00:03:11,015Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:11,018Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566590421) {}
[INFO ] 2019-11-01T00:03:11,020Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566590421) {}
[INFO ] 2019-11-01T00:03:11,024Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:11,026Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566590421) {}
[INFO ] 2019-11-01T00:03:11,032Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:03:11,034Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:03:11,068Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:03:11,087Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@5493f507 {}
[INFO ] 2019-11-01T00:03:11,107Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:03:11,109Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:11,110Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:11,242Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:11,261Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:03:11,263Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566591263) {}
[INFO ] 2019-11-01T00:03:11,270Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:11,280Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566591263) {}
[INFO ] 2019-11-01T00:03:11,283Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566591263) {}
[INFO ] 2019-11-01T00:03:11,464Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:03:11,612Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:03:11,708Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:03:11,710Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:03:11,724Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:03:11,726Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:03:11,727Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:11,729Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:11,730Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:03:11,742Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 0BD9E1F3045A5480FA99CC493748E521E32BEDBB4B3D4A210385386C592B030F, not inserting the second time {}
[INFO ] 2019-11-01T00:03:11,752Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566588691) {}
[INFO ] 2019-11-01T00:03:11,757Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:11,770Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566588691) {}
[INFO ] 2019-11-01T00:03:11,772Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566591263) {}
[INFO ] 2019-11-01T00:03:11,776Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:11,790Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566591263) {}
[INFO ] 2019-11-01T00:03:11,791Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566590421) {}
[INFO ] 2019-11-01T00:03:11,794Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:11,807Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566590421) {}
[INFO ] 2019-11-01T00:03:11,814Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566591263) {}
[INFO ] 2019-11-01T00:03:11,818Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:11,834Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566591263) {}
[INFO ] 2019-11-01T00:03:11,841Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566591263) {}
[INFO ] 2019-11-01T00:03:11,850Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:11,854Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566591263) {}
[INFO ] 2019-11-01T00:03:11,856Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566591263) {}
[INFO ] 2019-11-01T00:03:11,857Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:11,858Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566591263) {}
[INFO ] 2019-11-01T00:03:12,950Z [Mock network] flow.[a0ab2f5c-a1c0-4dbc-bd99-c3a23115c1fc].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-7608408297211979508). {}
[INFO ] 2019-11-01T00:03:13,177Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-7608408297211979508). {invocation_id=e97fef44-eb9a-4301-b94d-3eb2160e4822, invocation_timestamp=2019-11-01T00:03:13.169Z, session_id=e97fef44-eb9a-4301-b94d-3eb2160e4822, session_timestamp=2019-11-01T00:03:13.169Z}
[INFO ] 2019-11-01T00:03:13,572Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:03:13,575Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:03:13,595Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@14591547 {}
[INFO ] 2019-11-01T00:03:13,620Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:03:13,625Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:13,628Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:13,734Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:13,742Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:03:13,743Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566593743) {}
[INFO ] 2019-11-01T00:03:13,747Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:13,763Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566593743) {}
[INFO ] 2019-11-01T00:03:13,765Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566593743) {}
[INFO ] 2019-11-01T00:03:13,918Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:03:14,059Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:03:14,158Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:03:14,161Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:03:14,179Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:03:14,186Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:03:14,188Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:03:14,189Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:14,191Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:14,192Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:03:14,214Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 86B62789CC0BBFCF5F80967DD3B26023CA28A145188E810C26EA8DE1B2F67AA8, not inserting the second time {}
[INFO ] 2019-11-01T00:03:14,223Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566593743) {}
[INFO ] 2019-11-01T00:03:14,237Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:14,239Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566593743) {}
[INFO ] 2019-11-01T00:03:14,244Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566593743) {}
[INFO ] 2019-11-01T00:03:14,245Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:14,246Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566593743) {}
[INFO ] 2019-11-01T00:03:14,253Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:03:14,255Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:03:14,282Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:03:14,294Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@40f78d68 {}
[INFO ] 2019-11-01T00:03:14,310Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:03:14,312Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:14,313Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:14,422Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:14,440Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:03:14,442Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566594442) {}
[INFO ] 2019-11-01T00:03:14,449Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:14,456Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566594442) {}
[INFO ] 2019-11-01T00:03:14,463Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566594442) {}
[INFO ] 2019-11-01T00:03:14,649Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:03:14,772Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:03:14,868Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:03:14,871Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:03:14,893Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:03:14,897Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:03:14,898Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:14,899Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:14,901Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:03:14,924Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 88DFFE97F1C31ACFAEA9B38898E31C940E7F33803C2FC4E9F2796FBC78489670, not inserting the second time {}
[INFO ] 2019-11-01T00:03:14,938Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566593743) {}
[INFO ] 2019-11-01T00:03:14,940Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:14,956Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566593743) {}
[INFO ] 2019-11-01T00:03:14,960Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566594442) {}
[INFO ] 2019-11-01T00:03:14,967Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:14,978Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566594442) {}
[INFO ] 2019-11-01T00:03:14,987Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566594442) {}
[INFO ] 2019-11-01T00:03:14,992Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:14,993Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566594442) {}
[INFO ] 2019-11-01T00:03:14,994Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566594442) {}
[INFO ] 2019-11-01T00:03:14,995Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:14,996Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566594442) {}
[INFO ] 2019-11-01T00:03:15,000Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:03:15,001Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:03:15,026Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:03:15,035Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@2ff56b62 {}
[INFO ] 2019-11-01T00:03:15,046Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:03:15,048Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:15,049Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:15,132Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:15,140Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:03:15,141Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566595141) {}
[INFO ] 2019-11-01T00:03:15,145Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:15,149Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566595141) {}
[INFO ] 2019-11-01T00:03:15,150Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566595141) {}
[INFO ] 2019-11-01T00:03:15,276Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:03:15,414Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:03:15,509Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:03:15,511Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:03:15,533Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:03:15,534Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:03:15,536Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:15,539Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:15,540Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:03:15,563Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key ADB1F07331C8CF952C0921CF4125F7B4A13F040DD7D5BB0DBA0EA89CF42E9FFF, not inserting the second time {}
[INFO ] 2019-11-01T00:03:15,569Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566593743) {}
[INFO ] 2019-11-01T00:03:15,580Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:15,599Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566593743) {}
[INFO ] 2019-11-01T00:03:15,605Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566595141) {}
[INFO ] 2019-11-01T00:03:15,613Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:15,622Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566595141) {}
[INFO ] 2019-11-01T00:03:15,623Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566594442) {}
[INFO ] 2019-11-01T00:03:15,630Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:15,643Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566594442) {}
[INFO ] 2019-11-01T00:03:15,647Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566595141) {}
[INFO ] 2019-11-01T00:03:15,653Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:15,668Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566595141) {}
[INFO ] 2019-11-01T00:03:15,672Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566595141) {}
[INFO ] 2019-11-01T00:03:15,676Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:15,677Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566595141) {}
[INFO ] 2019-11-01T00:03:15,678Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566595141) {}
[INFO ] 2019-11-01T00:03:15,679Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:15,685Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566595141) {}
[INFO ] 2019-11-01T00:03:15,856Z [Mock network] flow.[786d2e7d-93fa-485e-825d-9c79e27d55ec].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=7095650446196418720). {}
[INFO ] 2019-11-01T00:03:15,944Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=7095650446196418720). {invocation_id=c8d66695-8910-4c54-a64d-cc9922138b6d, invocation_timestamp=2019-11-01T00:03:15.942Z, session_id=c8d66695-8910-4c54-a64d-cc9922138b6d, session_timestamp=2019-11-01T00:03:15.942Z}
[INFO ] 2019-11-01T00:03:16,195Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:03:16,197Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:03:16,208Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@12e221d8 {}
[INFO ] 2019-11-01T00:03:16,222Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:03:16,226Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:16,228Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:16,425Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:16,442Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:03:16,447Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566596447) {}
[INFO ] 2019-11-01T00:03:16,456Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:16,469Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566596447) {}
[INFO ] 2019-11-01T00:03:16,471Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566596447) {}
[INFO ] 2019-11-01T00:03:16,627Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:03:16,765Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:03:16,861Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:03:16,863Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:03:16,876Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:03:16,881Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:03:16,887Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:03:16,888Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:16,889Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:16,891Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:03:16,914Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 761162B02B4E8E61C9C4311411066A5C78BADF59D076EA44B4304F1F8D3AB3DD, not inserting the second time {}
[INFO ] 2019-11-01T00:03:16,924Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566596447) {}
[INFO ] 2019-11-01T00:03:16,936Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:16,942Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566596447) {}
[INFO ] 2019-11-01T00:03:16,948Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566596447) {}
[INFO ] 2019-11-01T00:03:16,949Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:16,950Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566596447) {}
[INFO ] 2019-11-01T00:03:16,955Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:03:16,958Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:03:17,044Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:03:17,057Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@daf678c {}
[INFO ] 2019-11-01T00:03:17,076Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:03:17,080Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:17,082Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:17,239Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:17,257Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:03:17,260Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566597260) {}
[INFO ] 2019-11-01T00:03:17,264Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:17,271Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566597260) {}
[INFO ] 2019-11-01T00:03:17,274Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566597260) {}
[INFO ] 2019-11-01T00:03:17,417Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:03:17,553Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:03:17,651Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:03:17,653Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:03:17,669Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:03:17,672Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:03:17,674Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:17,675Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:17,676Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:03:17,690Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 4B72A71958F031351B6297F35681AC6DDC29E875493C165967037321CE015511, not inserting the second time {}
[INFO ] 2019-11-01T00:03:17,695Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566596447) {}
[INFO ] 2019-11-01T00:03:17,703Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:17,716Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566596447) {}
[INFO ] 2019-11-01T00:03:17,724Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566597260) {}
[INFO ] 2019-11-01T00:03:17,729Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:17,736Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566597260) {}
[INFO ] 2019-11-01T00:03:17,741Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566597260) {}
[INFO ] 2019-11-01T00:03:17,750Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:17,751Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566597260) {}
[INFO ] 2019-11-01T00:03:17,752Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566597260) {}
[INFO ] 2019-11-01T00:03:17,753Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:17,754Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566597260) {}
[INFO ] 2019-11-01T00:03:17,757Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:03:17,759Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:03:17,779Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:03:17,788Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@7ce5420f {}
[INFO ] 2019-11-01T00:03:17,798Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:03:17,803Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:17,804Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:17,944Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:17,953Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:03:17,954Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566597954) {}
[INFO ] 2019-11-01T00:03:17,958Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:17,963Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566597954) {}
[INFO ] 2019-11-01T00:03:17,964Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566597954) {}
[INFO ] 2019-11-01T00:03:18,195Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:03:18,331Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:03:18,426Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:03:18,430Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:03:18,448Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:03:18,449Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:03:18,450Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:18,451Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:18,456Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:03:18,472Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key DF9DDF3C212E541BA8BF66F364649B39930A8276C6E4BBB3A939F168550FE0BE, not inserting the second time {}
[INFO ] 2019-11-01T00:03:18,481Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566596447) {}
[INFO ] 2019-11-01T00:03:18,484Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:18,500Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566596447) {}
[INFO ] 2019-11-01T00:03:18,501Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566597954) {}
[INFO ] 2019-11-01T00:03:18,503Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:18,515Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566597954) {}
[INFO ] 2019-11-01T00:03:18,517Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566597260) {}
[INFO ] 2019-11-01T00:03:18,520Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:18,530Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566597260) {}
[INFO ] 2019-11-01T00:03:18,532Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566597954) {}
[INFO ] 2019-11-01T00:03:18,534Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:18,544Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566597954) {}
[INFO ] 2019-11-01T00:03:18,546Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566597954) {}
[INFO ] 2019-11-01T00:03:18,553Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:18,554Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566597954) {}
[INFO ] 2019-11-01T00:03:18,560Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566597954) {}
[INFO ] 2019-11-01T00:03:18,561Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:18,561Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566597954) {}
[WARN ] 2019-11-01T00:03:18,645Z [Mock network] flow.[dd4b553e-2859-446e-9ca1-f537f475d90b].run - Flow finished with exception {}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: A newly issued asset must have a positive amount., contract: com.qn7265.issue.AssetContract, transaction: 5A4C3A864E53137DBBDEC382A32FE6DD1B6C7A06FEA03FC4534F7B7B71544746
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:127) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:80) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:143) ~[corda-core-3.4-corda.jar:?]
	at com.qn7265.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:82) ~[main/:?]
	at com.qn7265.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:27) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.4-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_211]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.4-corda.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: A newly issued asset must have a positive amount.
	at com.qn7265.issue.AssetContract.verifyIssue(AssetContract.kt:80) ~[qn7265-contracts.jar:?]
	at com.qn7265.issue.AssetContract.verify(AssetContract.kt:29) ~[qn7265-contracts.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:125) ~[corda-core-3.4-corda.jar:?]
	... 17 more
[INFO ] 2019-11-01T00:03:18,756Z [Mock network] flow.[0d301e7d-a887-4abf-8380-08cda8025f10].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-6587065480545272402). {}
[INFO ] 2019-11-01T00:03:18,850Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-6587065480545272402). {invocation_id=cba50c57-66bf-48e0-8e26-34f908b0cd44, invocation_timestamp=2019-11-01T00:03:18.844Z, session_id=cba50c57-66bf-48e0-8e26-34f908b0cd44, session_timestamp=2019-11-01T00:03:18.844Z}
[INFO ] 2019-11-01T00:03:19,059Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:03:19,061Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:03:19,073Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6026b482 {}
[INFO ] 2019-11-01T00:03:19,087Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:03:19,089Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:19,089Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:19,225Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:19,232Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:03:19,236Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566599236) {}
[INFO ] 2019-11-01T00:03:19,241Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:19,251Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566599236) {}
[INFO ] 2019-11-01T00:03:19,253Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566599236) {}
[INFO ] 2019-11-01T00:03:19,397Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:03:19,521Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:03:19,611Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:03:19,613Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:03:19,622Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:03:19,627Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:03:19,628Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:03:19,629Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:19,630Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:19,631Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:03:19,642Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 0C8046726ECC224994A11B24E5C6F43C6D5B00D4140CB38048BA1B29FF33609F, not inserting the second time {}
[INFO ] 2019-11-01T00:03:19,671Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566599236) {}
[INFO ] 2019-11-01T00:03:19,679Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:19,680Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566599236) {}
[INFO ] 2019-11-01T00:03:19,691Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566599236) {}
[INFO ] 2019-11-01T00:03:19,693Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:19,693Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566599236) {}
[INFO ] 2019-11-01T00:03:19,696Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:03:19,697Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:03:19,716Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:03:19,728Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@1847423d {}
[INFO ] 2019-11-01T00:03:19,741Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:03:19,742Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:19,743Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:19,810Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:19,816Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:03:19,817Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566599817) {}
[INFO ] 2019-11-01T00:03:19,820Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:19,823Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566599817) {}
[INFO ] 2019-11-01T00:03:19,824Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566599817) {}
[INFO ] 2019-11-01T00:03:20,001Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:03:20,127Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:03:20,220Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:03:20,221Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:03:20,233Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:03:20,234Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:03:20,239Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:20,240Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:20,241Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:03:20,256Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key CC1EF70D8A5B11E24648625853732E67A76CE69D79B32228DAEF9E982F086780, not inserting the second time {}
[INFO ] 2019-11-01T00:03:20,263Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566599236) {}
[INFO ] 2019-11-01T00:03:20,266Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:20,273Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566599236) {}
[INFO ] 2019-11-01T00:03:20,274Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566599817) {}
[INFO ] 2019-11-01T00:03:20,275Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:20,281Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566599817) {}
[INFO ] 2019-11-01T00:03:20,282Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566599817) {}
[INFO ] 2019-11-01T00:03:20,285Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:20,286Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566599817) {}
[INFO ] 2019-11-01T00:03:20,286Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566599817) {}
[INFO ] 2019-11-01T00:03:20,287Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:20,288Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566599817) {}
[INFO ] 2019-11-01T00:03:20,290Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:03:20,291Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:03:20,301Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:03:20,307Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@133baa14 {}
[INFO ] 2019-11-01T00:03:20,317Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:03:20,318Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:20,318Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:20,383Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:20,389Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:03:20,390Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566600390) {}
[INFO ] 2019-11-01T00:03:20,393Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:20,396Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566600390) {}
[INFO ] 2019-11-01T00:03:20,396Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566600390) {}
[INFO ] 2019-11-01T00:03:20,529Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:03:20,702Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:03:20,798Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:03:20,800Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:03:20,811Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:03:20,813Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:03:20,814Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:20,815Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:20,816Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:03:20,830Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 6E770F42209D82A11842C1612EC41F194AB786B0342F4DB513464C347554FE8A, not inserting the second time {}
[INFO ] 2019-11-01T00:03:20,837Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566599236) {}
[INFO ] 2019-11-01T00:03:20,841Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:20,860Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566599236) {}
[INFO ] 2019-11-01T00:03:20,861Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566600390) {}
[INFO ] 2019-11-01T00:03:20,863Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:20,872Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566600390) {}
[INFO ] 2019-11-01T00:03:20,873Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566599817) {}
[INFO ] 2019-11-01T00:03:20,875Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:20,883Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566599817) {}
[INFO ] 2019-11-01T00:03:20,884Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566600390) {}
[INFO ] 2019-11-01T00:03:20,885Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:20,898Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566600390) {}
[INFO ] 2019-11-01T00:03:20,900Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566600390) {}
[INFO ] 2019-11-01T00:03:20,904Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:20,905Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566600390) {}
[INFO ] 2019-11-01T00:03:20,906Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566600390) {}
[INFO ] 2019-11-01T00:03:20,907Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:20,908Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566600390) {}
[INFO ] 2019-11-01T00:03:20,911Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:03:20,912Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:03:20,928Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:03:20,943Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@1e0ed693 {}
[INFO ] 2019-11-01T00:03:20,952Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:03:20,953Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:20,954Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:21,053Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:21,061Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:03:21,063Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566601063) {}
[INFO ] 2019-11-01T00:03:21,067Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:21,072Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566601063) {}
[INFO ] 2019-11-01T00:03:21,073Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566601063) {}
[INFO ] 2019-11-01T00:03:21,202Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:03:21,333Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:03:21,474Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:03:21,476Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:03:21,487Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:03:21,489Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:03:21,490Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:21,490Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:21,491Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:03:21,502Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 65D352036BB2C9C95D9DA049EDF0B06FD0976E7AC8466EC4A22548371877E22F, not inserting the second time {}
[INFO ] 2019-11-01T00:03:21,507Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566599236) {}
[INFO ] 2019-11-01T00:03:21,508Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:21,514Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566599236) {}
[INFO ] 2019-11-01T00:03:21,521Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566601063) {}
[INFO ] 2019-11-01T00:03:21,527Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:21,534Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566601063) {}
[INFO ] 2019-11-01T00:03:21,535Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566599817) {}
[INFO ] 2019-11-01T00:03:21,536Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:21,550Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566599817) {}
[INFO ] 2019-11-01T00:03:21,551Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566601063) {}
[INFO ] 2019-11-01T00:03:21,552Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:21,564Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566601063) {}
[INFO ] 2019-11-01T00:03:21,565Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566600390) {}
[INFO ] 2019-11-01T00:03:21,566Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:21,575Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566600390) {}
[INFO ] 2019-11-01T00:03:21,576Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566601063) {}
[INFO ] 2019-11-01T00:03:21,578Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:21,590Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566601063) {}
[INFO ] 2019-11-01T00:03:21,592Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566601063) {}
[INFO ] 2019-11-01T00:03:21,596Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:21,597Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566601063) {}
[INFO ] 2019-11-01T00:03:21,598Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566601063) {}
[INFO ] 2019-11-01T00:03:21,599Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:21,599Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566601063) {}
[INFO ] 2019-11-01T00:03:21,607Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:03:21,608Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:03:21,623Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:03:21,631Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@691fc774 {}
[INFO ] 2019-11-01T00:03:21,643Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:03:21,644Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:21,645Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:21,737Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:21,748Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:03:21,749Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566601749) {}
[INFO ] 2019-11-01T00:03:21,753Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:21,756Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566601749) {}
[INFO ] 2019-11-01T00:03:21,757Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566601749) {}
[INFO ] 2019-11-01T00:03:21,910Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:03:22,042Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:03:22,179Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:03:22,181Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:03:22,191Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:03:22,192Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:03:22,193Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:22,194Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:22,195Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:03:22,205Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key B59632B80B677E2AAA45DE8FC8963F1A22B11FBBA00B48C1BCD544F12A668673, not inserting the second time {}
[INFO ] 2019-11-01T00:03:22,213Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566599236) {}
[INFO ] 2019-11-01T00:03:22,219Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:22,232Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566599236) {}
[INFO ] 2019-11-01T00:03:22,234Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566601749) {}
[INFO ] 2019-11-01T00:03:22,235Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:22,241Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566601749) {}
[INFO ] 2019-11-01T00:03:22,242Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566599817) {}
[INFO ] 2019-11-01T00:03:22,244Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:22,249Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566599817) {}
[INFO ] 2019-11-01T00:03:22,251Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566601749) {}
[INFO ] 2019-11-01T00:03:22,252Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:22,257Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566601749) {}
[INFO ] 2019-11-01T00:03:22,258Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566600390) {}
[INFO ] 2019-11-01T00:03:22,260Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:22,265Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566600390) {}
[INFO ] 2019-11-01T00:03:22,266Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566601749) {}
[INFO ] 2019-11-01T00:03:22,267Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:22,272Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566601749) {}
[INFO ] 2019-11-01T00:03:22,273Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566601063) {}
[INFO ] 2019-11-01T00:03:22,275Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:22,280Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566601063) {}
[INFO ] 2019-11-01T00:03:22,281Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566601749) {}
[INFO ] 2019-11-01T00:03:22,282Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:22,287Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566601749) {}
[INFO ] 2019-11-01T00:03:22,288Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566601749) {}
[INFO ] 2019-11-01T00:03:22,291Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:22,292Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566601749) {}
[INFO ] 2019-11-01T00:03:22,293Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566601749) {}
[INFO ] 2019-11-01T00:03:22,294Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:22,295Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566601749) {}
[INFO ] 2019-11-01T00:03:22,300Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:03:22,301Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:22,302Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:03:22,303Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:22,304Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:03:22,306Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:22,307Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:03:22,307Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:22,426Z [Mock network] flow.[bf478739-fb2e-45ed-a582-4bda47d8cb42].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-7549758251584510240). {}
[INFO ] 2019-11-01T00:03:22,524Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-7549758251584510240). {invocation_id=7240f2d1-33d4-410c-9580-91e0916b21f3, invocation_timestamp=2019-11-01T00:03:22.522Z, session_id=7240f2d1-33d4-410c-9580-91e0916b21f3, session_timestamp=2019-11-01T00:03:22.522Z}
[INFO ] 2019-11-01T00:03:22,785Z [Mock network] flow.[bf478739-fb2e-45ed-a582-4bda47d8cb42].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=5469387521104629608). {}
[INFO ] 2019-11-01T00:03:22,823Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=5469387521104629608). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=af52bf6a-70ff-4a1a-b6f7-87adaed51e51, invocation_timestamp=2019-11-01T00:03:22.822Z, session_id=af52bf6a-70ff-4a1a-b6f7-87adaed51e51, session_timestamp=2019-11-01T00:03:22.822Z}
[INFO ] 2019-11-01T00:03:22,916Z [Mock network] flow.[bf478739-fb2e-45ed-a582-4bda47d8cb42].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-7281174355566372817). {}
[INFO ] 2019-11-01T00:03:22,947Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-7281174355566372817). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=d9c0ad4a-81b8-4f21-b0b6-a69f60145c77, invocation_timestamp=2019-11-01T00:03:22.944Z, session_id=d9c0ad4a-81b8-4f21-b0b6-a69f60145c77, session_timestamp=2019-11-01T00:03:22.944Z}
[INFO ] 2019-11-01T00:03:23,080Z [Mock network] flow.[7d20c6df-832b-4a25-bd16-08fa363af12c].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-5776289271174162289). {}
[INFO ] 2019-11-01T00:03:23,116Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-5776289271174162289). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=15221a65-0ac4-44b6-8ab1-042b0f5bd666, invocation_timestamp=2019-11-01T00:03:23.116Z, session_id=15221a65-0ac4-44b6-8ab1-042b0f5bd666, session_timestamp=2019-11-01T00:03:23.116Z}
[INFO ] 2019-11-01T00:03:23,376Z [Mock network] flow.[2b3386c7-fa48-45de-954f-d89e8211bfc5].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=-8321474544013026486). {}
[INFO ] 2019-11-01T00:03:23,431Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-8321474544013026486). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=3c0f6e36-5d3f-4de8-80d0-9b3fab512264, invocation_timestamp=2019-11-01T00:03:23.429Z, session_id=3c0f6e36-5d3f-4de8-80d0-9b3fab512264, session_timestamp=2019-11-01T00:03:23.429Z}
[INFO ] 2019-11-01T00:03:23,457Z [Mock network] flow.[ac132c23-d0c3-4fe4-9c01-d611d639fb82].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:03:23,565Z [Mock network] flow.[ac132c23-d0c3-4fe4-9c01-d611d639fb82].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:03:23,698Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:03:23,741Z [Mock network] flow.[1b2e0dc3-1169-4621-96cc-2cb23c6fd800].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-9208036518477133181). {}
[INFO ] 2019-11-01T00:03:23,771Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-9208036518477133181). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=4dacb7b9-638f-4a10-babf-0e049c7728e6, invocation_timestamp=2019-11-01T00:03:23.770Z, session_id=4dacb7b9-638f-4a10-babf-0e049c7728e6, session_timestamp=2019-11-01T00:03:23.770Z}
[INFO ] 2019-11-01T00:03:23,784Z [Mock network] flow.[04f0a324-ee3d-44f7-9b17-64143fec6db9].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:03:23,827Z [Mock network] flow.[04f0a324-ee3d-44f7-9b17-64143fec6db9].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:03:23,863Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.qn7265.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:03:23,970Z [Mock network] flow.[1b2e0dc3-1169-4621-96cc-2cb23c6fd800].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:03:24,001Z [Mock network] flow.[1b2e0dc3-1169-4621-96cc-2cb23c6fd800].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:03:24,004Z [Mock network] flow.[1b2e0dc3-1169-4621-96cc-2cb23c6fd800].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:03:24,033Z [Mock network] flow.[1b2e0dc3-1169-4621-96cc-2cb23c6fd800].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:03:24,138Z [Mock network] flow.[04f0a324-ee3d-44f7-9b17-64143fec6db9].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-1377158347678273777). {}
[INFO ] 2019-11-01T00:03:24,196Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-1377158347678273777). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=8f81620f-4919-4c88-a074-fbd31c909156, invocation_timestamp=2019-11-01T00:03:24.195Z, session_id=8f81620f-4919-4c88-a074-fbd31c909156, session_timestamp=2019-11-01T00:03:24.195Z}
[INFO ] 2019-11-01T00:03:24,211Z [Mock network] flow.[40527324-f953-4596-a44c-24667128c77a].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:03:24,261Z [Mock network] flow.[40527324-f953-4596-a44c-24667128c77a].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:03:24,263Z [Mock network] flow.[40527324-f953-4596-a44c-24667128c77a].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:03:24,294Z [Mock network] flow.[40527324-f953-4596-a44c-24667128c77a].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:03:24,488Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:03:24,490Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:03:24,493Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@7d333aa3 {}
[INFO ] 2019-11-01T00:03:24,503Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:03:24,504Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:24,505Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:24,608Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:24,614Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:03:24,615Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566604615) {}
[INFO ] 2019-11-01T00:03:24,618Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:24,624Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566604615) {}
[INFO ] 2019-11-01T00:03:24,625Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566604615) {}
[INFO ] 2019-11-01T00:03:24,761Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:03:24,896Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:03:25,029Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:03:25,030Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:03:25,046Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:03:25,051Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:03:25,052Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:03:25,053Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:25,056Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:25,057Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:03:25,076Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key B3B086AA6006DFC1D29455A111C860A11A8F941B5164F392E28B00F4E1FC43A8, not inserting the second time {}
[INFO ] 2019-11-01T00:03:25,082Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566604615) {}
[INFO ] 2019-11-01T00:03:25,085Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:25,093Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566604615) {}
[INFO ] 2019-11-01T00:03:25,094Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566604615) {}
[INFO ] 2019-11-01T00:03:25,095Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:25,095Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566604615) {}
[INFO ] 2019-11-01T00:03:25,105Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:03:25,106Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:03:25,131Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:03:25,141Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@5fc45255 {}
[INFO ] 2019-11-01T00:03:25,149Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:03:25,150Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:25,151Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:25,236Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:25,241Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:03:25,242Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566605242) {}
[INFO ] 2019-11-01T00:03:25,245Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:25,247Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566605242) {}
[INFO ] 2019-11-01T00:03:25,248Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566605242) {}
[INFO ] 2019-11-01T00:03:25,374Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:03:25,505Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:03:25,593Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:03:25,594Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:03:25,604Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:03:25,605Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:03:25,606Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:25,607Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:25,607Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:03:25,651Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 19573E100346350F6269409CA91B79EE4AC7F05F004D62B3424C64F8CE091728, not inserting the second time {}
[INFO ] 2019-11-01T00:03:25,660Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566604615) {}
[INFO ] 2019-11-01T00:03:25,661Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:25,681Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566604615) {}
[INFO ] 2019-11-01T00:03:25,682Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566605242) {}
[INFO ] 2019-11-01T00:03:25,684Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:25,698Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566605242) {}
[INFO ] 2019-11-01T00:03:25,699Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566605242) {}
[INFO ] 2019-11-01T00:03:25,705Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:25,706Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566605242) {}
[INFO ] 2019-11-01T00:03:25,707Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566605242) {}
[INFO ] 2019-11-01T00:03:25,708Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:25,708Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566605242) {}
[INFO ] 2019-11-01T00:03:25,711Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:03:25,711Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:03:25,730Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:03:25,738Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@16a3a72c {}
[INFO ] 2019-11-01T00:03:25,754Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:03:25,755Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:25,756Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:25,848Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:25,855Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:03:25,856Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566605856) {}
[INFO ] 2019-11-01T00:03:25,859Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:25,862Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566605856) {}
[INFO ] 2019-11-01T00:03:25,863Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566605856) {}
[INFO ] 2019-11-01T00:03:25,992Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:03:26,109Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:03:26,200Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:03:26,201Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:03:26,216Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:03:26,217Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:03:26,218Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:26,219Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:26,219Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:03:26,229Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key D15CE891167663E301D45D0C236A1ACA38E94E02BE29FB39821F673708B8112F, not inserting the second time {}
[INFO ] 2019-11-01T00:03:26,235Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566604615) {}
[INFO ] 2019-11-01T00:03:26,237Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:26,242Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566604615) {}
[INFO ] 2019-11-01T00:03:26,243Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566605856) {}
[INFO ] 2019-11-01T00:03:26,245Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:26,249Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566605856) {}
[INFO ] 2019-11-01T00:03:26,250Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566605242) {}
[INFO ] 2019-11-01T00:03:26,251Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:26,255Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566605242) {}
[INFO ] 2019-11-01T00:03:26,256Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566605856) {}
[INFO ] 2019-11-01T00:03:26,257Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:26,261Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566605856) {}
[INFO ] 2019-11-01T00:03:26,262Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566605856) {}
[INFO ] 2019-11-01T00:03:26,265Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:26,271Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566605856) {}
[INFO ] 2019-11-01T00:03:26,272Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566605856) {}
[INFO ] 2019-11-01T00:03:26,273Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:26,274Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566605856) {}
[INFO ] 2019-11-01T00:03:26,276Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:03:26,277Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:03:26,291Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:03:26,301Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@22fd1b1d {}
[INFO ] 2019-11-01T00:03:26,312Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:03:26,313Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:26,313Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:26,431Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:26,438Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:03:26,439Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566606439) {}
[INFO ] 2019-11-01T00:03:26,442Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:26,446Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566606439) {}
[INFO ] 2019-11-01T00:03:26,447Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566606439) {}
[INFO ] 2019-11-01T00:03:26,586Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:03:26,699Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:03:26,789Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:03:26,791Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:03:26,808Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:03:26,809Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:03:26,810Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:26,810Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:26,811Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:03:26,821Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key DA20E753C91EAB3E3834BD843506227FAF6BBCBE5B2542D1E9A73A239CE76F2B, not inserting the second time {}
[INFO ] 2019-11-01T00:03:26,825Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566604615) {}
[INFO ] 2019-11-01T00:03:26,826Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:26,833Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566604615) {}
[INFO ] 2019-11-01T00:03:26,836Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566606439) {}
[INFO ] 2019-11-01T00:03:26,838Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:26,849Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566606439) {}
[INFO ] 2019-11-01T00:03:26,851Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566605242) {}
[INFO ] 2019-11-01T00:03:26,853Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:26,864Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566605242) {}
[INFO ] 2019-11-01T00:03:26,868Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566606439) {}
[INFO ] 2019-11-01T00:03:26,869Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:26,878Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566606439) {}
[INFO ] 2019-11-01T00:03:26,879Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566605856) {}
[INFO ] 2019-11-01T00:03:26,885Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:26,900Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566605856) {}
[INFO ] 2019-11-01T00:03:26,900Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566606439) {}
[INFO ] 2019-11-01T00:03:26,902Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:26,906Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566606439) {}
[INFO ] 2019-11-01T00:03:26,907Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566606439) {}
[INFO ] 2019-11-01T00:03:26,909Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:26,910Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566606439) {}
[INFO ] 2019-11-01T00:03:26,911Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566606439) {}
[INFO ] 2019-11-01T00:03:26,911Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:26,912Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566606439) {}
[INFO ] 2019-11-01T00:03:26,914Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:03:26,915Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:03:26,924Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:03:26,929Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@639af61f {}
[INFO ] 2019-11-01T00:03:26,939Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:03:26,941Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:26,941Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:26,998Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:27,007Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:03:27,008Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566607008) {}
[INFO ] 2019-11-01T00:03:27,022Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:27,027Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566607008) {}
[INFO ] 2019-11-01T00:03:27,028Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566607008) {}
[INFO ] 2019-11-01T00:03:27,177Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:03:27,294Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:03:27,384Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:03:27,385Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:03:27,395Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:03:27,396Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:03:27,397Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:27,398Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:27,398Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:03:27,411Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 888E6485D3C055E3A15E83A2AD39319E6EEEF3F92F10687BF037AE6CF9BBDE98, not inserting the second time {}
[INFO ] 2019-11-01T00:03:27,415Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566604615) {}
[INFO ] 2019-11-01T00:03:27,416Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:27,421Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566604615) {}
[INFO ] 2019-11-01T00:03:27,422Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566607008) {}
[INFO ] 2019-11-01T00:03:27,431Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:27,439Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566607008) {}
[INFO ] 2019-11-01T00:03:27,440Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566605242) {}
[INFO ] 2019-11-01T00:03:27,447Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:27,452Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566605242) {}
[INFO ] 2019-11-01T00:03:27,453Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566607008) {}
[INFO ] 2019-11-01T00:03:27,454Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:27,458Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566607008) {}
[INFO ] 2019-11-01T00:03:27,459Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566605856) {}
[INFO ] 2019-11-01T00:03:27,460Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:27,467Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566605856) {}
[INFO ] 2019-11-01T00:03:27,468Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566607008) {}
[INFO ] 2019-11-01T00:03:27,473Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:27,486Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566607008) {}
[INFO ] 2019-11-01T00:03:27,486Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566606439) {}
[INFO ] 2019-11-01T00:03:27,488Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:27,494Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566606439) {}
[INFO ] 2019-11-01T00:03:27,495Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566607008) {}
[INFO ] 2019-11-01T00:03:27,496Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:27,500Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566607008) {}
[INFO ] 2019-11-01T00:03:27,501Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566607008) {}
[INFO ] 2019-11-01T00:03:27,504Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:27,505Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566607008) {}
[INFO ] 2019-11-01T00:03:27,506Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566607008) {}
[INFO ] 2019-11-01T00:03:27,507Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:27,507Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566607008) {}
[INFO ] 2019-11-01T00:03:27,508Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:03:27,509Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:27,509Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:03:27,510Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:27,511Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:03:27,512Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:27,513Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:03:27,513Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:27,570Z [Mock network] flow.[574e3905-3c92-4afa-ac63-ec56f9e947ec].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=3731876928848765190). {}
[INFO ] 2019-11-01T00:03:27,631Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=3731876928848765190). {invocation_id=5c12557d-daac-4add-a591-f1a480a3e497, invocation_timestamp=2019-11-01T00:03:27.630Z, session_id=5c12557d-daac-4add-a591-f1a480a3e497, session_timestamp=2019-11-01T00:03:27.630Z}
[INFO ] 2019-11-01T00:03:27,797Z [Mock network] flow.[574e3905-3c92-4afa-ac63-ec56f9e947ec].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=3270916350301939251). {}
[INFO ] 2019-11-01T00:03:27,824Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=3270916350301939251). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=7e452a1a-54a9-4dd8-88a9-cbe51b9f1b0a, invocation_timestamp=2019-11-01T00:03:27.816Z, session_id=7e452a1a-54a9-4dd8-88a9-cbe51b9f1b0a, session_timestamp=2019-11-01T00:03:27.816Z}
[INFO ] 2019-11-01T00:03:27,897Z [Mock network] flow.[574e3905-3c92-4afa-ac63-ec56f9e947ec].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-7425051537294194742). {}
[INFO ] 2019-11-01T00:03:27,935Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-7425051537294194742). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=b8bc4f1b-642a-41f9-b806-606bf2c3a1d1, invocation_timestamp=2019-11-01T00:03:27.935Z, session_id=b8bc4f1b-642a-41f9-b806-606bf2c3a1d1, session_timestamp=2019-11-01T00:03:27.935Z}
[INFO ] 2019-11-01T00:03:28,044Z [Mock network] flow.[6b845c31-ef4f-4000-b2c8-8aaed89a634b].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-4767421309603074640). {}
[INFO ] 2019-11-01T00:03:28,088Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-4767421309603074640). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=ea41eb07-19bd-4e6e-9d59-14403f0bc042, invocation_timestamp=2019-11-01T00:03:28.087Z, session_id=ea41eb07-19bd-4e6e-9d59-14403f0bc042, session_timestamp=2019-11-01T00:03:28.087Z}
[INFO ] 2019-11-01T00:03:28,179Z [Mock network] flow.[7f820aec-f146-4a7d-84b5-eee699ecb5a7].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=-9099061289332425307). {}
[INFO ] 2019-11-01T00:03:28,221Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-9099061289332425307). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=2c812961-8c42-4517-a773-a1c3780a9481, invocation_timestamp=2019-11-01T00:03:28.220Z, session_id=2c812961-8c42-4517-a773-a1c3780a9481, session_timestamp=2019-11-01T00:03:28.220Z}
[INFO ] 2019-11-01T00:03:28,246Z [Mock network] flow.[d292079e-1087-4cf6-8bf2-9b2383e36d68].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:03:28,301Z [Mock network] flow.[d292079e-1087-4cf6-8bf2-9b2383e36d68].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:03:28,370Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:03:28,397Z [Mock network] flow.[a1996a19-5097-4a71-be36-dcc8213b223a].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=815534979933865534). {}
[INFO ] 2019-11-01T00:03:28,415Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=815534979933865534). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=2858e72f-38e6-4e3d-a0ef-6a113c13aceb, invocation_timestamp=2019-11-01T00:03:28.414Z, session_id=2858e72f-38e6-4e3d-a0ef-6a113c13aceb, session_timestamp=2019-11-01T00:03:28.414Z}
[INFO ] 2019-11-01T00:03:28,425Z [Mock network] flow.[a9a5a6d0-9c13-4de5-9e01-6c82ababad03].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:03:28,469Z [Mock network] flow.[a9a5a6d0-9c13-4de5-9e01-6c82ababad03].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:03:28,506Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.qn7265.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:03:28,573Z [Mock network] flow.[a1996a19-5097-4a71-be36-dcc8213b223a].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:03:28,603Z [Mock network] flow.[a1996a19-5097-4a71-be36-dcc8213b223a].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:03:28,605Z [Mock network] flow.[a1996a19-5097-4a71-be36-dcc8213b223a].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:03:28,629Z [Mock network] flow.[a1996a19-5097-4a71-be36-dcc8213b223a].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:03:28,702Z [Mock network] flow.[a9a5a6d0-9c13-4de5-9e01-6c82ababad03].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-6506436096318198559). {}
[INFO ] 2019-11-01T00:03:28,714Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-6506436096318198559). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=9c3a76b8-fda3-4e6b-b291-769e6ff077e7, invocation_timestamp=2019-11-01T00:03:28.713Z, session_id=9c3a76b8-fda3-4e6b-b291-769e6ff077e7, session_timestamp=2019-11-01T00:03:28.713Z}
[INFO ] 2019-11-01T00:03:28,726Z [Mock network] flow.[5ae30c76-644b-4342-af20-d90e8abded6b].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:03:28,761Z [Mock network] flow.[5ae30c76-644b-4342-af20-d90e8abded6b].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:03:28,762Z [Mock network] flow.[5ae30c76-644b-4342-af20-d90e8abded6b].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:03:28,815Z [Mock network] flow.[5ae30c76-644b-4342-af20-d90e8abded6b].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:03:28,948Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:03:28,950Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:03:28,953Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@7f08365d {}
[INFO ] 2019-11-01T00:03:28,965Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:03:28,966Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:28,966Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:29,032Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:29,038Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:03:29,039Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566609039) {}
[INFO ] 2019-11-01T00:03:29,042Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:29,047Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566609039) {}
[INFO ] 2019-11-01T00:03:29,048Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566609039) {}
[INFO ] 2019-11-01T00:03:29,176Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:03:29,321Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:03:29,404Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:03:29,406Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:03:29,416Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:03:29,419Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:03:29,420Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:03:29,421Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:29,422Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:29,423Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:03:29,433Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 786B2C683BDB19CBDA4B1B25C7382FF7F9A47FEA5E22EBE7766468C8DB193FB6, not inserting the second time {}
[INFO ] 2019-11-01T00:03:29,437Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566609039) {}
[INFO ] 2019-11-01T00:03:29,444Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:29,444Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566609039) {}
[INFO ] 2019-11-01T00:03:29,446Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566609039) {}
[INFO ] 2019-11-01T00:03:29,447Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:29,447Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566609039) {}
[INFO ] 2019-11-01T00:03:29,449Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:03:29,450Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:03:29,459Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:03:29,464Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@4b98d750 {}
[INFO ] 2019-11-01T00:03:29,472Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:03:29,473Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:29,474Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:29,530Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:29,535Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:03:29,536Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566609536) {}
[INFO ] 2019-11-01T00:03:29,538Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:29,540Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566609536) {}
[INFO ] 2019-11-01T00:03:29,541Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566609536) {}
[INFO ] 2019-11-01T00:03:29,678Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:03:29,807Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:03:29,897Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:03:29,899Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:03:29,909Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:03:29,911Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:03:29,911Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:29,912Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:29,912Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:03:29,922Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 9F99CBF5A9DF052F484444DDE8B500E69A6843E2C28CCB464877A4EF45C8A4EF, not inserting the second time {}
[INFO ] 2019-11-01T00:03:29,927Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566609039) {}
[INFO ] 2019-11-01T00:03:29,928Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:29,932Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566609039) {}
[INFO ] 2019-11-01T00:03:29,933Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566609536) {}
[INFO ] 2019-11-01T00:03:29,936Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:29,941Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566609536) {}
[INFO ] 2019-11-01T00:03:29,942Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566609536) {}
[INFO ] 2019-11-01T00:03:29,948Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:29,949Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566609536) {}
[INFO ] 2019-11-01T00:03:29,951Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566609536) {}
[INFO ] 2019-11-01T00:03:29,952Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:29,953Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566609536) {}
[INFO ] 2019-11-01T00:03:29,956Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:03:29,957Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:03:29,978Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:03:29,987Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@3452dcff {}
[INFO ] 2019-11-01T00:03:29,996Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:03:29,997Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:29,998Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:30,119Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:30,125Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:03:30,126Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566610126) {}
[INFO ] 2019-11-01T00:03:30,129Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:30,132Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566610126) {}
[INFO ] 2019-11-01T00:03:30,133Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566610126) {}
[INFO ] 2019-11-01T00:03:30,272Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:03:30,383Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:03:30,475Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:03:30,477Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:03:30,487Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:03:30,488Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:03:30,489Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:30,490Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:30,491Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:03:30,500Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 4077DFA0B9D740F27BCEEBC4D5E82A53B83C1A0044421EC00CA280DE0B4935EB, not inserting the second time {}
[INFO ] 2019-11-01T00:03:30,508Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566609039) {}
[INFO ] 2019-11-01T00:03:30,512Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:30,517Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566609039) {}
[INFO ] 2019-11-01T00:03:30,517Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566610126) {}
[INFO ] 2019-11-01T00:03:30,518Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:30,522Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566610126) {}
[INFO ] 2019-11-01T00:03:30,523Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566609536) {}
[INFO ] 2019-11-01T00:03:30,524Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:30,527Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566609536) {}
[INFO ] 2019-11-01T00:03:30,528Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566610126) {}
[INFO ] 2019-11-01T00:03:30,529Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:30,533Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566610126) {}
[INFO ] 2019-11-01T00:03:30,533Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566610126) {}
[INFO ] 2019-11-01T00:03:30,535Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:30,536Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566610126) {}
[INFO ] 2019-11-01T00:03:30,537Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566610126) {}
[INFO ] 2019-11-01T00:03:30,537Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:30,538Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566610126) {}
[INFO ] 2019-11-01T00:03:30,540Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:03:30,541Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:03:30,551Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:03:30,556Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6509f90c {}
[INFO ] 2019-11-01T00:03:30,565Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:03:30,565Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:30,566Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:30,618Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:30,624Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:03:30,624Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566610624) {}
[INFO ] 2019-11-01T00:03:30,627Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:30,629Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566610624) {}
[INFO ] 2019-11-01T00:03:30,630Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566610624) {}
[INFO ] 2019-11-01T00:03:30,744Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:03:30,860Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:03:30,986Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:03:30,989Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:03:31,002Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:03:31,003Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:03:31,004Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:31,005Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:31,006Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:03:31,020Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 45C5E77180B3304DFF57BA871C2A337C86A15E986EFD37AD8862EEC547E51B10, not inserting the second time {}
[INFO ] 2019-11-01T00:03:31,024Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566609039) {}
[INFO ] 2019-11-01T00:03:31,027Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:31,037Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566609039) {}
[INFO ] 2019-11-01T00:03:31,038Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566610624) {}
[INFO ] 2019-11-01T00:03:31,043Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:31,052Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566610624) {}
[INFO ] 2019-11-01T00:03:31,053Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566609536) {}
[INFO ] 2019-11-01T00:03:31,055Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:31,058Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566609536) {}
[INFO ] 2019-11-01T00:03:31,059Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566610624) {}
[INFO ] 2019-11-01T00:03:31,060Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:31,072Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566610624) {}
[INFO ] 2019-11-01T00:03:31,073Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566610126) {}
[INFO ] 2019-11-01T00:03:31,074Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:31,083Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566610126) {}
[INFO ] 2019-11-01T00:03:31,084Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566610624) {}
[INFO ] 2019-11-01T00:03:31,085Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:31,091Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566610624) {}
[INFO ] 2019-11-01T00:03:31,092Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566610624) {}
[INFO ] 2019-11-01T00:03:31,095Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:31,096Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566610624) {}
[INFO ] 2019-11-01T00:03:31,097Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566610624) {}
[INFO ] 2019-11-01T00:03:31,097Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:31,098Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566610624) {}
[INFO ] 2019-11-01T00:03:31,102Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:03:31,103Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:03:31,122Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:03:31,132Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@1400263a {}
[INFO ] 2019-11-01T00:03:31,142Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:03:31,143Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:31,143Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:31,246Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:31,264Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:03:31,265Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566611265) {}
[INFO ] 2019-11-01T00:03:31,272Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:31,274Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566611265) {}
[INFO ] 2019-11-01T00:03:31,274Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566611265) {}
[INFO ] 2019-11-01T00:03:31,418Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:03:31,536Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:03:31,618Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:03:31,619Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:03:31,629Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:03:31,630Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:03:31,631Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:31,632Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:31,632Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:03:31,642Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key BA346E3994D9C0BBE24596F3D34C2CE73B1A7F152D914EDC5685BFA5E0257897, not inserting the second time {}
[INFO ] 2019-11-01T00:03:31,645Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566609039) {}
[INFO ] 2019-11-01T00:03:31,648Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:31,656Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566609039) {}
[INFO ] 2019-11-01T00:03:31,657Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566611265) {}
[INFO ] 2019-11-01T00:03:31,658Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:31,663Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566611265) {}
[INFO ] 2019-11-01T00:03:31,663Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566609536) {}
[INFO ] 2019-11-01T00:03:31,666Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:31,673Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566609536) {}
[INFO ] 2019-11-01T00:03:31,676Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566611265) {}
[INFO ] 2019-11-01T00:03:31,678Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:31,688Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566611265) {}
[INFO ] 2019-11-01T00:03:31,689Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566610126) {}
[INFO ] 2019-11-01T00:03:31,693Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:31,702Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566610126) {}
[INFO ] 2019-11-01T00:03:31,703Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566611265) {}
[INFO ] 2019-11-01T00:03:31,704Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:31,708Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566611265) {}
[INFO ] 2019-11-01T00:03:31,709Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566610624) {}
[INFO ] 2019-11-01T00:03:31,710Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:31,714Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566610624) {}
[INFO ] 2019-11-01T00:03:31,715Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566611265) {}
[INFO ] 2019-11-01T00:03:31,716Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:31,720Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566611265) {}
[INFO ] 2019-11-01T00:03:31,721Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566611265) {}
[INFO ] 2019-11-01T00:03:31,723Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:31,724Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566611265) {}
[INFO ] 2019-11-01T00:03:31,725Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566611265) {}
[INFO ] 2019-11-01T00:03:31,725Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:31,726Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566611265) {}
[INFO ] 2019-11-01T00:03:31,727Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:03:31,728Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:31,728Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:03:31,729Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:31,730Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:03:31,730Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:31,731Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:03:31,732Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:31,775Z [Mock network] flow.[1c8bacfe-2381-4a29-981b-25ddb5836fea].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-2294011842369660951). {}
[INFO ] 2019-11-01T00:03:31,863Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-2294011842369660951). {invocation_id=dc5084e8-11ea-479d-9ece-8702257fa343, invocation_timestamp=2019-11-01T00:03:31.862Z, session_id=dc5084e8-11ea-479d-9ece-8702257fa343, session_timestamp=2019-11-01T00:03:31.862Z}
[INFO ] 2019-11-01T00:03:32,018Z [Mock network] flow.[1c8bacfe-2381-4a29-981b-25ddb5836fea].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-6121650783713355054). {}
[INFO ] 2019-11-01T00:03:32,032Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-6121650783713355054). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=5c6a84e6-b2d9-4c93-be74-ffc36cd38f07, invocation_timestamp=2019-11-01T00:03:32.032Z, session_id=5c6a84e6-b2d9-4c93-be74-ffc36cd38f07, session_timestamp=2019-11-01T00:03:32.032Z}
[INFO ] 2019-11-01T00:03:32,067Z [Mock network] flow.[1c8bacfe-2381-4a29-981b-25ddb5836fea].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=6928585176497726079). {}
[INFO ] 2019-11-01T00:03:32,086Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=6928585176497726079). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=24153d5c-e865-4d19-9898-ff232815ae6d, invocation_timestamp=2019-11-01T00:03:32.085Z, session_id=24153d5c-e865-4d19-9898-ff232815ae6d, session_timestamp=2019-11-01T00:03:32.085Z}
[INFO ] 2019-11-01T00:03:32,156Z [Mock network] flow.[2d65ec1a-8498-4fd7-9096-3395c6c092fb].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-8738438314728062987). {}
[INFO ] 2019-11-01T00:03:32,181Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-8738438314728062987). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=5b16b320-412e-46a0-b619-d58033fd4c92, invocation_timestamp=2019-11-01T00:03:32.181Z, session_id=5b16b320-412e-46a0-b619-d58033fd4c92, session_timestamp=2019-11-01T00:03:32.181Z}
[INFO ] 2019-11-01T00:03:32,299Z [Mock network] flow.[b56523e8-78b4-4cd3-8082-7a344be36e76].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=8766508539785503273). {}
[INFO ] 2019-11-01T00:03:32,330Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=8766508539785503273). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=168252b4-aeb5-4b73-8837-9e8be121ce91, invocation_timestamp=2019-11-01T00:03:32.329Z, session_id=168252b4-aeb5-4b73-8837-9e8be121ce91, session_timestamp=2019-11-01T00:03:32.329Z}
[INFO ] 2019-11-01T00:03:32,342Z [Mock network] flow.[801f89b7-9b90-41f8-a825-74d9c2768f0b].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:03:32,397Z [Mock network] flow.[801f89b7-9b90-41f8-a825-74d9c2768f0b].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:03:32,452Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:03:32,479Z [Mock network] flow.[12363129-8fbe-4868-bd75-d26fad436013].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=4043112532839138948). {}
[INFO ] 2019-11-01T00:03:32,498Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=4043112532839138948). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=cd531c46-ac76-40c2-87b5-75b68e68c36d, invocation_timestamp=2019-11-01T00:03:32.496Z, session_id=cd531c46-ac76-40c2-87b5-75b68e68c36d, session_timestamp=2019-11-01T00:03:32.496Z}
[INFO ] 2019-11-01T00:03:32,511Z [Mock network] flow.[19f5ff51-22b5-40e1-9d34-ed9fc906a6fa].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:03:32,554Z [Mock network] flow.[19f5ff51-22b5-40e1-9d34-ed9fc906a6fa].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:03:32,615Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.qn7265.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:03:32,676Z [Mock network] flow.[12363129-8fbe-4868-bd75-d26fad436013].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:03:32,700Z [Mock network] flow.[12363129-8fbe-4868-bd75-d26fad436013].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:03:32,702Z [Mock network] flow.[12363129-8fbe-4868-bd75-d26fad436013].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:03:32,737Z [Mock network] flow.[12363129-8fbe-4868-bd75-d26fad436013].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:03:32,807Z [Mock network] flow.[19f5ff51-22b5-40e1-9d34-ed9fc906a6fa].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=7793604374344648311). {}
[INFO ] 2019-11-01T00:03:32,853Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=7793604374344648311). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=3bdf035b-621d-40a4-9d92-019fde74e08a, invocation_timestamp=2019-11-01T00:03:32.852Z, session_id=3bdf035b-621d-40a4-9d92-019fde74e08a, session_timestamp=2019-11-01T00:03:32.852Z}
[INFO ] 2019-11-01T00:03:32,865Z [Mock network] flow.[c9d72473-50d1-4d65-8b7b-eec1704fa10a].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:03:32,899Z [Mock network] flow.[c9d72473-50d1-4d65-8b7b-eec1704fa10a].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:03:32,901Z [Mock network] flow.[c9d72473-50d1-4d65-8b7b-eec1704fa10a].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:03:32,921Z [Mock network] flow.[c9d72473-50d1-4d65-8b7b-eec1704fa10a].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:03:33,038Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:03:33,040Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:03:33,045Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@1a73ddfd {}
[INFO ] 2019-11-01T00:03:33,052Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:03:33,053Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:33,054Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:33,169Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:33,177Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:03:33,177Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566613177) {}
[INFO ] 2019-11-01T00:03:33,180Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:33,186Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566613177) {}
[INFO ] 2019-11-01T00:03:33,187Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566613177) {}
[INFO ] 2019-11-01T00:03:33,317Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:03:33,433Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:03:33,523Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:03:33,525Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:03:33,532Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:03:33,535Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:03:33,536Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:03:33,536Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:33,537Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:33,538Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:03:33,547Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key A8372BF234AA5057CE7B65AD15D652FC8DE30861B6D6AF593CC6222134FA4E8E, not inserting the second time {}
[INFO ] 2019-11-01T00:03:33,551Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566613177) {}
[INFO ] 2019-11-01T00:03:33,553Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:33,553Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566613177) {}
[INFO ] 2019-11-01T00:03:33,554Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566613177) {}
[INFO ] 2019-11-01T00:03:33,559Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:33,560Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566613177) {}
[INFO ] 2019-11-01T00:03:33,562Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:03:33,563Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:03:33,579Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:03:33,590Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@4e830b9c {}
[INFO ] 2019-11-01T00:03:33,596Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:03:33,597Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:33,598Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:33,681Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:33,686Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:03:33,687Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566613687) {}
[INFO ] 2019-11-01T00:03:33,690Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:33,692Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566613687) {}
[INFO ] 2019-11-01T00:03:33,693Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566613687) {}
[INFO ] 2019-11-01T00:03:33,878Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:03:33,999Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:03:34,089Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:03:34,090Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:03:34,100Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:03:34,101Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:03:34,102Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:34,102Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:34,103Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:03:34,113Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key CF77F109B2C94BB1F18FB5D9496633244CC76808C57C87AF7DA1855689CF361B, not inserting the second time {}
[INFO ] 2019-11-01T00:03:34,116Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566613177) {}
[INFO ] 2019-11-01T00:03:34,117Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:34,129Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566613177) {}
[INFO ] 2019-11-01T00:03:34,130Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566613687) {}
[INFO ] 2019-11-01T00:03:34,131Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:34,134Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566613687) {}
[INFO ] 2019-11-01T00:03:34,135Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566613687) {}
[INFO ] 2019-11-01T00:03:34,137Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:34,138Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566613687) {}
[INFO ] 2019-11-01T00:03:34,138Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566613687) {}
[INFO ] 2019-11-01T00:03:34,139Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:34,139Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566613687) {}
[INFO ] 2019-11-01T00:03:34,141Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:03:34,141Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:03:34,150Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:03:34,155Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@b17787f {}
[INFO ] 2019-11-01T00:03:34,166Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:03:34,167Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:34,168Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:34,229Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:34,238Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:03:34,240Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566614240) {}
[INFO ] 2019-11-01T00:03:34,243Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:34,246Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566614240) {}
[INFO ] 2019-11-01T00:03:34,247Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566614240) {}
[INFO ] 2019-11-01T00:03:34,378Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:03:34,492Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:03:34,621Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:03:34,623Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:03:34,632Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:03:34,633Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:03:34,634Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:34,635Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:34,635Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:03:34,647Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 1C00F07BC0E8B29D4E9ED9E6EB5266EA21E6FFE2FDDEC9F3C819A757E8DF84C1, not inserting the second time {}
[INFO ] 2019-11-01T00:03:34,652Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566613177) {}
[INFO ] 2019-11-01T00:03:34,653Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:34,661Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566613177) {}
[INFO ] 2019-11-01T00:03:34,662Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566614240) {}
[INFO ] 2019-11-01T00:03:34,670Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:34,674Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566614240) {}
[INFO ] 2019-11-01T00:03:34,675Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566613687) {}
[INFO ] 2019-11-01T00:03:34,676Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:34,680Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566613687) {}
[INFO ] 2019-11-01T00:03:34,681Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566614240) {}
[INFO ] 2019-11-01T00:03:34,682Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:34,685Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566614240) {}
[INFO ] 2019-11-01T00:03:34,686Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566614240) {}
[INFO ] 2019-11-01T00:03:34,688Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:34,689Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566614240) {}
[INFO ] 2019-11-01T00:03:34,690Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566614240) {}
[INFO ] 2019-11-01T00:03:34,690Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:34,691Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566614240) {}
[INFO ] 2019-11-01T00:03:34,693Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:03:34,694Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:03:34,703Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:03:34,717Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@599ac2a3 {}
[INFO ] 2019-11-01T00:03:34,741Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:03:34,742Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:34,742Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:34,810Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:34,824Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:03:34,825Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566614825) {}
[INFO ] 2019-11-01T00:03:34,827Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:34,829Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566614825) {}
[INFO ] 2019-11-01T00:03:34,830Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566614825) {}
[INFO ] 2019-11-01T00:03:34,943Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:03:35,059Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:03:35,150Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:03:35,151Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:03:35,164Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:03:35,166Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:03:35,167Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:35,167Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:35,168Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:03:35,215Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 1263BB987D45C0FB0BEBDEA20876E61AA70A503BAA6E0634DF1303DF1D8F97A4, not inserting the second time {}
[INFO ] 2019-11-01T00:03:35,219Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566613177) {}
[INFO ] 2019-11-01T00:03:35,220Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:35,224Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566613177) {}
[INFO ] 2019-11-01T00:03:35,225Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566614825) {}
[INFO ] 2019-11-01T00:03:35,226Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:35,231Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566614825) {}
[INFO ] 2019-11-01T00:03:35,231Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566613687) {}
[INFO ] 2019-11-01T00:03:35,232Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:35,239Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566613687) {}
[INFO ] 2019-11-01T00:03:35,240Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566614825) {}
[INFO ] 2019-11-01T00:03:35,241Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:35,244Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566614825) {}
[INFO ] 2019-11-01T00:03:35,245Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566614240) {}
[INFO ] 2019-11-01T00:03:35,246Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:35,251Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566614240) {}
[INFO ] 2019-11-01T00:03:35,252Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566614825) {}
[INFO ] 2019-11-01T00:03:35,253Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:35,256Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566614825) {}
[INFO ] 2019-11-01T00:03:35,257Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566614825) {}
[INFO ] 2019-11-01T00:03:35,260Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:35,260Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566614825) {}
[INFO ] 2019-11-01T00:03:35,261Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566614825) {}
[INFO ] 2019-11-01T00:03:35,261Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:35,262Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566614825) {}
[INFO ] 2019-11-01T00:03:35,264Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:03:35,265Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:03:35,274Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:03:35,283Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@1099a72c {}
[INFO ] 2019-11-01T00:03:35,290Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:03:35,291Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:35,292Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:35,345Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:03:35,351Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:03:35,352Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566615352) {}
[INFO ] 2019-11-01T00:03:35,355Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:35,357Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566615352) {}
[INFO ] 2019-11-01T00:03:35,357Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566615352) {}
[INFO ] 2019-11-01T00:03:35,500Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:03:35,610Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:03:35,700Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:03:35,701Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:03:35,711Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:03:35,712Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:03:35,712Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:35,713Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:35,713Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:03:35,723Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key AE33433585003DF7AB68BE50DDBF660B3F9897C6BAD70167FEB8ADD5C1D2B58E, not inserting the second time {}
[INFO ] 2019-11-01T00:03:35,726Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566613177) {}
[INFO ] 2019-11-01T00:03:35,728Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:35,732Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566613177) {}
[INFO ] 2019-11-01T00:03:35,732Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566615352) {}
[INFO ] 2019-11-01T00:03:35,733Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:35,737Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566615352) {}
[INFO ] 2019-11-01T00:03:35,738Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566613687) {}
[INFO ] 2019-11-01T00:03:35,739Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:35,742Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566613687) {}
[INFO ] 2019-11-01T00:03:35,743Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566615352) {}
[INFO ] 2019-11-01T00:03:35,744Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:35,747Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566615352) {}
[INFO ] 2019-11-01T00:03:35,748Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566614240) {}
[INFO ] 2019-11-01T00:03:35,749Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:35,752Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566614240) {}
[INFO ] 2019-11-01T00:03:35,753Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566615352) {}
[INFO ] 2019-11-01T00:03:35,754Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:35,757Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566615352) {}
[INFO ] 2019-11-01T00:03:35,758Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566614825) {}
[INFO ] 2019-11-01T00:03:35,759Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:35,762Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566614825) {}
[INFO ] 2019-11-01T00:03:35,763Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566615352) {}
[INFO ] 2019-11-01T00:03:35,764Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:03:35,767Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566615352) {}
[INFO ] 2019-11-01T00:03:35,768Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566615352) {}
[INFO ] 2019-11-01T00:03:35,770Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:35,771Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566615352) {}
[INFO ] 2019-11-01T00:03:35,771Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566615352) {}
[INFO ] 2019-11-01T00:03:35,772Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:03:35,772Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566615352) {}
[INFO ] 2019-11-01T00:03:35,773Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:03:35,774Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:35,774Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:03:35,775Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:35,775Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:03:35,776Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:35,777Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:03:35,777Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:03:35,873Z [Mock network] flow.[45657912-dbd6-49aa-8dae-953c7f2add5c].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=2361785482673752382). {}
[INFO ] 2019-11-01T00:03:35,930Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=2361785482673752382). {invocation_id=c15b5be2-a32d-40ec-a7fc-a09857f821f6, invocation_timestamp=2019-11-01T00:03:35.930Z, session_id=c15b5be2-a32d-40ec-a7fc-a09857f821f6, session_timestamp=2019-11-01T00:03:35.930Z}
[INFO ] 2019-11-01T00:03:36,034Z [Mock network] flow.[45657912-dbd6-49aa-8dae-953c7f2add5c].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=1251741662086849809). {}
[INFO ] 2019-11-01T00:03:36,054Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=1251741662086849809). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=f58ab02d-dc6c-4d2f-9690-31477050d3a3, invocation_timestamp=2019-11-01T00:03:36.053Z, session_id=f58ab02d-dc6c-4d2f-9690-31477050d3a3, session_timestamp=2019-11-01T00:03:36.053Z}
[INFO ] 2019-11-01T00:03:36,777Z [Mock network] flow.[45657912-dbd6-49aa-8dae-953c7f2add5c].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-4646615856990755513). {}
[INFO ] 2019-11-01T00:03:36,790Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-4646615856990755513). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=bc167e58-04de-4a3d-bbdb-ca6e3e986be4, invocation_timestamp=2019-11-01T00:03:36.788Z, session_id=bc167e58-04de-4a3d-bbdb-ca6e3e986be4, session_timestamp=2019-11-01T00:03:36.788Z}
[INFO ] 2019-11-01T00:03:36,862Z [Mock network] flow.[3c2b3f27-668d-4dfc-a225-22f475d56533].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=7261328347193217147). {}
[INFO ] 2019-11-01T00:03:36,892Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=7261328347193217147). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=a7b17c68-d518-4894-b3a9-e2cb24582e88, invocation_timestamp=2019-11-01T00:03:36.891Z, session_id=a7b17c68-d518-4894-b3a9-e2cb24582e88, session_timestamp=2019-11-01T00:03:36.891Z}
[INFO ] 2019-11-01T00:03:36,979Z [Mock network] flow.[edc28a0f-5c06-41e0-a443-bff2cd56328d].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=7352121473612948060). {}
[INFO ] 2019-11-01T00:03:37,096Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=7352121473612948060). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=985fcc87-200c-4851-8e86-4a6e1b7beca9, invocation_timestamp=2019-11-01T00:03:37.096Z, session_id=985fcc87-200c-4851-8e86-4a6e1b7beca9, session_timestamp=2019-11-01T00:03:37.096Z}
[INFO ] 2019-11-01T00:03:37,103Z [Mock network] flow.[ab2ed7ac-e35d-4da6-9bde-526db4723b0c].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:03:37,151Z [Mock network] flow.[ab2ed7ac-e35d-4da6-9bde-526db4723b0c].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:03:37,203Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:03:37,220Z [Mock network] flow.[8c13ce7e-4234-4b21-9f3b-50dba7410936].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-4427952098784489077). {}
[INFO ] 2019-11-01T00:03:37,238Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-4427952098784489077). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=3fa69356-caa8-4105-86aa-f340090dcbcb, invocation_timestamp=2019-11-01T00:03:37.237Z, session_id=3fa69356-caa8-4105-86aa-f340090dcbcb, session_timestamp=2019-11-01T00:03:37.237Z}
[INFO ] 2019-11-01T00:03:37,243Z [Mock network] flow.[a2c063a7-6131-459b-b93f-14dd3c0a9667].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:03:37,284Z [Mock network] flow.[a2c063a7-6131-459b-b93f-14dd3c0a9667].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:03:37,339Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.qn7265.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:03:37,378Z [Mock network] flow.[8c13ce7e-4234-4b21-9f3b-50dba7410936].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:03:37,397Z [Mock network] flow.[8c13ce7e-4234-4b21-9f3b-50dba7410936].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:03:37,399Z [Mock network] flow.[8c13ce7e-4234-4b21-9f3b-50dba7410936].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:03:37,420Z [Mock network] flow.[8c13ce7e-4234-4b21-9f3b-50dba7410936].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:03:37,510Z [Mock network] flow.[a2c063a7-6131-459b-b93f-14dd3c0a9667].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-3787310972045348513). {}
[INFO ] 2019-11-01T00:03:37,531Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-3787310972045348513). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=c669eded-db8d-4b63-841e-21bc14db4a23, invocation_timestamp=2019-11-01T00:03:37.530Z, session_id=c669eded-db8d-4b63-841e-21bc14db4a23, session_timestamp=2019-11-01T00:03:37.530Z}
[INFO ] 2019-11-01T00:03:37,541Z [Mock network] flow.[dbc46041-ed7f-4d10-80db-aeb60c426dd0].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:03:37,575Z [Mock network] flow.[dbc46041-ed7f-4d10-80db-aeb60c426dd0].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:03:37,576Z [Mock network] flow.[dbc46041-ed7f-4d10-80db-aeb60c426dd0].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:03:37,589Z [Mock network] flow.[dbc46041-ed7f-4d10-80db-aeb60c426dd0].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:04:37,290Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.qn7265 in file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/classes/kotlin/test/com/qn7265: build/tmp/generated-test-cordapps/com.qn7265-789aa99a-2a41-4a9c-8e46-da75d973a192.jar {}
[INFO ] 2019-11-01T00:04:37,310Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.qn7265 in file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/classes/kotlin/main/com/qn7265: build/tmp/generated-test-cordapps/com.qn7265-ed4e15b4-67b7-4fc8-99b5-6fd28ad780a5.jar {}
[INFO ] 2019-11-01T00:04:37,352Z [Test worker] cordapp.CordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/tmp/generated-test-cordapps/com.qn7265-789aa99a-2a41-4a9c-8e46-da75d973a192.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/tmp/generated-test-cordapps/com.qn7265-ed4e15b4-67b7-4fc8-99b5-6fd28ad780a5.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/qn7265-contracts-new/build/libs/qn7265-contracts-new.jar, rootPackageName=com.qn7265), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/qn7265-contracts/build/libs/qn7265-contracts.jar, rootPackageName=com.qn7265), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/libs/prides.jar, rootPackageName=com.twig) {}
[INFO ] 2019-11-01T00:04:37,389Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:04:37,393Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:04:37,407Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/tmp/generated-test-cordapps/com.qn7265-789aa99a-2a41-4a9c-8e46-da75d973a192.jar {}
[INFO ] 2019-11-01T00:04:37,429Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/tmp/generated-test-cordapps/com.qn7265-ed4e15b4-67b7-4fc8-99b5-6fd28ad780a5.jar {}
[INFO ] 2019-11-01T00:04:37,465Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/qn7265-contracts-new/build/libs/qn7265-contracts-new.jar {}
[INFO ] 2019-11-01T00:04:37,524Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/qn7265-contracts/build/libs/qn7265-contracts.jar {}
[INFO ] 2019-11-01T00:04:37,603Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/libs/prides.jar {}
[INFO ] 2019-11-01T00:04:37,754Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@1296bb56 {}
[INFO ] 2019-11-01T00:04:38,575Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:04:38,635Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:04:38,639Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:04:41,158Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:04:41,794Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:04:41,796Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566681796) {}
[INFO ] 2019-11-01T00:04:41,808Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:41,913Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566681796) {}
[INFO ] 2019-11-01T00:04:41,916Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566681796) {}
[INFO ] 2019-11-01T00:04:42,199Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:04:42,339Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:04:42,442Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:04:42,450Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:04:42,549Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:04:42,690Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:04:42,695Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:04:42,697Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:04:42,699Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:04:42,702Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:04:42,769Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 314BD3CC4633FB6C4DAF2DEED77E91E7047B491F6A32CD3C8A576C80C0ED170C, not inserting the second time {}
[INFO ] 2019-11-01T00:04:42,859Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566681796) {}
[INFO ] 2019-11-01T00:04:42,884Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:04:42,886Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566681796) {}
[INFO ] 2019-11-01T00:04:42,888Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566681796) {}
[INFO ] 2019-11-01T00:04:42,890Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:04:42,892Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566681796) {}
[INFO ] 2019-11-01T00:04:42,897Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:04:42,900Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:04:42,923Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:04:42,937Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@30d1c636 {}
[INFO ] 2019-11-01T00:04:42,955Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:04:42,958Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:04:42,960Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:04:43,165Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:04:43,186Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:04:43,194Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566683194) {}
[INFO ] 2019-11-01T00:04:43,205Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:43,224Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566683194) {}
[INFO ] 2019-11-01T00:04:43,227Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566683194) {}
[INFO ] 2019-11-01T00:04:43,391Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:04:43,527Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:04:43,614Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:04:43,618Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:04:43,653Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:04:43,658Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:04:43,661Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:04:43,664Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:04:43,669Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:04:43,698Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 35ECCCCF8490AE6445AB2455B6BEDAB0377CA061AAED27C743380E30365A6FAF, not inserting the second time {}
[INFO ] 2019-11-01T00:04:43,709Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566681796) {}
[INFO ] 2019-11-01T00:04:43,715Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:43,737Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566681796) {}
[INFO ] 2019-11-01T00:04:43,739Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566683194) {}
[INFO ] 2019-11-01T00:04:43,742Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:43,752Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566683194) {}
[INFO ] 2019-11-01T00:04:43,753Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566683194) {}
[INFO ] 2019-11-01T00:04:43,760Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:04:43,761Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566683194) {}
[INFO ] 2019-11-01T00:04:43,763Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566683194) {}
[INFO ] 2019-11-01T00:04:43,764Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:04:43,766Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566683194) {}
[INFO ] 2019-11-01T00:04:43,769Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:04:43,771Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:04:43,791Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:04:43,802Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@1cb0fcc9 {}
[INFO ] 2019-11-01T00:04:43,823Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:04:43,830Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:04:43,835Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:04:44,008Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:04:44,033Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:04:44,035Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566684035) {}
[INFO ] 2019-11-01T00:04:44,047Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:44,053Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566684035) {}
[INFO ] 2019-11-01T00:04:44,054Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566684035) {}
[INFO ] 2019-11-01T00:04:44,205Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:04:44,329Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:04:44,471Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:04:44,473Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:04:44,490Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:04:44,492Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:04:44,493Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:04:44,495Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:04:44,496Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:04:44,509Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key AF2D7213931C6A8918AA565931545ACBFFE3A1694F132B95BAD5B2B1E39AB59F, not inserting the second time {}
[INFO ] 2019-11-01T00:04:44,517Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566681796) {}
[INFO ] 2019-11-01T00:04:44,525Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:44,540Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566681796) {}
[INFO ] 2019-11-01T00:04:44,543Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566684035) {}
[INFO ] 2019-11-01T00:04:44,546Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:44,567Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566684035) {}
[INFO ] 2019-11-01T00:04:44,569Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566683194) {}
[INFO ] 2019-11-01T00:04:44,577Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:44,594Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566683194) {}
[INFO ] 2019-11-01T00:04:44,615Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566684035) {}
[INFO ] 2019-11-01T00:04:44,623Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:44,642Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566684035) {}
[INFO ] 2019-11-01T00:04:44,648Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566684035) {}
[INFO ] 2019-11-01T00:04:44,657Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:04:44,658Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566684035) {}
[INFO ] 2019-11-01T00:04:44,659Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566684035) {}
[INFO ] 2019-11-01T00:04:44,660Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:04:44,662Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566684035) {}
[INFO ] 2019-11-01T00:04:45,790Z [Mock network] flow.[85941540-fd4a-4669-948f-84ea18406414].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-6153962470801424821). {}
[INFO ] 2019-11-01T00:04:45,981Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-6153962470801424821). {invocation_id=6fbe8617-7cb0-4247-b86d-b3adce1bacfa, invocation_timestamp=2019-11-01T00:04:45.973Z, session_id=6fbe8617-7cb0-4247-b86d-b3adce1bacfa, session_timestamp=2019-11-01T00:04:45.973Z}
[INFO ] 2019-11-01T00:04:46,393Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:04:46,394Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:04:46,412Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@7feb9005 {}
[INFO ] 2019-11-01T00:04:46,435Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:04:46,436Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:04:46,437Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:04:46,683Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:04:46,699Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:04:46,702Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566686702) {}
[INFO ] 2019-11-01T00:04:46,709Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:46,729Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566686702) {}
[INFO ] 2019-11-01T00:04:46,730Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566686702) {}
[INFO ] 2019-11-01T00:04:46,889Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:04:47,006Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:04:47,103Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:04:47,106Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:04:47,117Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:04:47,122Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:04:47,124Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:04:47,125Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:04:47,126Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:04:47,127Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:04:47,140Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 5A963CC313664874B109068AFFFD01CCB1A34D04657303EF94BC204E5446E67B, not inserting the second time {}
[INFO ] 2019-11-01T00:04:47,148Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566686702) {}
[INFO ] 2019-11-01T00:04:47,155Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:04:47,156Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566686702) {}
[INFO ] 2019-11-01T00:04:47,157Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566686702) {}
[INFO ] 2019-11-01T00:04:47,160Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:04:47,161Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566686702) {}
[INFO ] 2019-11-01T00:04:47,164Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:04:47,165Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:04:47,180Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:04:47,189Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@551bb6a6 {}
[INFO ] 2019-11-01T00:04:47,201Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:04:47,202Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:04:47,203Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:04:47,286Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:04:47,293Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:04:47,294Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566687294) {}
[INFO ] 2019-11-01T00:04:47,298Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:47,301Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566687294) {}
[INFO ] 2019-11-01T00:04:47,302Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566687294) {}
[INFO ] 2019-11-01T00:04:47,429Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:04:47,573Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:04:47,660Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:04:47,662Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:04:47,675Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:04:47,676Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:04:47,678Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:04:47,679Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:04:47,680Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:04:47,734Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 8EC56113EC99E9E1578F1D09CF188781D8CDBB7B7F509B16C23CFA754CDC565F, not inserting the second time {}
[INFO ] 2019-11-01T00:04:47,740Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566686702) {}
[INFO ] 2019-11-01T00:04:47,748Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:47,766Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566686702) {}
[INFO ] 2019-11-01T00:04:47,769Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566687294) {}
[INFO ] 2019-11-01T00:04:47,772Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:47,786Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566687294) {}
[INFO ] 2019-11-01T00:04:47,789Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566687294) {}
[INFO ] 2019-11-01T00:04:47,794Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:04:47,795Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566687294) {}
[INFO ] 2019-11-01T00:04:47,796Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566687294) {}
[INFO ] 2019-11-01T00:04:47,797Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:04:47,798Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566687294) {}
[INFO ] 2019-11-01T00:04:47,803Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:04:47,804Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:04:47,825Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:04:47,836Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@283117e {}
[INFO ] 2019-11-01T00:04:47,848Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:04:47,851Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:04:47,852Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:04:47,999Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:04:48,013Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:04:48,015Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566688015) {}
[INFO ] 2019-11-01T00:04:48,021Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:48,026Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566688015) {}
[INFO ] 2019-11-01T00:04:48,028Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566688015) {}
[INFO ] 2019-11-01T00:04:48,166Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:04:48,274Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:04:48,368Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:04:48,370Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:04:48,382Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:04:48,384Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:04:48,385Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:04:48,386Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:04:48,387Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:04:48,399Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key D16E8C50951569FADB75DC1A1F4F22E27F204961CF80D36FA7F6A36CFF44B33F, not inserting the second time {}
[INFO ] 2019-11-01T00:04:48,410Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566686702) {}
[INFO ] 2019-11-01T00:04:48,412Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:48,422Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566686702) {}
[INFO ] 2019-11-01T00:04:48,423Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566688015) {}
[INFO ] 2019-11-01T00:04:48,425Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:48,432Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566688015) {}
[INFO ] 2019-11-01T00:04:48,433Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566687294) {}
[INFO ] 2019-11-01T00:04:48,435Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:48,441Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566687294) {}
[INFO ] 2019-11-01T00:04:48,442Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566688015) {}
[INFO ] 2019-11-01T00:04:48,444Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:48,450Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566688015) {}
[INFO ] 2019-11-01T00:04:48,451Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566688015) {}
[INFO ] 2019-11-01T00:04:48,455Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:04:48,456Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566688015) {}
[INFO ] 2019-11-01T00:04:48,457Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566688015) {}
[INFO ] 2019-11-01T00:04:48,463Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:04:48,466Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566688015) {}
[INFO ] 2019-11-01T00:04:48,606Z [Mock network] flow.[8a565ed4-3b86-4efc-987a-a7edaf0416e2].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=8168213457900625767). {}
[INFO ] 2019-11-01T00:04:48,732Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=8168213457900625767). {invocation_id=08302240-bc8f-4252-bafb-ba716deca58b, invocation_timestamp=2019-11-01T00:04:48.730Z, session_id=08302240-bc8f-4252-bafb-ba716deca58b, session_timestamp=2019-11-01T00:04:48.730Z}
[INFO ] 2019-11-01T00:04:49,051Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:04:49,057Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:04:49,062Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@223985b2 {}
[INFO ] 2019-11-01T00:04:49,078Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:04:49,080Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:04:49,081Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:04:49,253Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:04:49,262Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:04:49,263Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566689263) {}
[INFO ] 2019-11-01T00:04:49,267Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:49,273Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566689263) {}
[INFO ] 2019-11-01T00:04:49,275Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566689263) {}
[INFO ] 2019-11-01T00:04:49,414Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:04:49,530Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:04:49,619Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:04:49,622Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:04:49,635Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:04:49,640Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:04:49,642Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:04:49,643Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:04:49,645Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:04:49,646Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:04:49,659Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key EDC42D713B92C6680871ADCA9B6D706FE02DC7C38F40CD1387C13B8B10548B3C, not inserting the second time {}
[INFO ] 2019-11-01T00:04:49,665Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566689263) {}
[INFO ] 2019-11-01T00:04:49,671Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:04:49,673Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566689263) {}
[INFO ] 2019-11-01T00:04:49,673Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566689263) {}
[INFO ] 2019-11-01T00:04:49,674Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:04:49,675Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566689263) {}
[INFO ] 2019-11-01T00:04:49,678Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:04:49,679Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:04:49,705Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:04:49,719Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@72997452 {}
[INFO ] 2019-11-01T00:04:49,737Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:04:49,741Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:04:49,742Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:04:49,832Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:04:49,847Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:04:49,849Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566689849) {}
[INFO ] 2019-11-01T00:04:49,856Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:49,865Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566689849) {}
[INFO ] 2019-11-01T00:04:49,866Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566689849) {}
[INFO ] 2019-11-01T00:04:50,003Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:04:50,200Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:04:50,307Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:04:50,309Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:04:50,326Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:04:50,329Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:04:50,330Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:04:50,331Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:04:50,332Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:04:50,349Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 1073B1B6054D65F631DE55F60CB01CD9DF4B7372A88A5BFFD4025158160201B6, not inserting the second time {}
[INFO ] 2019-11-01T00:04:50,356Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566689263) {}
[INFO ] 2019-11-01T00:04:50,364Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:50,376Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566689263) {}
[INFO ] 2019-11-01T00:04:50,384Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566689849) {}
[INFO ] 2019-11-01T00:04:50,388Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:50,403Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566689849) {}
[INFO ] 2019-11-01T00:04:50,407Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566689849) {}
[INFO ] 2019-11-01T00:04:50,415Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:04:50,417Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566689849) {}
[INFO ] 2019-11-01T00:04:50,418Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566689849) {}
[INFO ] 2019-11-01T00:04:50,425Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:04:50,426Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566689849) {}
[INFO ] 2019-11-01T00:04:50,430Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:04:50,431Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:04:50,453Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:04:50,462Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@214d028f {}
[INFO ] 2019-11-01T00:04:50,473Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:04:50,478Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:04:50,480Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:04:50,615Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:04:50,624Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:04:50,625Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566690625) {}
[INFO ] 2019-11-01T00:04:50,629Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:50,634Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566690625) {}
[INFO ] 2019-11-01T00:04:50,636Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566690625) {}
[INFO ] 2019-11-01T00:04:50,779Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:04:50,900Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:04:50,991Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:04:50,994Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:04:51,016Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:04:51,017Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:04:51,018Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:04:51,020Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:04:51,026Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:04:51,045Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key EDDEF84EA652CFEA284067C618D71D9F8C2208C7D8B9D0AA8C5781172AFB12D6, not inserting the second time {}
[INFO ] 2019-11-01T00:04:51,056Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566689263) {}
[INFO ] 2019-11-01T00:04:51,060Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:51,074Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566689263) {}
[INFO ] 2019-11-01T00:04:51,081Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566690625) {}
[INFO ] 2019-11-01T00:04:51,086Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:51,100Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566690625) {}
[INFO ] 2019-11-01T00:04:51,102Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566689849) {}
[INFO ] 2019-11-01T00:04:51,105Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:51,119Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566689849) {}
[INFO ] 2019-11-01T00:04:51,122Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566690625) {}
[INFO ] 2019-11-01T00:04:51,125Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:51,135Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566690625) {}
[INFO ] 2019-11-01T00:04:51,137Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566690625) {}
[INFO ] 2019-11-01T00:04:51,144Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:04:51,153Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566690625) {}
[INFO ] 2019-11-01T00:04:51,155Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566690625) {}
[INFO ] 2019-11-01T00:04:51,156Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:04:51,157Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566690625) {}
[WARN ] 2019-11-01T00:04:51,286Z [Mock network] flow.[c3dd3782-1464-440e-8352-989e8d0c81f5].run - Flow finished with exception {}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: A newly issued asset must have a positive amount., contract: com.qn7265.issue.AssetContract, transaction: C7AA00A8D5F69D5E4BB7572AB35D1C78B3BC32FB69E22C91D6B128E4C1AFCB69
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:127) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:80) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:143) ~[corda-core-3.4-corda.jar:?]
	at com.qn7265.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:82) ~[main/:?]
	at com.qn7265.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:27) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.4-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_211]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.4-corda.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: A newly issued asset must have a positive amount.
	at com.qn7265.issue.AssetContract.verifyIssue(AssetContract.kt:80) ~[qn7265-contracts.jar:?]
	at com.qn7265.issue.AssetContract.verify(AssetContract.kt:29) ~[qn7265-contracts.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:125) ~[corda-core-3.4-corda.jar:?]
	... 17 more
[INFO ] 2019-11-01T00:04:51,384Z [Mock network] flow.[af777720-e2fe-4811-b0d5-36758dcd32dc].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=1386614047930095184). {}
[INFO ] 2019-11-01T00:04:51,453Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=1386614047930095184). {invocation_id=1410f168-59d3-4001-abf8-e5f1adb9fd40, invocation_timestamp=2019-11-01T00:04:51.452Z, session_id=1410f168-59d3-4001-abf8-e5f1adb9fd40, session_timestamp=2019-11-01T00:04:51.452Z}
[INFO ] 2019-11-01T00:04:51,675Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:04:51,676Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:04:51,681Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@3668409a {}
[INFO ] 2019-11-01T00:04:51,707Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:04:51,708Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:04:51,709Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:04:51,864Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:04:51,874Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:04:51,875Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566691875) {}
[INFO ] 2019-11-01T00:04:51,878Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:51,890Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566691875) {}
[INFO ] 2019-11-01T00:04:51,893Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566691875) {}
[INFO ] 2019-11-01T00:04:52,040Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:04:52,261Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:04:52,351Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:04:52,353Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:04:52,364Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:04:52,367Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:04:52,368Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:04:52,369Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:04:52,370Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:04:52,373Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:04:52,394Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 26F858CB0B39492EE75F841983857B2F5E4420D991570A546839BB95D227C07C, not inserting the second time {}
[INFO ] 2019-11-01T00:04:52,399Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566691875) {}
[INFO ] 2019-11-01T00:04:52,408Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:04:52,409Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566691875) {}
[INFO ] 2019-11-01T00:04:52,410Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566691875) {}
[INFO ] 2019-11-01T00:04:52,411Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:04:52,412Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566691875) {}
[INFO ] 2019-11-01T00:04:52,416Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:04:52,417Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:04:52,442Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:04:52,453Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@687fa865 {}
[INFO ] 2019-11-01T00:04:52,464Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:04:52,465Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:04:52,468Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:04:52,571Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:04:52,583Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:04:52,583Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566692583) {}
[INFO ] 2019-11-01T00:04:52,586Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:52,590Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566692583) {}
[INFO ] 2019-11-01T00:04:52,591Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566692583) {}
[INFO ] 2019-11-01T00:04:52,746Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:04:52,877Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:04:52,971Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:04:52,972Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:04:53,083Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:04:53,084Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:04:53,085Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:04:53,086Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:04:53,087Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:04:53,097Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 0D7DDE7C0C76135C755F602C2CDBD0D27ADA188F053D4677A92122FEC9B93ADE, not inserting the second time {}
[INFO ] 2019-11-01T00:04:53,101Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566691875) {}
[INFO ] 2019-11-01T00:04:53,103Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:53,114Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566691875) {}
[INFO ] 2019-11-01T00:04:53,115Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566692583) {}
[INFO ] 2019-11-01T00:04:53,116Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:53,128Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566692583) {}
[INFO ] 2019-11-01T00:04:53,129Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566692583) {}
[INFO ] 2019-11-01T00:04:53,134Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:04:53,134Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566692583) {}
[INFO ] 2019-11-01T00:04:53,135Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566692583) {}
[INFO ] 2019-11-01T00:04:53,137Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:04:53,138Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566692583) {}
[INFO ] 2019-11-01T00:04:53,140Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:04:53,141Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:04:53,165Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:04:53,178Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@b67aaca {}
[INFO ] 2019-11-01T00:04:53,190Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:04:53,191Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:04:53,192Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:04:53,286Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:04:53,296Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:04:53,297Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566693297) {}
[INFO ] 2019-11-01T00:04:53,300Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:53,305Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566693297) {}
[INFO ] 2019-11-01T00:04:53,306Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566693297) {}
[INFO ] 2019-11-01T00:04:53,452Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:04:53,596Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:04:53,694Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:04:53,696Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:04:53,708Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:04:53,710Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:04:53,813Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:04:53,814Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:04:53,815Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:04:53,833Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key A91E107310B50B8BA5884489B6BB8066F988E100ED8735F4417046DF86C6C25B, not inserting the second time {}
[INFO ] 2019-11-01T00:04:53,839Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566691875) {}
[INFO ] 2019-11-01T00:04:53,848Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:53,860Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566691875) {}
[INFO ] 2019-11-01T00:04:53,862Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566693297) {}
[INFO ] 2019-11-01T00:04:53,864Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:53,873Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566693297) {}
[INFO ] 2019-11-01T00:04:53,878Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566692583) {}
[INFO ] 2019-11-01T00:04:53,880Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:53,894Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566692583) {}
[INFO ] 2019-11-01T00:04:53,895Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566693297) {}
[INFO ] 2019-11-01T00:04:53,897Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:53,905Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566693297) {}
[INFO ] 2019-11-01T00:04:53,906Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566693297) {}
[INFO ] 2019-11-01T00:04:53,912Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:04:53,913Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566693297) {}
[INFO ] 2019-11-01T00:04:53,914Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566693297) {}
[INFO ] 2019-11-01T00:04:53,917Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:04:53,919Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566693297) {}
[INFO ] 2019-11-01T00:04:53,922Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:04:53,923Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:04:53,941Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:04:53,952Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@169d37b7 {}
[INFO ] 2019-11-01T00:04:53,963Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:04:53,964Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:04:53,965Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:04:54,080Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:04:54,087Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:04:54,088Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566694088) {}
[INFO ] 2019-11-01T00:04:54,093Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:54,099Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566694088) {}
[INFO ] 2019-11-01T00:04:54,100Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566694088) {}
[INFO ] 2019-11-01T00:04:54,243Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:04:54,375Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:04:54,571Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:04:54,573Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:04:54,586Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:04:54,590Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:04:54,591Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:04:54,592Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:04:54,593Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:04:54,610Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key EE1AA52A8945EDDF12197D8C8D89BA1952A3FE351F76433210D33CEFECE5B365, not inserting the second time {}
[INFO ] 2019-11-01T00:04:54,614Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566691875) {}
[INFO ] 2019-11-01T00:04:54,629Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:54,644Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566691875) {}
[INFO ] 2019-11-01T00:04:54,645Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566694088) {}
[INFO ] 2019-11-01T00:04:54,651Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:54,666Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566694088) {}
[INFO ] 2019-11-01T00:04:54,668Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566692583) {}
[INFO ] 2019-11-01T00:04:54,669Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:54,677Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566692583) {}
[INFO ] 2019-11-01T00:04:54,678Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566694088) {}
[INFO ] 2019-11-01T00:04:54,680Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:54,695Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566694088) {}
[INFO ] 2019-11-01T00:04:54,696Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566693297) {}
[INFO ] 2019-11-01T00:04:54,698Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:54,705Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566693297) {}
[INFO ] 2019-11-01T00:04:54,706Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566694088) {}
[INFO ] 2019-11-01T00:04:54,708Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:54,717Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566694088) {}
[INFO ] 2019-11-01T00:04:54,719Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566694088) {}
[INFO ] 2019-11-01T00:04:54,727Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:04:54,728Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566694088) {}
[INFO ] 2019-11-01T00:04:54,729Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566694088) {}
[INFO ] 2019-11-01T00:04:54,730Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:04:54,731Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566694088) {}
[INFO ] 2019-11-01T00:04:54,737Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:04:54,738Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:04:54,756Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:04:54,765Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@3473f8ca {}
[INFO ] 2019-11-01T00:04:54,774Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:04:54,775Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:04:54,776Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:04:54,859Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:04:54,875Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:04:54,877Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566694877) {}
[INFO ] 2019-11-01T00:04:54,883Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:54,886Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566694877) {}
[INFO ] 2019-11-01T00:04:54,887Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566694877) {}
[INFO ] 2019-11-01T00:04:55,015Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:04:55,137Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:04:55,345Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:04:55,346Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:04:55,361Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:04:55,363Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:04:55,364Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:04:55,365Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:04:55,366Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:04:55,378Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 969F4F2ABFBE2FD5A1F684F73E6D3AB7ED4A2463A4DC2E0B40CD32371C0ABE41, not inserting the second time {}
[INFO ] 2019-11-01T00:04:55,382Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566691875) {}
[INFO ] 2019-11-01T00:04:55,384Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:55,398Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566691875) {}
[INFO ] 2019-11-01T00:04:55,400Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566694877) {}
[INFO ] 2019-11-01T00:04:55,401Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:55,409Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566694877) {}
[INFO ] 2019-11-01T00:04:55,410Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566692583) {}
[INFO ] 2019-11-01T00:04:55,414Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:55,422Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566692583) {}
[INFO ] 2019-11-01T00:04:55,423Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566694877) {}
[INFO ] 2019-11-01T00:04:55,425Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:55,434Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566694877) {}
[INFO ] 2019-11-01T00:04:55,435Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566693297) {}
[INFO ] 2019-11-01T00:04:55,439Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:55,448Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566693297) {}
[INFO ] 2019-11-01T00:04:55,449Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566694877) {}
[INFO ] 2019-11-01T00:04:55,451Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:55,457Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566694877) {}
[INFO ] 2019-11-01T00:04:55,458Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566694088) {}
[INFO ] 2019-11-01T00:04:55,464Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:55,478Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566694088) {}
[INFO ] 2019-11-01T00:04:55,480Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566694877) {}
[INFO ] 2019-11-01T00:04:55,481Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:55,491Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566694877) {}
[INFO ] 2019-11-01T00:04:55,493Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566694877) {}
[INFO ] 2019-11-01T00:04:55,496Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:04:55,497Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566694877) {}
[INFO ] 2019-11-01T00:04:55,498Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566694877) {}
[INFO ] 2019-11-01T00:04:55,499Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:04:55,508Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566694877) {}
[INFO ] 2019-11-01T00:04:55,513Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:04:55,514Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:04:55,515Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:04:55,517Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:04:55,523Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:04:55,524Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:04:55,524Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:04:55,525Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:04:55,665Z [Mock network] flow.[a2d0a2fc-b404-4aa8-b369-5e0a0a4536b0].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=7131443055696315098). {}
[INFO ] 2019-11-01T00:04:55,758Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=7131443055696315098). {invocation_id=6f3e09ec-381f-48be-adcf-df45fa680610, invocation_timestamp=2019-11-01T00:04:55.757Z, session_id=6f3e09ec-381f-48be-adcf-df45fa680610, session_timestamp=2019-11-01T00:04:55.757Z}
[INFO ] 2019-11-01T00:04:56,086Z [Mock network] flow.[a2d0a2fc-b404-4aa8-b369-5e0a0a4536b0].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-7413745328749541951). {}
[INFO ] 2019-11-01T00:04:56,110Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-7413745328749541951). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=0ccb2a22-0d86-423f-95b9-95c66af69513, invocation_timestamp=2019-11-01T00:04:56.110Z, session_id=0ccb2a22-0d86-423f-95b9-95c66af69513, session_timestamp=2019-11-01T00:04:56.110Z}
[INFO ] 2019-11-01T00:04:56,182Z [Mock network] flow.[a2d0a2fc-b404-4aa8-b369-5e0a0a4536b0].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=5067941983533890162). {}
[INFO ] 2019-11-01T00:04:56,207Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=5067941983533890162). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=0978ea95-a46a-4c41-bdad-04af98ede39f, invocation_timestamp=2019-11-01T00:04:56.205Z, session_id=0978ea95-a46a-4c41-bdad-04af98ede39f, session_timestamp=2019-11-01T00:04:56.205Z}
[INFO ] 2019-11-01T00:04:56,334Z [Mock network] flow.[3ad1b91b-5065-4d79-b60a-b9671a3a2325].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=8389692392701010139). {}
[INFO ] 2019-11-01T00:04:56,372Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=8389692392701010139). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=70292729-95ba-4ad7-8ff7-7cdba4b7e7e2, invocation_timestamp=2019-11-01T00:04:56.371Z, session_id=70292729-95ba-4ad7-8ff7-7cdba4b7e7e2, session_timestamp=2019-11-01T00:04:56.371Z}
[INFO ] 2019-11-01T00:04:56,625Z [Mock network] flow.[f7609901-209e-44ca-885b-b59fbf8bdfe0].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=-7482828898126112802). {}
[INFO ] 2019-11-01T00:04:56,681Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-7482828898126112802). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=9447e508-cfd9-440b-9fe1-e5eefc39f706, invocation_timestamp=2019-11-01T00:04:56.679Z, session_id=9447e508-cfd9-440b-9fe1-e5eefc39f706, session_timestamp=2019-11-01T00:04:56.679Z}
[INFO ] 2019-11-01T00:04:56,702Z [Mock network] flow.[3332539a-ae63-4371-aa0c-49cef677c914].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:04:56,799Z [Mock network] flow.[3332539a-ae63-4371-aa0c-49cef677c914].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:04:56,978Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:04:57,035Z [Mock network] flow.[8dd345b9-82c2-4c41-99cd-1543cd353570].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=48467186533694648). {}
[INFO ] 2019-11-01T00:04:57,079Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=48467186533694648). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=d01b396f-19f6-43c4-8f27-01ff41de1b2e, invocation_timestamp=2019-11-01T00:04:57.077Z, session_id=d01b396f-19f6-43c4-8f27-01ff41de1b2e, session_timestamp=2019-11-01T00:04:57.077Z}
[INFO ] 2019-11-01T00:04:57,097Z [Mock network] flow.[b3eadc87-a0e1-454f-bf85-c16a5fb7098c].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:04:57,170Z [Mock network] flow.[b3eadc87-a0e1-454f-bf85-c16a5fb7098c].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:04:57,233Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.qn7265.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:04:57,390Z [Mock network] flow.[8dd345b9-82c2-4c41-99cd-1543cd353570].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:04:57,443Z [Mock network] flow.[8dd345b9-82c2-4c41-99cd-1543cd353570].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:04:57,445Z [Mock network] flow.[8dd345b9-82c2-4c41-99cd-1543cd353570].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:04:57,490Z [Mock network] flow.[8dd345b9-82c2-4c41-99cd-1543cd353570].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:04:57,630Z [Mock network] flow.[b3eadc87-a0e1-454f-bf85-c16a5fb7098c].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=8639385502594319595). {}
[INFO ] 2019-11-01T00:04:57,689Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=8639385502594319595). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=2e686cf0-a693-4963-a3c2-aef196e7012d, invocation_timestamp=2019-11-01T00:04:57.688Z, session_id=2e686cf0-a693-4963-a3c2-aef196e7012d, session_timestamp=2019-11-01T00:04:57.688Z}
[INFO ] 2019-11-01T00:04:57,705Z [Mock network] flow.[d83a016d-be9d-4cbd-a964-24b4740b18fb].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:04:57,767Z [Mock network] flow.[d83a016d-be9d-4cbd-a964-24b4740b18fb].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:04:57,769Z [Mock network] flow.[d83a016d-be9d-4cbd-a964-24b4740b18fb].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:04:57,803Z [Mock network] flow.[d83a016d-be9d-4cbd-a964-24b4740b18fb].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:04:58,026Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:04:58,027Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:04:58,031Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@28c49e82 {}
[INFO ] 2019-11-01T00:04:58,045Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:04:58,047Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:04:58,048Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:04:58,142Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:04:58,149Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:04:58,150Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566698150) {}
[INFO ] 2019-11-01T00:04:58,153Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:58,159Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566698150) {}
[INFO ] 2019-11-01T00:04:58,160Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566698150) {}
[INFO ] 2019-11-01T00:04:58,289Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:04:58,771Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:04:58,861Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:04:58,863Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:04:58,872Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:04:58,876Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:04:58,877Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:04:58,878Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:04:58,879Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:04:58,880Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:04:58,893Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key A7AE9DE478E6EA2F675F709F4FDCD6BB68D70BCDCC381F3EE8C8F7FB65C8DE5E, not inserting the second time {}
[INFO ] 2019-11-01T00:04:58,901Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566698150) {}
[INFO ] 2019-11-01T00:04:58,904Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:04:58,910Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566698150) {}
[INFO ] 2019-11-01T00:04:58,912Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566698150) {}
[INFO ] 2019-11-01T00:04:58,913Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:04:58,914Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566698150) {}
[INFO ] 2019-11-01T00:04:58,918Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:04:58,923Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:04:58,940Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:04:58,949Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@33d2abf1 {}
[INFO ] 2019-11-01T00:04:58,958Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:04:58,959Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:04:58,960Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:04:59,041Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:04:59,049Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:04:59,051Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566699050) {}
[INFO ] 2019-11-01T00:04:59,056Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:59,063Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566699050) {}
[INFO ] 2019-11-01T00:04:59,064Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566699050) {}
[INFO ] 2019-11-01T00:04:59,200Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:04:59,365Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:04:59,458Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:04:59,460Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:04:59,471Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:04:59,472Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:04:59,473Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:04:59,474Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:04:59,475Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:04:59,493Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 66FC13D5F421FCD3C32B37DC6AD9E0E153E8E7220C01556A502BFA6BFCE2EF5D, not inserting the second time {}
[INFO ] 2019-11-01T00:04:59,499Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566698150) {}
[INFO ] 2019-11-01T00:04:59,504Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:59,509Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566698150) {}
[INFO ] 2019-11-01T00:04:59,510Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566699050) {}
[INFO ] 2019-11-01T00:04:59,512Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:59,516Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566699050) {}
[INFO ] 2019-11-01T00:04:59,517Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566699050) {}
[INFO ] 2019-11-01T00:04:59,523Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:04:59,524Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566699050) {}
[INFO ] 2019-11-01T00:04:59,525Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566699050) {}
[INFO ] 2019-11-01T00:04:59,526Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:04:59,526Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566699050) {}
[INFO ] 2019-11-01T00:04:59,528Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:04:59,529Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:04:59,552Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:04:59,562Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@30b98c56 {}
[INFO ] 2019-11-01T00:04:59,572Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:04:59,574Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:04:59,574Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:04:59,640Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:04:59,646Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:04:59,647Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566699647) {}
[INFO ] 2019-11-01T00:04:59,651Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:04:59,653Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566699647) {}
[INFO ] 2019-11-01T00:04:59,654Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566699647) {}
[INFO ] 2019-11-01T00:04:59,789Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:04:59,943Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:05:00,033Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:05:00,035Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:05:00,057Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:05:00,059Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:05:00,060Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:05:00,061Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:05:00,062Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:05:00,072Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 83581D14EEE43FFA4FA8043651E27FA0D406F5080679D295859144687E582D57, not inserting the second time {}
[INFO ] 2019-11-01T00:05:00,077Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566698150) {}
[INFO ] 2019-11-01T00:05:00,078Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:00,094Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566698150) {}
[INFO ] 2019-11-01T00:05:00,095Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566699647) {}
[INFO ] 2019-11-01T00:05:00,097Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:00,102Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566699647) {}
[INFO ] 2019-11-01T00:05:00,103Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566699050) {}
[INFO ] 2019-11-01T00:05:00,110Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:00,122Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566699050) {}
[INFO ] 2019-11-01T00:05:00,123Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566699647) {}
[INFO ] 2019-11-01T00:05:00,124Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:00,132Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566699647) {}
[INFO ] 2019-11-01T00:05:00,133Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566699647) {}
[INFO ] 2019-11-01T00:05:00,136Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:05:00,137Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566699647) {}
[INFO ] 2019-11-01T00:05:00,138Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566699647) {}
[INFO ] 2019-11-01T00:05:00,139Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:05:00,139Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566699647) {}
[INFO ] 2019-11-01T00:05:00,142Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:05:00,143Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:05:00,157Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:05:00,164Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@1492bb6d {}
[INFO ] 2019-11-01T00:05:00,172Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:05:00,173Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:05:00,174Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:05:00,268Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:05:00,277Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:05:00,278Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566700278) {}
[INFO ] 2019-11-01T00:05:00,282Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:00,285Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566700278) {}
[INFO ] 2019-11-01T00:05:00,286Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566700278) {}
[INFO ] 2019-11-01T00:05:00,422Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:05:00,583Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:05:00,673Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:05:00,675Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:05:00,685Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:05:00,686Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:05:00,687Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:05:00,687Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:05:00,688Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:05:00,698Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 5CC5ED35260AF456CB1A95204A41259A1F1E9CBDC3673792710113502E299606, not inserting the second time {}
[INFO ] 2019-11-01T00:05:00,704Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566698150) {}
[INFO ] 2019-11-01T00:05:00,705Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:00,711Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566698150) {}
[INFO ] 2019-11-01T00:05:00,716Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566700278) {}
[INFO ] 2019-11-01T00:05:00,717Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:00,727Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566700278) {}
[INFO ] 2019-11-01T00:05:00,734Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566699050) {}
[INFO ] 2019-11-01T00:05:00,738Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:00,742Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566699050) {}
[INFO ] 2019-11-01T00:05:00,745Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566700278) {}
[INFO ] 2019-11-01T00:05:00,748Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:00,754Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566700278) {}
[INFO ] 2019-11-01T00:05:00,759Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566699647) {}
[INFO ] 2019-11-01T00:05:00,760Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:00,765Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566699647) {}
[INFO ] 2019-11-01T00:05:00,766Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566700278) {}
[INFO ] 2019-11-01T00:05:00,767Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:00,771Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566700278) {}
[INFO ] 2019-11-01T00:05:00,772Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566700278) {}
[INFO ] 2019-11-01T00:05:00,775Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:05:00,776Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566700278) {}
[INFO ] 2019-11-01T00:05:00,776Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566700278) {}
[INFO ] 2019-11-01T00:05:00,777Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:05:00,778Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566700278) {}
[INFO ] 2019-11-01T00:05:00,781Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:05:00,781Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:05:00,793Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:05:00,802Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@3c9ea524 {}
[INFO ] 2019-11-01T00:05:00,812Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:05:00,813Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:05:00,814Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:05:00,908Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:05:00,917Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:05:00,918Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566700918) {}
[INFO ] 2019-11-01T00:05:00,921Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:00,923Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566700918) {}
[INFO ] 2019-11-01T00:05:00,924Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566700918) {}
[INFO ] 2019-11-01T00:05:01,070Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:05:01,184Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:05:01,282Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:05:01,284Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:05:01,294Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:05:01,296Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:05:01,297Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:05:01,298Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:05:01,299Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:05:01,312Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 4990B98C27FF86DB7BB0E5299B6E636429A5A1A15988FBB00E588B36D23A8984, not inserting the second time {}
[INFO ] 2019-11-01T00:05:01,316Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566698150) {}
[INFO ] 2019-11-01T00:05:01,318Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:01,324Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566698150) {}
[INFO ] 2019-11-01T00:05:01,326Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566700918) {}
[INFO ] 2019-11-01T00:05:01,327Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:01,333Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566700918) {}
[INFO ] 2019-11-01T00:05:01,334Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566699050) {}
[INFO ] 2019-11-01T00:05:01,336Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:01,343Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566699050) {}
[INFO ] 2019-11-01T00:05:01,345Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566700918) {}
[INFO ] 2019-11-01T00:05:01,346Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:01,352Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566700918) {}
[INFO ] 2019-11-01T00:05:01,354Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566699647) {}
[INFO ] 2019-11-01T00:05:01,355Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:01,361Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566699647) {}
[INFO ] 2019-11-01T00:05:01,362Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566700918) {}
[INFO ] 2019-11-01T00:05:01,368Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:01,378Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566700918) {}
[INFO ] 2019-11-01T00:05:01,379Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566700278) {}
[INFO ] 2019-11-01T00:05:01,381Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:01,386Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566700278) {}
[INFO ] 2019-11-01T00:05:01,387Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566700918) {}
[INFO ] 2019-11-01T00:05:01,388Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:01,395Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566700918) {}
[INFO ] 2019-11-01T00:05:01,396Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566700918) {}
[INFO ] 2019-11-01T00:05:01,399Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:05:01,400Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566700918) {}
[INFO ] 2019-11-01T00:05:01,401Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566700918) {}
[INFO ] 2019-11-01T00:05:01,402Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:05:01,403Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566700918) {}
[INFO ] 2019-11-01T00:05:01,404Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:05:01,405Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:05:01,405Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:05:01,406Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:05:01,407Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:05:01,408Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:05:01,409Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:05:01,410Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:05:01,487Z [Mock network] flow.[f5554e1c-f846-4a83-a995-0bfebf029ece].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=4890640517303455573). {}
[INFO ] 2019-11-01T00:05:01,562Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=4890640517303455573). {invocation_id=8da67715-9aca-4fc2-98d8-588176e42ce6, invocation_timestamp=2019-11-01T00:05:01.559Z, session_id=8da67715-9aca-4fc2-98d8-588176e42ce6, session_timestamp=2019-11-01T00:05:01.559Z}
[INFO ] 2019-11-01T00:05:01,746Z [Mock network] flow.[f5554e1c-f846-4a83-a995-0bfebf029ece].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-2253422214900883444). {}
[INFO ] 2019-11-01T00:05:01,762Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-2253422214900883444). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=04e11382-b201-4657-aa4c-0ba113e8cbc7, invocation_timestamp=2019-11-01T00:05:01.761Z, session_id=04e11382-b201-4657-aa4c-0ba113e8cbc7, session_timestamp=2019-11-01T00:05:01.761Z}
[INFO ] 2019-11-01T00:05:01,804Z [Mock network] flow.[f5554e1c-f846-4a83-a995-0bfebf029ece].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-2916411995291398282). {}
[INFO ] 2019-11-01T00:05:01,825Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-2916411995291398282). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=e4ac87e4-f00c-47cf-9a9a-9b8b68a5d79f, invocation_timestamp=2019-11-01T00:05:01.825Z, session_id=e4ac87e4-f00c-47cf-9a9a-9b8b68a5d79f, session_timestamp=2019-11-01T00:05:01.825Z}
[INFO ] 2019-11-01T00:05:01,945Z [Mock network] flow.[af947cf2-89ba-43a8-a225-48658bebe129].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=7454742059880688124). {}
[INFO ] 2019-11-01T00:05:01,984Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=7454742059880688124). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=b98373a5-2d75-4db5-83c1-2c3291418a86, invocation_timestamp=2019-11-01T00:05:01.983Z, session_id=b98373a5-2d75-4db5-83c1-2c3291418a86, session_timestamp=2019-11-01T00:05:01.983Z}
[INFO ] 2019-11-01T00:05:02,069Z [Mock network] flow.[8c576d44-7c77-4938-981f-0a095c981387].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=-5651854001242776240). {}
[INFO ] 2019-11-01T00:05:02,112Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-5651854001242776240). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=55a23cf8-6fd3-43f9-a608-23e8f96c9509, invocation_timestamp=2019-11-01T00:05:02.110Z, session_id=55a23cf8-6fd3-43f9-a608-23e8f96c9509, session_timestamp=2019-11-01T00:05:02.110Z}
[INFO ] 2019-11-01T00:05:02,130Z [Mock network] flow.[271f3f66-6f21-4bcd-aa2f-0e6540c57205].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:05:02,186Z [Mock network] flow.[271f3f66-6f21-4bcd-aa2f-0e6540c57205].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:05:02,266Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:05:02,300Z [Mock network] flow.[146eea9c-1dfd-4b71-9d3d-22551952bdf5].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=7232936665632265671). {}
[INFO ] 2019-11-01T00:05:02,326Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=7232936665632265671). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=5b0b6ce1-e74a-4ed4-8b26-fc1ab770119e, invocation_timestamp=2019-11-01T00:05:02.325Z, session_id=5b0b6ce1-e74a-4ed4-8b26-fc1ab770119e, session_timestamp=2019-11-01T00:05:02.325Z}
[INFO ] 2019-11-01T00:05:02,340Z [Mock network] flow.[171f546b-89fc-4f54-abc8-3234dbcf893f].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:05:02,395Z [Mock network] flow.[171f546b-89fc-4f54-abc8-3234dbcf893f].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:05:02,438Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.qn7265.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:05:02,508Z [Mock network] flow.[146eea9c-1dfd-4b71-9d3d-22551952bdf5].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:05:02,552Z [Mock network] flow.[146eea9c-1dfd-4b71-9d3d-22551952bdf5].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:05:02,554Z [Mock network] flow.[146eea9c-1dfd-4b71-9d3d-22551952bdf5].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:05:02,607Z [Mock network] flow.[146eea9c-1dfd-4b71-9d3d-22551952bdf5].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:05:02,698Z [Mock network] flow.[171f546b-89fc-4f54-abc8-3234dbcf893f].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-2493767489919791012). {}
[INFO ] 2019-11-01T00:05:02,713Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-2493767489919791012). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=8658252e-8bb5-46d5-b0f1-eb5a49c669c3, invocation_timestamp=2019-11-01T00:05:02.712Z, session_id=8658252e-8bb5-46d5-b0f1-eb5a49c669c3, session_timestamp=2019-11-01T00:05:02.712Z}
[INFO ] 2019-11-01T00:05:02,733Z [Mock network] flow.[5f18f938-3a91-4411-b5fb-1711d4b04266].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:05:02,807Z [Mock network] flow.[5f18f938-3a91-4411-b5fb-1711d4b04266].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:05:02,809Z [Mock network] flow.[5f18f938-3a91-4411-b5fb-1711d4b04266].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:05:02,832Z [Mock network] flow.[5f18f938-3a91-4411-b5fb-1711d4b04266].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:05:02,983Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:05:02,984Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:05:02,988Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@385264b6 {}
[INFO ] 2019-11-01T00:05:02,996Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:05:02,997Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:05:02,998Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:05:03,080Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:05:03,086Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:05:03,087Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566703087) {}
[INFO ] 2019-11-01T00:05:03,090Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:03,095Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566703087) {}
[INFO ] 2019-11-01T00:05:03,096Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566703087) {}
[INFO ] 2019-11-01T00:05:03,238Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:05:03,354Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:05:03,457Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:05:03,458Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:05:03,466Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:05:03,470Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:05:03,471Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:05:03,472Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:05:03,472Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:05:03,473Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:05:03,483Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 1BC81DB6B43AFDBFC9F4BC6688FEB2AC0FC0257AAD4EF43AD3F03D77C247CCDB, not inserting the second time {}
[INFO ] 2019-11-01T00:05:03,488Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566703087) {}
[INFO ] 2019-11-01T00:05:03,490Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:05:03,494Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566703087) {}
[INFO ] 2019-11-01T00:05:03,499Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566703087) {}
[INFO ] 2019-11-01T00:05:03,500Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:05:03,500Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566703087) {}
[INFO ] 2019-11-01T00:05:03,502Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:05:03,507Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:05:03,522Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:05:03,528Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@5f755a96 {}
[INFO ] 2019-11-01T00:05:03,536Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:05:03,537Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:05:03,538Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:05:03,604Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:05:03,612Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:05:03,613Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566703613) {}
[INFO ] 2019-11-01T00:05:03,617Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:03,621Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566703613) {}
[INFO ] 2019-11-01T00:05:03,622Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566703613) {}
[INFO ] 2019-11-01T00:05:03,768Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:05:03,884Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:05:03,977Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:05:03,979Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:05:03,992Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:05:03,993Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:05:03,994Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:05:03,995Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:05:03,996Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:05:04,006Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key B6863F96351AFA325A05981126BEDE6F22DE971CA51EE1B7F598A41D220488DB, not inserting the second time {}
[INFO ] 2019-11-01T00:05:04,010Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566703087) {}
[INFO ] 2019-11-01T00:05:04,013Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:04,019Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566703087) {}
[INFO ] 2019-11-01T00:05:04,020Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566703613) {}
[INFO ] 2019-11-01T00:05:04,021Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:04,025Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566703613) {}
[INFO ] 2019-11-01T00:05:04,026Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566703613) {}
[INFO ] 2019-11-01T00:05:04,028Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:05:04,029Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566703613) {}
[INFO ] 2019-11-01T00:05:04,030Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566703613) {}
[INFO ] 2019-11-01T00:05:04,030Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:05:04,031Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566703613) {}
[INFO ] 2019-11-01T00:05:04,033Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:05:04,034Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:05:04,043Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:05:04,049Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6aa3e974 {}
[INFO ] 2019-11-01T00:05:04,058Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:05:04,059Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:05:04,059Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:05:04,111Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:05:04,116Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:05:04,117Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566704117) {}
[INFO ] 2019-11-01T00:05:04,120Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:04,123Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566704117) {}
[INFO ] 2019-11-01T00:05:04,123Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566704117) {}
[INFO ] 2019-11-01T00:05:04,271Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:05:04,438Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:05:04,527Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:05:04,529Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:05:04,542Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:05:04,544Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:05:04,545Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:05:04,546Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:05:04,546Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:05:04,561Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key F54A9AFA462D464D6FF653D14CE3C9758DDD0862C76633FEA22AE74BAD737177, not inserting the second time {}
[INFO ] 2019-11-01T00:05:04,565Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566703087) {}
[INFO ] 2019-11-01T00:05:04,566Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:04,573Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566703087) {}
[INFO ] 2019-11-01T00:05:04,574Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566704117) {}
[INFO ] 2019-11-01T00:05:04,576Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:04,579Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566704117) {}
[INFO ] 2019-11-01T00:05:04,580Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566703613) {}
[INFO ] 2019-11-01T00:05:04,581Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:04,585Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566703613) {}
[INFO ] 2019-11-01T00:05:04,585Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566704117) {}
[INFO ] 2019-11-01T00:05:04,586Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:04,590Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566704117) {}
[INFO ] 2019-11-01T00:05:04,590Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566704117) {}
[INFO ] 2019-11-01T00:05:04,593Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:05:04,593Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566704117) {}
[INFO ] 2019-11-01T00:05:04,594Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566704117) {}
[INFO ] 2019-11-01T00:05:04,594Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:05:04,595Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566704117) {}
[INFO ] 2019-11-01T00:05:04,597Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:05:04,597Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:05:04,607Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:05:04,612Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@680a048f {}
[INFO ] 2019-11-01T00:05:04,626Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:05:04,627Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:05:04,628Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:05:04,685Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:05:04,691Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:05:04,693Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566704693) {}
[INFO ] 2019-11-01T00:05:04,696Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:04,698Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566704693) {}
[INFO ] 2019-11-01T00:05:04,699Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566704693) {}
[INFO ] 2019-11-01T00:05:04,839Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:05:04,970Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:05:05,061Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:05:05,063Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:05:05,114Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:05:05,116Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:05:05,116Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:05:05,117Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:05:05,119Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:05:05,129Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key F6F57BABF8026FB96F1A9FDE16F57344F1E128D0544FFD70699831F5D44304DC, not inserting the second time {}
[INFO ] 2019-11-01T00:05:05,136Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566703087) {}
[INFO ] 2019-11-01T00:05:05,141Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:05,149Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566703087) {}
[INFO ] 2019-11-01T00:05:05,149Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566704693) {}
[INFO ] 2019-11-01T00:05:05,151Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:05,157Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566704693) {}
[INFO ] 2019-11-01T00:05:05,158Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566703613) {}
[INFO ] 2019-11-01T00:05:05,159Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:05,166Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566703613) {}
[INFO ] 2019-11-01T00:05:05,171Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566704693) {}
[INFO ] 2019-11-01T00:05:05,172Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:05,180Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566704693) {}
[INFO ] 2019-11-01T00:05:05,181Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566704117) {}
[INFO ] 2019-11-01T00:05:05,183Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:05,187Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566704117) {}
[INFO ] 2019-11-01T00:05:05,188Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566704693) {}
[INFO ] 2019-11-01T00:05:05,190Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:05,193Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566704693) {}
[INFO ] 2019-11-01T00:05:05,194Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566704693) {}
[INFO ] 2019-11-01T00:05:05,196Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:05:05,197Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566704693) {}
[INFO ] 2019-11-01T00:05:05,198Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566704693) {}
[INFO ] 2019-11-01T00:05:05,198Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:05:05,199Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566704693) {}
[INFO ] 2019-11-01T00:05:05,204Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:05:05,204Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:05:05,219Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:05:05,231Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@491d1f2c {}
[INFO ] 2019-11-01T00:05:05,241Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:05:05,242Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:05:05,243Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:05:05,347Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:05:05,353Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:05:05,354Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566705354) {}
[INFO ] 2019-11-01T00:05:05,358Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:05,360Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566705354) {}
[INFO ] 2019-11-01T00:05:05,361Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566705354) {}
[INFO ] 2019-11-01T00:05:05,486Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:05:05,603Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:05:05,694Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:05:05,697Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:05:05,710Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:05:05,711Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:05:05,712Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:05:05,712Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:05:05,715Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:05:05,728Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 6FF7F79A05F3213FE99C8E66F72D5702808A59A0E1470A7C4608AA66370887FF, not inserting the second time {}
[INFO ] 2019-11-01T00:05:05,733Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566703087) {}
[INFO ] 2019-11-01T00:05:05,735Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:05,740Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566703087) {}
[INFO ] 2019-11-01T00:05:05,742Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566705354) {}
[INFO ] 2019-11-01T00:05:05,743Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:05,755Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566705354) {}
[INFO ] 2019-11-01T00:05:05,756Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566703613) {}
[INFO ] 2019-11-01T00:05:05,757Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:05,764Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566703613) {}
[INFO ] 2019-11-01T00:05:05,770Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566705354) {}
[INFO ] 2019-11-01T00:05:05,775Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:05,781Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566705354) {}
[INFO ] 2019-11-01T00:05:05,782Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566704117) {}
[INFO ] 2019-11-01T00:05:05,783Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:05,795Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566704117) {}
[INFO ] 2019-11-01T00:05:05,796Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566705354) {}
[INFO ] 2019-11-01T00:05:05,797Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:05,800Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566705354) {}
[INFO ] 2019-11-01T00:05:05,802Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566704693) {}
[INFO ] 2019-11-01T00:05:05,803Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:05,808Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566704693) {}
[INFO ] 2019-11-01T00:05:05,809Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566705354) {}
[INFO ] 2019-11-01T00:05:05,811Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:05,815Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566705354) {}
[INFO ] 2019-11-01T00:05:05,816Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566705354) {}
[INFO ] 2019-11-01T00:05:05,824Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:05:05,826Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566705354) {}
[INFO ] 2019-11-01T00:05:05,827Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566705354) {}
[INFO ] 2019-11-01T00:05:05,828Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:05:05,829Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566705354) {}
[INFO ] 2019-11-01T00:05:05,832Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:05:05,833Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:05:05,834Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:05:05,835Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:05:05,835Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:05:05,836Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:05:05,837Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:05:05,838Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:05:05,926Z [Mock network] flow.[b7021429-69db-4f45-920c-0dc1660c1083].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-5513068893274629067). {}
[INFO ] 2019-11-01T00:05:05,984Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-5513068893274629067). {invocation_id=eb7ccc73-3bf4-4251-98f8-bfccf7b81923, invocation_timestamp=2019-11-01T00:05:05.984Z, session_id=eb7ccc73-3bf4-4251-98f8-bfccf7b81923, session_timestamp=2019-11-01T00:05:05.984Z}
[INFO ] 2019-11-01T00:05:06,178Z [Mock network] flow.[b7021429-69db-4f45-920c-0dc1660c1083].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=4314077170686384654). {}
[INFO ] 2019-11-01T00:05:06,194Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=4314077170686384654). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=5580a092-c7ca-44cb-bb1f-a56baa15978b, invocation_timestamp=2019-11-01T00:05:06.193Z, session_id=5580a092-c7ca-44cb-bb1f-a56baa15978b, session_timestamp=2019-11-01T00:05:06.193Z}
[INFO ] 2019-11-01T00:05:06,247Z [Mock network] flow.[b7021429-69db-4f45-920c-0dc1660c1083].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-7350406098799195068). {}
[INFO ] 2019-11-01T00:05:06,298Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-7350406098799195068). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=7a250768-48b7-48d7-b993-de936e11a3f0, invocation_timestamp=2019-11-01T00:05:06.297Z, session_id=7a250768-48b7-48d7-b993-de936e11a3f0, session_timestamp=2019-11-01T00:05:06.297Z}
[INFO ] 2019-11-01T00:05:06,382Z [Mock network] flow.[8baaeaf1-f350-44ae-b55c-81e90cba8107].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-3927865947661579617). {}
[INFO ] 2019-11-01T00:05:06,415Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-3927865947661579617). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=ac3d33ba-0be1-41a1-92fd-bcaff67768e6, invocation_timestamp=2019-11-01T00:05:06.415Z, session_id=ac3d33ba-0be1-41a1-92fd-bcaff67768e6, session_timestamp=2019-11-01T00:05:06.415Z}
[INFO ] 2019-11-01T00:05:06,478Z [Mock network] flow.[1cea4bb6-8037-4b92-b577-ddec5b6cf9ea].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=7163077093121049883). {}
[INFO ] 2019-11-01T00:05:06,505Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=7163077093121049883). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=d1159d71-7dd8-4bfe-80c6-36cf3d61a048, invocation_timestamp=2019-11-01T00:05:06.504Z, session_id=d1159d71-7dd8-4bfe-80c6-36cf3d61a048, session_timestamp=2019-11-01T00:05:06.504Z}
[INFO ] 2019-11-01T00:05:06,516Z [Mock network] flow.[cd019348-f6bb-4fb0-9846-df4ab785f69e].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:05:06,559Z [Mock network] flow.[cd019348-f6bb-4fb0-9846-df4ab785f69e].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:05:06,652Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:05:06,676Z [Mock network] flow.[ceb55be7-ef09-44f0-8ae2-ac0c27233e44].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-7286799335295583277). {}
[INFO ] 2019-11-01T00:05:06,687Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-7286799335295583277). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=9fdd9d10-45f4-4bb2-9109-94f37add4ef3, invocation_timestamp=2019-11-01T00:05:06.686Z, session_id=9fdd9d10-45f4-4bb2-9109-94f37add4ef3, session_timestamp=2019-11-01T00:05:06.686Z}
[INFO ] 2019-11-01T00:05:06,699Z [Mock network] flow.[733af614-8cbd-4bd6-ba15-395cf5949aa5].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:05:06,738Z [Mock network] flow.[733af614-8cbd-4bd6-ba15-395cf5949aa5].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:05:06,776Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.qn7265.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:05:06,839Z [Mock network] flow.[ceb55be7-ef09-44f0-8ae2-ac0c27233e44].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:05:06,890Z [Mock network] flow.[ceb55be7-ef09-44f0-8ae2-ac0c27233e44].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:05:06,892Z [Mock network] flow.[ceb55be7-ef09-44f0-8ae2-ac0c27233e44].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:05:06,921Z [Mock network] flow.[ceb55be7-ef09-44f0-8ae2-ac0c27233e44].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:05:06,992Z [Mock network] flow.[733af614-8cbd-4bd6-ba15-395cf5949aa5].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=4075332010888410208). {}
[INFO ] 2019-11-01T00:05:07,013Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=4075332010888410208). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=71bd8b70-bdc5-40e8-bc0c-0aa6ca4beca1, invocation_timestamp=2019-11-01T00:05:07.012Z, session_id=71bd8b70-bdc5-40e8-bc0c-0aa6ca4beca1, session_timestamp=2019-11-01T00:05:07.012Z}
[INFO ] 2019-11-01T00:05:07,025Z [Mock network] flow.[e5adc24b-a403-484d-8021-62aa1873a1b6].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:05:07,094Z [Mock network] flow.[e5adc24b-a403-484d-8021-62aa1873a1b6].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:05:07,096Z [Mock network] flow.[e5adc24b-a403-484d-8021-62aa1873a1b6].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:05:07,110Z [Mock network] flow.[e5adc24b-a403-484d-8021-62aa1873a1b6].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:05:07,215Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:05:07,216Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:05:07,219Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@37be2f72 {}
[INFO ] 2019-11-01T00:05:07,228Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:05:07,229Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:05:07,230Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:05:07,307Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:05:07,313Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:05:07,314Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566707314) {}
[INFO ] 2019-11-01T00:05:07,317Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:07,322Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566707314) {}
[INFO ] 2019-11-01T00:05:07,323Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566707314) {}
[INFO ] 2019-11-01T00:05:07,463Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:05:07,581Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:05:07,672Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:05:07,673Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:05:07,681Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:05:07,684Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:05:07,685Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:05:07,686Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:05:07,690Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:05:07,690Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:05:07,700Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 487D863AA57979838553EA1CCC90A8F0A356AD87F7849B4323FFC72299BA66F6, not inserting the second time {}
[INFO ] 2019-11-01T00:05:07,704Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566707314) {}
[INFO ] 2019-11-01T00:05:07,706Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:05:07,709Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566707314) {}
[INFO ] 2019-11-01T00:05:07,710Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566707314) {}
[INFO ] 2019-11-01T00:05:07,711Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:05:07,712Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566707314) {}
[INFO ] 2019-11-01T00:05:07,714Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:05:07,715Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:05:07,738Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:05:07,744Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@7279f088 {}
[INFO ] 2019-11-01T00:05:07,756Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:05:07,758Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:05:07,759Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:05:07,824Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:05:07,828Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:05:07,829Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566707829) {}
[INFO ] 2019-11-01T00:05:07,831Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:07,833Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566707829) {}
[INFO ] 2019-11-01T00:05:07,834Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566707829) {}
[INFO ] 2019-11-01T00:05:08,010Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:05:08,133Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:05:08,222Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:05:08,224Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:05:08,233Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:05:08,234Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:05:08,235Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:05:08,236Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:05:08,236Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:05:08,246Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 654B9BD2A29B2605EB5C2741630807EADE2AA2398C60F2BCB6F3C7E6805D15CE, not inserting the second time {}
[INFO ] 2019-11-01T00:05:08,249Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566707314) {}
[INFO ] 2019-11-01T00:05:08,250Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:08,255Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566707314) {}
[INFO ] 2019-11-01T00:05:08,260Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566707829) {}
[INFO ] 2019-11-01T00:05:08,262Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:08,267Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566707829) {}
[INFO ] 2019-11-01T00:05:08,272Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566707829) {}
[INFO ] 2019-11-01T00:05:08,274Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:05:08,276Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566707829) {}
[INFO ] 2019-11-01T00:05:08,277Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566707829) {}
[INFO ] 2019-11-01T00:05:08,278Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:05:08,278Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566707829) {}
[INFO ] 2019-11-01T00:05:08,281Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:05:08,282Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:05:08,294Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:05:08,300Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@5db82396 {}
[INFO ] 2019-11-01T00:05:08,308Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:05:08,309Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:05:08,310Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:05:08,378Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:05:08,386Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:05:08,387Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566708387) {}
[INFO ] 2019-11-01T00:05:08,389Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:08,391Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566708387) {}
[INFO ] 2019-11-01T00:05:08,392Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566708387) {}
[INFO ] 2019-11-01T00:05:08,532Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:05:08,671Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:05:08,757Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:05:08,758Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:05:08,767Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:05:08,768Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:05:08,769Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:05:08,769Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:05:08,770Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:05:08,779Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key F235F24DFEFDB8AA07846105B2F6478451983368E3686C180E3B92D569284200, not inserting the second time {}
[INFO ] 2019-11-01T00:05:08,782Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566707314) {}
[INFO ] 2019-11-01T00:05:08,783Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:08,791Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566707314) {}
[INFO ] 2019-11-01T00:05:08,792Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566708387) {}
[INFO ] 2019-11-01T00:05:08,793Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:08,800Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566708387) {}
[INFO ] 2019-11-01T00:05:08,800Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566707829) {}
[INFO ] 2019-11-01T00:05:08,802Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:08,807Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566707829) {}
[INFO ] 2019-11-01T00:05:08,808Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566708387) {}
[INFO ] 2019-11-01T00:05:08,809Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:08,813Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566708387) {}
[INFO ] 2019-11-01T00:05:08,814Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566708387) {}
[INFO ] 2019-11-01T00:05:08,816Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:05:08,816Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566708387) {}
[INFO ] 2019-11-01T00:05:08,817Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566708387) {}
[INFO ] 2019-11-01T00:05:08,818Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:05:08,818Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566708387) {}
[INFO ] 2019-11-01T00:05:08,820Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:05:08,821Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:05:08,830Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:05:08,835Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@23aa85f8 {}
[INFO ] 2019-11-01T00:05:08,844Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:05:08,844Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:05:08,845Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:05:08,897Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:05:08,902Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:05:08,903Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566708903) {}
[INFO ] 2019-11-01T00:05:08,907Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:08,909Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566708903) {}
[INFO ] 2019-11-01T00:05:08,915Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566708903) {}
[INFO ] 2019-11-01T00:05:09,040Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:05:09,156Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:05:09,249Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:05:09,250Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:05:09,261Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:05:09,261Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:05:09,262Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:05:09,263Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:05:09,263Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:05:09,272Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key EB47A743C403CD098E38C44EC4683C16ACF44E951747C198620B523591216752, not inserting the second time {}
[INFO ] 2019-11-01T00:05:09,276Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566707314) {}
[INFO ] 2019-11-01T00:05:09,278Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:09,290Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566707314) {}
[INFO ] 2019-11-01T00:05:09,291Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566708903) {}
[INFO ] 2019-11-01T00:05:09,293Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:09,297Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566708903) {}
[INFO ] 2019-11-01T00:05:09,334Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566707829) {}
[INFO ] 2019-11-01T00:05:09,337Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:09,341Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566707829) {}
[INFO ] 2019-11-01T00:05:09,341Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566708903) {}
[INFO ] 2019-11-01T00:05:09,342Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:09,353Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566708903) {}
[INFO ] 2019-11-01T00:05:09,355Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566708387) {}
[INFO ] 2019-11-01T00:05:09,356Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:09,359Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566708387) {}
[INFO ] 2019-11-01T00:05:09,360Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566708903) {}
[INFO ] 2019-11-01T00:05:09,361Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:09,364Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566708903) {}
[INFO ] 2019-11-01T00:05:09,365Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566708903) {}
[INFO ] 2019-11-01T00:05:09,367Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:05:09,368Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566708903) {}
[INFO ] 2019-11-01T00:05:09,368Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566708903) {}
[INFO ] 2019-11-01T00:05:09,369Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:05:09,370Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566708903) {}
[INFO ] 2019-11-01T00:05:09,371Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:05:09,372Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:05:09,383Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:05:09,394Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@77344407 {}
[INFO ] 2019-11-01T00:05:09,406Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:05:09,406Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:05:09,407Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:05:09,463Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:05:09,472Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:05:09,473Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566709473) {}
[INFO ] 2019-11-01T00:05:09,476Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:09,478Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566709473) {}
[INFO ] 2019-11-01T00:05:09,479Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566709473) {}
[INFO ] 2019-11-01T00:05:09,609Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:05:09,738Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:05:09,818Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:05:09,819Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:05:09,829Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:05:09,829Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:05:09,830Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:05:09,831Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:05:09,831Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:05:09,840Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 390AC6BCA51B6EDF9CDD2F9BF2FF5044FD40CA962982EB1187116C98ECD7033C, not inserting the second time {}
[INFO ] 2019-11-01T00:05:09,844Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566707314) {}
[INFO ] 2019-11-01T00:05:09,848Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:09,852Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566707314) {}
[INFO ] 2019-11-01T00:05:09,852Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566709473) {}
[INFO ] 2019-11-01T00:05:09,853Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:09,856Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566709473) {}
[INFO ] 2019-11-01T00:05:09,856Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566707829) {}
[INFO ] 2019-11-01T00:05:09,857Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:09,860Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566707829) {}
[INFO ] 2019-11-01T00:05:09,861Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566709473) {}
[INFO ] 2019-11-01T00:05:09,862Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:09,864Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566709473) {}
[INFO ] 2019-11-01T00:05:09,865Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566708387) {}
[INFO ] 2019-11-01T00:05:09,866Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:09,869Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566708387) {}
[INFO ] 2019-11-01T00:05:09,869Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566709473) {}
[INFO ] 2019-11-01T00:05:09,870Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:09,873Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566709473) {}
[INFO ] 2019-11-01T00:05:09,873Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566708903) {}
[INFO ] 2019-11-01T00:05:09,874Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:09,877Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566708903) {}
[INFO ] 2019-11-01T00:05:09,878Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566709473) {}
[INFO ] 2019-11-01T00:05:09,879Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:09,882Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566709473) {}
[INFO ] 2019-11-01T00:05:09,882Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566709473) {}
[INFO ] 2019-11-01T00:05:09,884Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:05:09,885Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566709473) {}
[INFO ] 2019-11-01T00:05:09,885Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566709473) {}
[INFO ] 2019-11-01T00:05:09,886Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:05:09,886Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566709473) {}
[INFO ] 2019-11-01T00:05:09,887Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:05:09,887Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:05:09,888Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:05:09,889Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:05:09,889Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:05:09,890Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:05:09,890Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:05:09,891Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:05:09,943Z [Mock network] flow.[191530b6-c468-4a4b-a9ac-5e0a98444218].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-7681162395473450505). {}
[INFO ] 2019-11-01T00:05:10,028Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-7681162395473450505). {invocation_id=83402686-b387-440b-84bb-75296251821e, invocation_timestamp=2019-11-01T00:05:10.027Z, session_id=83402686-b387-440b-84bb-75296251821e, session_timestamp=2019-11-01T00:05:10.027Z}
[INFO ] 2019-11-01T00:05:10,169Z [Mock network] flow.[191530b6-c468-4a4b-a9ac-5e0a98444218].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-7595537296564407135). {}
[INFO ] 2019-11-01T00:05:10,179Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-7595537296564407135). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=409bcd6d-e562-4632-bef6-c54f6d898848, invocation_timestamp=2019-11-01T00:05:10.178Z, session_id=409bcd6d-e562-4632-bef6-c54f6d898848, session_timestamp=2019-11-01T00:05:10.178Z}
[INFO ] 2019-11-01T00:05:10,207Z [Mock network] flow.[191530b6-c468-4a4b-a9ac-5e0a98444218].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-467196201169128765). {}
[INFO ] 2019-11-01T00:05:10,220Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-467196201169128765). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=f9d10bde-9160-4901-938d-a6d5c5ec80c4, invocation_timestamp=2019-11-01T00:05:10.218Z, session_id=f9d10bde-9160-4901-938d-a6d5c5ec80c4, session_timestamp=2019-11-01T00:05:10.218Z}
[INFO ] 2019-11-01T00:05:10,348Z [Mock network] flow.[969598a7-2f0b-4f54-a0ee-bc32652daf90].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=8427796288744259687). {}
[INFO ] 2019-11-01T00:05:10,370Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=8427796288744259687). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=2a9a414a-e9cd-455e-92b5-acecc496378a, invocation_timestamp=2019-11-01T00:05:10.369Z, session_id=2a9a414a-e9cd-455e-92b5-acecc496378a, session_timestamp=2019-11-01T00:05:10.369Z}
[INFO ] 2019-11-01T00:05:10,438Z [Mock network] flow.[17b652d3-5858-4106-90a2-1df3df89cbf7].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=4593955737520491260). {}
[INFO ] 2019-11-01T00:05:10,463Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=4593955737520491260). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=ccbc1dc1-88dc-483a-8eb4-4b3d71473fbd, invocation_timestamp=2019-11-01T00:05:10.461Z, session_id=ccbc1dc1-88dc-483a-8eb4-4b3d71473fbd, session_timestamp=2019-11-01T00:05:10.461Z}
[INFO ] 2019-11-01T00:05:10,470Z [Mock network] flow.[98543403-f106-4a11-9f30-111a6dbdc752].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:05:10,512Z [Mock network] flow.[98543403-f106-4a11-9f30-111a6dbdc752].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:05:10,566Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:05:10,585Z [Mock network] flow.[5f4b21b6-d2a9-435d-a5c4-23195cea0b1d].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-4405339463608170232). {}
[INFO ] 2019-11-01T00:05:10,604Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-4405339463608170232). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=3a07c308-63f9-4880-99ec-3b3bf5bdcebe, invocation_timestamp=2019-11-01T00:05:10.603Z, session_id=3a07c308-63f9-4880-99ec-3b3bf5bdcebe, session_timestamp=2019-11-01T00:05:10.603Z}
[INFO ] 2019-11-01T00:05:10,611Z [Mock network] flow.[97a8a8b9-7f62-4be6-a240-22b8d8ece230].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:05:10,688Z [Mock network] flow.[97a8a8b9-7f62-4be6-a240-22b8d8ece230].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:05:10,722Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.qn7265.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:05:10,776Z [Mock network] flow.[5f4b21b6-d2a9-435d-a5c4-23195cea0b1d].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:05:10,801Z [Mock network] flow.[5f4b21b6-d2a9-435d-a5c4-23195cea0b1d].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:05:10,803Z [Mock network] flow.[5f4b21b6-d2a9-435d-a5c4-23195cea0b1d].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:05:10,825Z [Mock network] flow.[5f4b21b6-d2a9-435d-a5c4-23195cea0b1d].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:05:10,919Z [Mock network] flow.[97a8a8b9-7f62-4be6-a240-22b8d8ece230].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=5306157272558647862). {}
[INFO ] 2019-11-01T00:05:10,938Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=5306157272558647862). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=1acdad60-df0f-49d7-a180-900fe94bd773, invocation_timestamp=2019-11-01T00:05:10.937Z, session_id=1acdad60-df0f-49d7-a180-900fe94bd773, session_timestamp=2019-11-01T00:05:10.937Z}
[INFO ] 2019-11-01T00:05:10,950Z [Mock network] flow.[29c21047-1460-4709-918c-bccb0f658b24].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:05:10,997Z [Mock network] flow.[29c21047-1460-4709-918c-bccb0f658b24].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:05:10,998Z [Mock network] flow.[29c21047-1460-4709-918c-bccb0f658b24].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:05:11,022Z [Mock network] flow.[29c21047-1460-4709-918c-bccb0f658b24].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:05:11,173Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:05:11,174Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:05:11,177Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6c77f933 {}
[INFO ] 2019-11-01T00:05:11,184Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:05:11,185Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:05:11,185Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:05:11,277Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:05:11,290Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:05:11,291Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566711291) {}
[INFO ] 2019-11-01T00:05:11,293Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:11,303Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566711291) {}
[INFO ] 2019-11-01T00:05:11,304Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566711291) {}
[INFO ] 2019-11-01T00:05:11,435Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:05:11,549Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:05:11,639Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:05:11,640Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:05:11,648Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:05:11,651Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:05:11,651Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:05:11,652Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:05:11,653Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:05:11,653Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:05:11,664Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 70177976C1436991328E12DEC257A19837EFE6B6217B4A427633E5ACC73D39E7, not inserting the second time {}
[INFO ] 2019-11-01T00:05:11,669Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566711291) {}
[INFO ] 2019-11-01T00:05:11,672Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:05:11,672Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566711291) {}
[INFO ] 2019-11-01T00:05:11,673Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566711291) {}
[INFO ] 2019-11-01T00:05:11,674Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:05:11,679Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566711291) {}
[INFO ] 2019-11-01T00:05:11,681Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:05:11,684Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:05:11,702Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:05:11,711Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@211cc854 {}
[INFO ] 2019-11-01T00:05:11,724Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:05:11,727Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:05:11,728Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:05:11,781Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:05:11,786Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:05:11,786Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566711786) {}
[INFO ] 2019-11-01T00:05:11,789Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:11,791Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566711786) {}
[INFO ] 2019-11-01T00:05:11,791Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566711786) {}
[INFO ] 2019-11-01T00:05:11,916Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:05:12,062Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:05:12,151Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:05:12,152Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:05:12,162Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:05:12,163Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:05:12,164Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:05:12,164Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:05:12,165Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:05:12,174Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key DC2B61D2ABAD9523A369AC9369A311F52B90FD5C8B08CD150C441DF6BA5F40F3, not inserting the second time {}
[INFO ] 2019-11-01T00:05:12,178Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566711291) {}
[INFO ] 2019-11-01T00:05:12,179Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:12,182Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566711291) {}
[INFO ] 2019-11-01T00:05:12,183Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566711786) {}
[INFO ] 2019-11-01T00:05:12,186Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:12,190Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566711786) {}
[INFO ] 2019-11-01T00:05:12,191Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566711786) {}
[INFO ] 2019-11-01T00:05:12,192Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:05:12,193Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566711786) {}
[INFO ] 2019-11-01T00:05:12,193Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566711786) {}
[INFO ] 2019-11-01T00:05:12,194Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:05:12,194Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566711786) {}
[INFO ] 2019-11-01T00:05:12,196Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:05:12,197Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:05:12,206Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:05:12,212Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@2b73fc62 {}
[INFO ] 2019-11-01T00:05:12,223Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:05:12,224Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:05:12,225Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:05:12,273Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:05:12,278Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:05:12,278Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566712278) {}
[INFO ] 2019-11-01T00:05:12,281Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:12,283Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566712278) {}
[INFO ] 2019-11-01T00:05:12,283Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566712278) {}
[INFO ] 2019-11-01T00:05:12,422Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:05:12,538Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:05:12,629Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:05:12,631Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:05:12,640Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:05:12,641Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:05:12,641Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:05:12,642Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:05:12,643Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:05:12,652Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 5137D887D0CDC40EC592BDB3DB2C1CE212D41DFEF6C0882C4943C1C8944259ED, not inserting the second time {}
[INFO ] 2019-11-01T00:05:12,655Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566711291) {}
[INFO ] 2019-11-01T00:05:12,657Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:12,671Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566711291) {}
[INFO ] 2019-11-01T00:05:12,672Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566712278) {}
[INFO ] 2019-11-01T00:05:12,673Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:12,677Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566712278) {}
[INFO ] 2019-11-01T00:05:12,678Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566711786) {}
[INFO ] 2019-11-01T00:05:12,679Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:12,682Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566711786) {}
[INFO ] 2019-11-01T00:05:12,683Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566712278) {}
[INFO ] 2019-11-01T00:05:12,684Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:12,687Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566712278) {}
[INFO ] 2019-11-01T00:05:12,688Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566712278) {}
[INFO ] 2019-11-01T00:05:12,690Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:05:12,691Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566712278) {}
[INFO ] 2019-11-01T00:05:12,692Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566712278) {}
[INFO ] 2019-11-01T00:05:12,692Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:05:12,693Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566712278) {}
[INFO ] 2019-11-01T00:05:12,695Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:05:12,696Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:05:13,129Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:05:13,135Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@5a931af {}
[INFO ] 2019-11-01T00:05:13,145Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:05:13,145Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:05:13,146Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:05:13,193Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:05:13,199Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:05:13,200Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566713200) {}
[INFO ] 2019-11-01T00:05:13,202Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:13,204Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566713200) {}
[INFO ] 2019-11-01T00:05:13,205Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566713200) {}
[INFO ] 2019-11-01T00:05:13,325Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:05:13,440Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:05:13,531Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:05:13,532Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:05:13,542Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:05:13,543Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:05:13,544Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:05:13,544Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:05:13,545Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:05:13,554Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 1C9B0056FFD7B0A35AE6F57C49C18DCE8510F7050EBB560106BE6A3EBF82D5A6, not inserting the second time {}
[INFO ] 2019-11-01T00:05:13,557Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566711291) {}
[INFO ] 2019-11-01T00:05:13,558Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:13,562Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566711291) {}
[INFO ] 2019-11-01T00:05:13,570Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566713200) {}
[INFO ] 2019-11-01T00:05:13,571Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:13,575Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566713200) {}
[INFO ] 2019-11-01T00:05:13,577Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566711786) {}
[INFO ] 2019-11-01T00:05:13,578Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:13,583Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566711786) {}
[INFO ] 2019-11-01T00:05:13,584Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566713200) {}
[INFO ] 2019-11-01T00:05:13,585Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:13,588Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566713200) {}
[INFO ] 2019-11-01T00:05:13,589Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566712278) {}
[INFO ] 2019-11-01T00:05:13,589Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:13,593Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566712278) {}
[INFO ] 2019-11-01T00:05:13,594Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566713200) {}
[INFO ] 2019-11-01T00:05:13,595Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:13,597Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566713200) {}
[INFO ] 2019-11-01T00:05:13,598Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566713200) {}
[INFO ] 2019-11-01T00:05:13,600Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:05:13,600Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566713200) {}
[INFO ] 2019-11-01T00:05:13,601Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566713200) {}
[INFO ] 2019-11-01T00:05:13,601Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:05:13,602Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566713200) {}
[INFO ] 2019-11-01T00:05:13,603Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:05:13,604Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:05:13,613Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:05:13,619Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@190da314 {}
[INFO ] 2019-11-01T00:05:13,624Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:05:13,625Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:05:13,626Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:05:13,674Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:05:13,680Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:05:13,680Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566713680) {}
[INFO ] 2019-11-01T00:05:13,683Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:13,685Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566713680) {}
[INFO ] 2019-11-01T00:05:13,686Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566713680) {}
[INFO ] 2019-11-01T00:05:13,847Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:05:13,966Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:05:14,057Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:05:14,059Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:05:14,069Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:05:14,070Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:05:14,071Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:05:14,071Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:05:14,072Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:05:14,082Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 82BB51717329D5831A84A9B7ABABC15340E16992CDFA44AE8B970B86FC41F18D, not inserting the second time {}
[INFO ] 2019-11-01T00:05:14,086Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566711291) {}
[INFO ] 2019-11-01T00:05:14,087Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:14,091Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566711291) {}
[INFO ] 2019-11-01T00:05:14,092Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566713680) {}
[INFO ] 2019-11-01T00:05:14,093Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:14,097Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566713680) {}
[INFO ] 2019-11-01T00:05:14,097Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566711786) {}
[INFO ] 2019-11-01T00:05:14,098Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:14,102Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566711786) {}
[INFO ] 2019-11-01T00:05:14,102Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566713680) {}
[INFO ] 2019-11-01T00:05:14,103Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:14,106Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566713680) {}
[INFO ] 2019-11-01T00:05:14,109Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566712278) {}
[INFO ] 2019-11-01T00:05:14,110Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:14,113Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566712278) {}
[INFO ] 2019-11-01T00:05:14,114Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566713680) {}
[INFO ] 2019-11-01T00:05:14,115Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:14,119Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566713680) {}
[INFO ] 2019-11-01T00:05:14,119Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566713200) {}
[INFO ] 2019-11-01T00:05:14,120Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:14,124Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566713200) {}
[INFO ] 2019-11-01T00:05:14,124Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566713680) {}
[INFO ] 2019-11-01T00:05:14,125Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:05:14,129Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566713680) {}
[INFO ] 2019-11-01T00:05:14,130Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566713680) {}
[INFO ] 2019-11-01T00:05:14,132Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:05:14,132Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566713680) {}
[INFO ] 2019-11-01T00:05:14,133Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566713680) {}
[INFO ] 2019-11-01T00:05:14,133Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:05:14,134Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566713680) {}
[INFO ] 2019-11-01T00:05:14,134Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:05:14,135Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:05:14,135Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:05:14,136Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:05:14,136Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:05:14,137Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:05:14,137Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:05:14,138Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:05:14,185Z [Mock network] flow.[d78f80d8-0170-4c66-9f54-a476add28af1].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=7717354894315606617). {}
[INFO ] 2019-11-01T00:05:14,227Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=7717354894315606617). {invocation_id=00ec6b0f-4956-4c8a-b353-3290468bab23, invocation_timestamp=2019-11-01T00:05:14.227Z, session_id=00ec6b0f-4956-4c8a-b353-3290468bab23, session_timestamp=2019-11-01T00:05:14.227Z}
[INFO ] 2019-11-01T00:05:14,360Z [Mock network] flow.[d78f80d8-0170-4c66-9f54-a476add28af1].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=1901366319335319595). {}
[INFO ] 2019-11-01T00:05:14,380Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=1901366319335319595). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=6cb1b306-7e23-4003-8b91-73d916804900, invocation_timestamp=2019-11-01T00:05:14.379Z, session_id=6cb1b306-7e23-4003-8b91-73d916804900, session_timestamp=2019-11-01T00:05:14.379Z}
[INFO ] 2019-11-01T00:05:14,440Z [Mock network] flow.[d78f80d8-0170-4c66-9f54-a476add28af1].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-6366484571453538242). {}
[INFO ] 2019-11-01T00:05:14,453Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-6366484571453538242). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=27039b88-f206-46ff-96e2-8f1c21e952a7, invocation_timestamp=2019-11-01T00:05:14.452Z, session_id=27039b88-f206-46ff-96e2-8f1c21e952a7, session_timestamp=2019-11-01T00:05:14.452Z}
[INFO ] 2019-11-01T00:05:14,514Z [Mock network] flow.[5d242dec-8216-4dab-9b6e-ac78e06f41ae].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=466778416156851539). {}
[INFO ] 2019-11-01T00:05:14,541Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=466778416156851539). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=464d36d0-178d-49d1-90f4-a4015e4400b5, invocation_timestamp=2019-11-01T00:05:14.541Z, session_id=464d36d0-178d-49d1-90f4-a4015e4400b5, session_timestamp=2019-11-01T00:05:14.541Z}
[INFO ] 2019-11-01T00:05:14,620Z [Mock network] flow.[12cde957-0738-4093-9ce5-01e94e5d842c].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=-5113010906006779879). {}
[INFO ] 2019-11-01T00:05:14,656Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-5113010906006779879). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=08d8118f-38f2-4c61-a6ab-3e7df892796a, invocation_timestamp=2019-11-01T00:05:14.655Z, session_id=08d8118f-38f2-4c61-a6ab-3e7df892796a, session_timestamp=2019-11-01T00:05:14.655Z}
[INFO ] 2019-11-01T00:05:14,672Z [Mock network] flow.[0b089202-4eb9-4dd9-8a4e-7c14659444d2].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:05:14,722Z [Mock network] flow.[0b089202-4eb9-4dd9-8a4e-7c14659444d2].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:05:14,799Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:05:14,815Z [Mock network] flow.[43fee022-b510-4122-b9a5-eeb19ad20e76].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=3293761422475329811). {}
[INFO ] 2019-11-01T00:05:14,836Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=3293761422475329811). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=71df7541-8a9b-4401-862d-648ceca00429, invocation_timestamp=2019-11-01T00:05:14.835Z, session_id=71df7541-8a9b-4401-862d-648ceca00429, session_timestamp=2019-11-01T00:05:14.835Z}
[INFO ] 2019-11-01T00:05:14,851Z [Mock network] flow.[5633f1ac-d669-4288-9117-0b05f019b618].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:05:14,897Z [Mock network] flow.[5633f1ac-d669-4288-9117-0b05f019b618].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:05:14,924Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.qn7265.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:05:14,965Z [Mock network] flow.[43fee022-b510-4122-b9a5-eeb19ad20e76].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:05:14,986Z [Mock network] flow.[43fee022-b510-4122-b9a5-eeb19ad20e76].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:05:14,988Z [Mock network] flow.[43fee022-b510-4122-b9a5-eeb19ad20e76].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:05:15,012Z [Mock network] flow.[43fee022-b510-4122-b9a5-eeb19ad20e76].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:05:15,103Z [Mock network] flow.[5633f1ac-d669-4288-9117-0b05f019b618].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=3614677272543416319). {}
[INFO ] 2019-11-01T00:05:15,116Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=3614677272543416319). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=3acc7afa-e1e1-4fda-aa29-142ce9e79bcf, invocation_timestamp=2019-11-01T00:05:15.115Z, session_id=3acc7afa-e1e1-4fda-aa29-142ce9e79bcf, session_timestamp=2019-11-01T00:05:15.115Z}
[INFO ] 2019-11-01T00:05:15,126Z [Mock network] flow.[364baf87-cf8a-4314-b46a-b1027631118f].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:05:15,152Z [Mock network] flow.[364baf87-cf8a-4314-b46a-b1027631118f].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:05:15,153Z [Mock network] flow.[364baf87-cf8a-4314-b46a-b1027631118f].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:05:15,165Z [Mock network] flow.[364baf87-cf8a-4314-b46a-b1027631118f].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:19,040Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.qn7265 in file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/classes/kotlin/test/com/qn7265: build/tmp/generated-test-cordapps/com.qn7265-793bb097-7882-4299-8879-8d9b0d601880.jar {}
[INFO ] 2019-11-01T00:07:19,074Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.qn7265 in file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/classes/kotlin/main/com/qn7265: build/tmp/generated-test-cordapps/com.qn7265-7a0b892e-9ce7-413b-a91a-aa41d01d01e6.jar {}
[INFO ] 2019-11-01T00:07:19,116Z [Test worker] cordapp.CordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/tmp/generated-test-cordapps/com.qn7265-793bb097-7882-4299-8879-8d9b0d601880.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/tmp/generated-test-cordapps/com.qn7265-7a0b892e-9ce7-413b-a91a-aa41d01d01e6.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/qn7265-contracts-new/build/libs/qn7265-contracts-new.jar, rootPackageName=com.qn7265), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/qn7265-contracts/build/libs/qn7265-contracts.jar, rootPackageName=com.qn7265), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/libs/prides.jar, rootPackageName=com.twig) {}
[INFO ] 2019-11-01T00:07:19,155Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:07:19,160Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:07:19,176Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/tmp/generated-test-cordapps/com.qn7265-793bb097-7882-4299-8879-8d9b0d601880.jar {}
[INFO ] 2019-11-01T00:07:19,212Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/tmp/generated-test-cordapps/com.qn7265-7a0b892e-9ce7-413b-a91a-aa41d01d01e6.jar {}
[INFO ] 2019-11-01T00:07:19,260Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/qn7265-contracts-new/build/libs/qn7265-contracts-new.jar {}
[INFO ] 2019-11-01T00:07:19,312Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/qn7265-contracts/build/libs/qn7265-contracts.jar {}
[INFO ] 2019-11-01T00:07:19,373Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/libs/prides.jar {}
[INFO ] 2019-11-01T00:07:19,567Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@567be686 {}
[INFO ] 2019-11-01T00:07:20,433Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:07:20,496Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:20,502Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:23,048Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:23,689Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:07:23,695Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566843695) {}
[INFO ] 2019-11-01T00:07:23,710Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:23,832Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566843695) {}
[INFO ] 2019-11-01T00:07:23,835Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566843695) {}
[INFO ] 2019-11-01T00:07:24,218Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:07:24,398Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:07:24,528Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:07:24,539Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:07:24,655Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:07:24,829Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:07:24,835Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:24,837Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:24,840Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:24,843Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:07:24,917Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 29479F36054DE70E12FA8FD4A782B955B54C39081C8998ABAFA154B1A5B4F4F9, not inserting the second time {}
[INFO ] 2019-11-01T00:07:24,993Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566843695) {}
[INFO ] 2019-11-01T00:07:25,017Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:25,020Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566843695) {}
[INFO ] 2019-11-01T00:07:25,022Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566843695) {}
[INFO ] 2019-11-01T00:07:25,024Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:25,026Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566843695) {}
[INFO ] 2019-11-01T00:07:25,032Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:07:25,034Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:07:25,057Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:07:25,071Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@999caae {}
[INFO ] 2019-11-01T00:07:25,089Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:07:25,095Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:25,099Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:25,315Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:25,326Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:07:25,329Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566845329) {}
[INFO ] 2019-11-01T00:07:25,334Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:25,341Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566845329) {}
[INFO ] 2019-11-01T00:07:25,342Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566845329) {}
[INFO ] 2019-11-01T00:07:25,520Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:07:25,679Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:07:25,792Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:07:25,795Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:07:25,824Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:07:25,829Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:25,833Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:25,837Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:25,840Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:07:25,865Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 50C5BB80338AAD342EFE338717455E154496F2E6E9348684A4FD97483F6A0DEB, not inserting the second time {}
[INFO ] 2019-11-01T00:07:25,878Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566843695) {}
[INFO ] 2019-11-01T00:07:25,882Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:25,912Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566843695) {}
[INFO ] 2019-11-01T00:07:25,915Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566845329) {}
[INFO ] 2019-11-01T00:07:25,924Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:25,938Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566845329) {}
[INFO ] 2019-11-01T00:07:25,940Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566845329) {}
[INFO ] 2019-11-01T00:07:25,946Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:25,947Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566845329) {}
[INFO ] 2019-11-01T00:07:25,949Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566845329) {}
[INFO ] 2019-11-01T00:07:25,950Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:25,951Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566845329) {}
[INFO ] 2019-11-01T00:07:25,955Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:07:25,956Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:07:25,977Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:07:25,999Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@50c6357 {}
[INFO ] 2019-11-01T00:07:26,015Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:07:26,017Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:26,019Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:26,158Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:26,183Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:07:26,184Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566846184) {}
[INFO ] 2019-11-01T00:07:26,194Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:26,209Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566846184) {}
[INFO ] 2019-11-01T00:07:26,210Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566846184) {}
[INFO ] 2019-11-01T00:07:26,389Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:07:26,537Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:07:26,631Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:07:26,634Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:07:26,649Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:07:26,651Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:26,653Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:26,654Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:26,655Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:07:26,672Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key C4FD50E95F63509B31D379AF9397DA4993BBA285948D5FBCBDEBEB53970462B5, not inserting the second time {}
[INFO ] 2019-11-01T00:07:26,681Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566843695) {}
[INFO ] 2019-11-01T00:07:26,687Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:26,708Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566843695) {}
[INFO ] 2019-11-01T00:07:26,713Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566846184) {}
[INFO ] 2019-11-01T00:07:26,716Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:26,738Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566846184) {}
[INFO ] 2019-11-01T00:07:26,741Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566845329) {}
[INFO ] 2019-11-01T00:07:26,750Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:26,763Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566845329) {}
[INFO ] 2019-11-01T00:07:26,776Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566846184) {}
[INFO ] 2019-11-01T00:07:26,779Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:26,790Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566846184) {}
[INFO ] 2019-11-01T00:07:26,791Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566846184) {}
[INFO ] 2019-11-01T00:07:26,796Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:26,801Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566846184) {}
[INFO ] 2019-11-01T00:07:26,802Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566846184) {}
[INFO ] 2019-11-01T00:07:26,805Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:26,806Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566846184) {}
[INFO ] 2019-11-01T00:07:27,823Z [Mock network] flow.[4f1f3674-8801-4331-9f6b-fee15b9d75b4].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-8901805590826993093). {}
[INFO ] 2019-11-01T00:07:28,012Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-8901805590826993093). {invocation_id=25eccb3b-4f9d-4a49-883f-be6a998fe64e, invocation_timestamp=2019-11-01T00:07:27.999Z, session_id=25eccb3b-4f9d-4a49-883f-be6a998fe64e, session_timestamp=2019-11-01T00:07:27.999Z}
[INFO ] 2019-11-01T00:07:28,377Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:07:28,379Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:07:28,386Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@7bd49ba9 {}
[INFO ] 2019-11-01T00:07:28,402Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:07:28,404Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:28,405Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:28,526Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:28,534Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:07:28,535Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566848535) {}
[INFO ] 2019-11-01T00:07:28,539Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:28,551Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566848535) {}
[INFO ] 2019-11-01T00:07:28,552Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566848535) {}
[INFO ] 2019-11-01T00:07:28,698Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:07:28,849Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:07:28,954Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:07:28,957Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:07:28,981Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:07:28,994Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:07:28,998Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:29,000Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:29,001Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:29,003Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:07:29,029Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 96A0522245A606B996BCCA007DA532D17C7D00F2D28A72AF9AF10E26F1F5DE74, not inserting the second time {}
[INFO ] 2019-11-01T00:07:29,038Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566848535) {}
[INFO ] 2019-11-01T00:07:29,049Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:29,051Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566848535) {}
[INFO ] 2019-11-01T00:07:29,054Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566848535) {}
[INFO ] 2019-11-01T00:07:29,055Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:29,057Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566848535) {}
[INFO ] 2019-11-01T00:07:29,062Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:07:29,064Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:07:29,107Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:07:29,122Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@4d711764 {}
[INFO ] 2019-11-01T00:07:29,142Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:07:29,146Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:29,147Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:29,254Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:29,262Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:07:29,263Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566849263) {}
[INFO ] 2019-11-01T00:07:29,268Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:29,273Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566849263) {}
[INFO ] 2019-11-01T00:07:29,274Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566849263) {}
[INFO ] 2019-11-01T00:07:29,459Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:07:29,597Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:07:29,698Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:07:29,701Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:07:29,727Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:07:29,730Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:29,731Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:29,733Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:29,734Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:07:29,755Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key F0EC599F953F4A66535CF03D1E9584B51CAAF22B7C708C2AB1C40084B1F2A203, not inserting the second time {}
[INFO ] 2019-11-01T00:07:29,763Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566848535) {}
[INFO ] 2019-11-01T00:07:29,777Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:29,792Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566848535) {}
[INFO ] 2019-11-01T00:07:29,800Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566849263) {}
[INFO ] 2019-11-01T00:07:29,806Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:29,821Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566849263) {}
[INFO ] 2019-11-01T00:07:29,823Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566849263) {}
[INFO ] 2019-11-01T00:07:29,829Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:29,831Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566849263) {}
[INFO ] 2019-11-01T00:07:29,832Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566849263) {}
[INFO ] 2019-11-01T00:07:29,834Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:29,835Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566849263) {}
[INFO ] 2019-11-01T00:07:29,841Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:07:29,842Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:07:29,874Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:07:29,890Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@12b0fca5 {}
[INFO ] 2019-11-01T00:07:29,905Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:07:29,909Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:29,911Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:30,095Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:30,107Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:07:30,112Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566850112) {}
[INFO ] 2019-11-01T00:07:30,118Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:30,127Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566850112) {}
[INFO ] 2019-11-01T00:07:30,129Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566850112) {}
[INFO ] 2019-11-01T00:07:30,269Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:07:30,391Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:07:30,489Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:07:30,492Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:07:30,527Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:07:30,528Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:30,529Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:30,530Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:30,533Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:07:30,551Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 70EA96480B15DB7C7E054E5559552356C75694C1998604A73D277435B833A91E, not inserting the second time {}
[INFO ] 2019-11-01T00:07:30,560Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566848535) {}
[INFO ] 2019-11-01T00:07:30,562Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:30,574Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566848535) {}
[INFO ] 2019-11-01T00:07:30,576Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566850112) {}
[INFO ] 2019-11-01T00:07:30,578Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:30,585Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566850112) {}
[INFO ] 2019-11-01T00:07:30,586Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566849263) {}
[INFO ] 2019-11-01T00:07:30,589Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:30,595Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566849263) {}
[INFO ] 2019-11-01T00:07:30,597Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566850112) {}
[INFO ] 2019-11-01T00:07:30,599Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:30,606Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566850112) {}
[INFO ] 2019-11-01T00:07:30,607Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566850112) {}
[INFO ] 2019-11-01T00:07:30,611Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:30,612Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566850112) {}
[INFO ] 2019-11-01T00:07:30,613Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566850112) {}
[INFO ] 2019-11-01T00:07:30,614Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:30,615Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566850112) {}
[INFO ] 2019-11-01T00:07:30,847Z [Mock network] flow.[4567cb0c-2f5b-4432-9e31-6ad57003a546].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=6981742376474133337). {}
[INFO ] 2019-11-01T00:07:30,980Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=6981742376474133337). {invocation_id=3ada22eb-f4b2-4b7f-a9ed-f1ad10fd5b04, invocation_timestamp=2019-11-01T00:07:30.970Z, session_id=3ada22eb-f4b2-4b7f-a9ed-f1ad10fd5b04, session_timestamp=2019-11-01T00:07:30.970Z}
[INFO ] 2019-11-01T00:07:31,231Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:07:31,232Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:07:31,243Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@58ee0599 {}
[INFO ] 2019-11-01T00:07:31,257Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:07:31,258Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:31,261Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:31,432Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:31,446Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:07:31,447Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566851447) {}
[INFO ] 2019-11-01T00:07:31,450Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:31,458Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566851447) {}
[INFO ] 2019-11-01T00:07:31,459Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566851447) {}
[INFO ] 2019-11-01T00:07:31,610Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:07:31,746Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:07:31,837Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:07:31,839Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:07:31,848Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:07:31,852Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:07:31,853Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:31,854Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:31,855Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:31,855Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:07:31,868Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key DC5515A245DCCE41686138A52633C4D817847EA9D8E83354A5BE7274D799A88D, not inserting the second time {}
[INFO ] 2019-11-01T00:07:31,874Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566851447) {}
[INFO ] 2019-11-01T00:07:31,880Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:31,881Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566851447) {}
[INFO ] 2019-11-01T00:07:31,882Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566851447) {}
[INFO ] 2019-11-01T00:07:31,883Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:31,884Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566851447) {}
[INFO ] 2019-11-01T00:07:31,887Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:07:31,888Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:07:31,946Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:07:31,954Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@43595245 {}
[INFO ] 2019-11-01T00:07:31,962Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:07:31,963Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:31,965Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:32,040Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:32,047Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:07:32,049Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566852048) {}
[INFO ] 2019-11-01T00:07:32,052Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:32,056Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566852048) {}
[INFO ] 2019-11-01T00:07:32,057Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566852048) {}
[INFO ] 2019-11-01T00:07:32,182Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:07:32,291Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:07:32,390Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:07:32,393Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:07:32,408Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:07:32,409Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:32,410Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:32,411Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:32,413Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:07:32,430Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key BF9CC5FA330E1C2EF7E51C802E434E47C1DEC76D94E43E63201C960F8075F299, not inserting the second time {}
[INFO ] 2019-11-01T00:07:32,436Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566851447) {}
[INFO ] 2019-11-01T00:07:32,438Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:32,463Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566851447) {}
[INFO ] 2019-11-01T00:07:32,464Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566852048) {}
[INFO ] 2019-11-01T00:07:32,466Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:32,483Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566852048) {}
[INFO ] 2019-11-01T00:07:32,485Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566852048) {}
[INFO ] 2019-11-01T00:07:32,489Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:32,490Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566852048) {}
[INFO ] 2019-11-01T00:07:32,491Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566852048) {}
[INFO ] 2019-11-01T00:07:32,501Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:32,501Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566852048) {}
[INFO ] 2019-11-01T00:07:32,504Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:07:32,512Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:07:32,535Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:07:32,546Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@50d4b5b1 {}
[INFO ] 2019-11-01T00:07:32,561Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:07:32,570Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:32,571Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:32,704Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:32,713Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:07:32,714Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566852714) {}
[INFO ] 2019-11-01T00:07:32,718Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:32,724Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566852714) {}
[INFO ] 2019-11-01T00:07:32,725Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566852714) {}
[INFO ] 2019-11-01T00:07:32,898Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:07:33,023Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:07:33,120Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:07:33,123Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:07:33,144Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:07:33,146Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:33,147Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:33,152Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:33,155Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:07:33,172Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 82B5BFF8CF6EDC4585FCE5E09FF09A9BA3E1C4A4019FA0ED6C0F48276D1CA937, not inserting the second time {}
[INFO ] 2019-11-01T00:07:33,182Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566851447) {}
[INFO ] 2019-11-01T00:07:33,184Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:33,201Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566851447) {}
[INFO ] 2019-11-01T00:07:33,202Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566852714) {}
[INFO ] 2019-11-01T00:07:33,209Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:33,222Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566852714) {}
[INFO ] 2019-11-01T00:07:33,224Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566852048) {}
[INFO ] 2019-11-01T00:07:33,226Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:33,239Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566852048) {}
[INFO ] 2019-11-01T00:07:33,241Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566852714) {}
[INFO ] 2019-11-01T00:07:33,243Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:33,252Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566852714) {}
[INFO ] 2019-11-01T00:07:33,254Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566852714) {}
[INFO ] 2019-11-01T00:07:33,260Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:33,268Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566852714) {}
[INFO ] 2019-11-01T00:07:33,269Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566852714) {}
[INFO ] 2019-11-01T00:07:33,270Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:33,270Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566852714) {}
[WARN ] 2019-11-01T00:07:33,352Z [Mock network] flow.[a4d2b21f-91a1-477f-acba-000e752cf723].run - Flow finished with exception {}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: A newly issued asset must have a positive amount., contract: com.qn7265.issue.AssetContract, transaction: 0332E9940FDC420E3D412FA568AB8ECBBB2804F17061D5EF679E2F427D776D17
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:127) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:80) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:143) ~[corda-core-3.4-corda.jar:?]
	at com.qn7265.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:82) ~[main/:?]
	at com.qn7265.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:27) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.4-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_211]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.4-corda.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: A newly issued asset must have a positive amount.
	at com.qn7265.issue.AssetContract.verifyIssue(AssetContract.kt:80) ~[qn7265-contracts.jar:?]
	at com.qn7265.issue.AssetContract.verify(AssetContract.kt:29) ~[qn7265-contracts.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:125) ~[corda-core-3.4-corda.jar:?]
	... 17 more
[INFO ] 2019-11-01T00:07:33,467Z [Mock network] flow.[efb7f6ee-ad82-4fc6-aeea-c4ace0aea106].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=4915408641282091451). {}
[INFO ] 2019-11-01T00:07:33,574Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=4915408641282091451). {invocation_id=8102afb0-0ffd-453d-a4e7-5189cf4f8229, invocation_timestamp=2019-11-01T00:07:33.573Z, session_id=8102afb0-0ffd-453d-a4e7-5189cf4f8229, session_timestamp=2019-11-01T00:07:33.573Z}
[INFO ] 2019-11-01T00:07:33,766Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:07:33,773Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:07:33,778Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@4d0e852d {}
[INFO ] 2019-11-01T00:07:33,838Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:07:33,840Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:33,841Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:33,996Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:34,005Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:07:34,007Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566854007) {}
[INFO ] 2019-11-01T00:07:34,010Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:34,019Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566854007) {}
[INFO ] 2019-11-01T00:07:34,020Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566854007) {}
[INFO ] 2019-11-01T00:07:34,164Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:07:34,303Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:07:34,396Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:07:34,398Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:07:34,406Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:07:34,410Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:07:34,411Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:34,412Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:34,413Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:34,414Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:07:34,425Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 90BC028BCDA168843CC9F8ABE679CBE45789CEE742F5DC5B15E3B0A945EF9987, not inserting the second time {}
[INFO ] 2019-11-01T00:07:34,433Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566854007) {}
[INFO ] 2019-11-01T00:07:34,442Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:34,442Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566854007) {}
[INFO ] 2019-11-01T00:07:34,443Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566854007) {}
[INFO ] 2019-11-01T00:07:34,444Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:34,445Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566854007) {}
[INFO ] 2019-11-01T00:07:34,452Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:07:34,453Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:07:34,480Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:07:34,495Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@e58dd5b {}
[INFO ] 2019-11-01T00:07:34,503Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:07:34,505Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:34,505Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:34,630Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:34,639Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:07:34,640Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566854639) {}
[INFO ] 2019-11-01T00:07:34,646Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:34,650Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566854639) {}
[INFO ] 2019-11-01T00:07:34,652Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566854639) {}
[INFO ] 2019-11-01T00:07:34,834Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:07:34,964Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:07:35,060Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:07:35,061Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:07:35,073Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:07:35,074Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:35,075Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:35,076Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:35,077Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:07:35,088Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key DE1534F499CBA604DB6E4014D4F0AD89C9E9F4D6E6CFAF0C138301FA69D430AF, not inserting the second time {}
[INFO ] 2019-11-01T00:07:35,093Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566854007) {}
[INFO ] 2019-11-01T00:07:35,095Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:35,108Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566854007) {}
[INFO ] 2019-11-01T00:07:35,109Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566854639) {}
[INFO ] 2019-11-01T00:07:35,111Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:35,117Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566854639) {}
[INFO ] 2019-11-01T00:07:35,118Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566854639) {}
[INFO ] 2019-11-01T00:07:35,121Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:35,121Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566854639) {}
[INFO ] 2019-11-01T00:07:35,122Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566854639) {}
[INFO ] 2019-11-01T00:07:35,123Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:35,123Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566854639) {}
[INFO ] 2019-11-01T00:07:35,126Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:07:35,127Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:07:35,138Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:07:35,145Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@32794ac {}
[INFO ] 2019-11-01T00:07:35,157Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:07:35,158Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:35,159Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:35,247Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:35,259Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:07:35,260Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566855260) {}
[INFO ] 2019-11-01T00:07:35,264Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:35,269Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566855260) {}
[INFO ] 2019-11-01T00:07:35,270Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566855260) {}
[INFO ] 2019-11-01T00:07:35,416Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:07:35,617Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:07:35,710Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:07:35,713Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:07:35,726Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:07:35,727Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:35,728Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:35,729Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:35,730Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:07:35,750Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 0578DA8A58493DF39EF590477DF0490A87022ABA55200F44FC87266FC8510A10, not inserting the second time {}
[INFO ] 2019-11-01T00:07:35,758Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566854007) {}
[INFO ] 2019-11-01T00:07:35,760Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:35,769Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566854007) {}
[INFO ] 2019-11-01T00:07:35,770Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566855260) {}
[INFO ] 2019-11-01T00:07:35,771Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:35,782Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566855260) {}
[INFO ] 2019-11-01T00:07:35,790Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566854639) {}
[INFO ] 2019-11-01T00:07:35,791Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:35,801Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566854639) {}
[INFO ] 2019-11-01T00:07:35,802Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566855260) {}
[INFO ] 2019-11-01T00:07:35,808Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:35,816Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566855260) {}
[INFO ] 2019-11-01T00:07:35,817Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566855260) {}
[INFO ] 2019-11-01T00:07:35,822Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:35,823Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566855260) {}
[INFO ] 2019-11-01T00:07:35,824Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566855260) {}
[INFO ] 2019-11-01T00:07:35,825Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:35,826Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566855260) {}
[INFO ] 2019-11-01T00:07:35,829Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:07:35,830Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:07:35,849Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:07:35,864Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@2abddab4 {}
[INFO ] 2019-11-01T00:07:35,877Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:07:35,878Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:35,882Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:36,010Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:36,018Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:07:36,019Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566856019) {}
[INFO ] 2019-11-01T00:07:36,024Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:36,027Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566856019) {}
[INFO ] 2019-11-01T00:07:36,028Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566856019) {}
[INFO ] 2019-11-01T00:07:36,168Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:07:36,298Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:07:36,451Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:07:36,453Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:07:36,464Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:07:36,465Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:36,466Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:36,467Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:36,468Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:07:36,479Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 9C40D34C7621D332E5B9434571F7DD3E4F5CEF2074DE923890E3559FD9E01E97, not inserting the second time {}
[INFO ] 2019-11-01T00:07:36,483Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566854007) {}
[INFO ] 2019-11-01T00:07:36,485Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:36,497Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566854007) {}
[INFO ] 2019-11-01T00:07:36,498Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566856019) {}
[INFO ] 2019-11-01T00:07:36,500Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:36,506Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566856019) {}
[INFO ] 2019-11-01T00:07:36,509Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566854639) {}
[INFO ] 2019-11-01T00:07:36,511Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:36,522Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566854639) {}
[INFO ] 2019-11-01T00:07:36,524Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566856019) {}
[INFO ] 2019-11-01T00:07:36,526Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:36,532Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566856019) {}
[INFO ] 2019-11-01T00:07:36,533Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566855260) {}
[INFO ] 2019-11-01T00:07:36,534Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:36,539Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566855260) {}
[INFO ] 2019-11-01T00:07:36,540Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566856019) {}
[INFO ] 2019-11-01T00:07:36,542Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:36,547Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566856019) {}
[INFO ] 2019-11-01T00:07:36,548Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566856019) {}
[INFO ] 2019-11-01T00:07:36,552Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:36,553Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566856019) {}
[INFO ] 2019-11-01T00:07:36,555Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566856019) {}
[INFO ] 2019-11-01T00:07:36,556Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:36,557Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566856019) {}
[INFO ] 2019-11-01T00:07:36,559Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:07:36,560Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:07:36,572Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:07:36,578Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@1bc5c398 {}
[INFO ] 2019-11-01T00:07:36,584Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:07:36,585Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:36,586Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:36,648Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:36,659Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:07:36,661Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566856660) {}
[INFO ] 2019-11-01T00:07:36,665Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:36,669Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566856660) {}
[INFO ] 2019-11-01T00:07:36,669Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566856660) {}
[INFO ] 2019-11-01T00:07:36,816Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:07:36,941Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:07:37,088Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:07:37,090Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:07:37,106Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:07:37,107Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:37,108Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:37,111Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:37,112Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:07:37,125Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 3466D49E91033C8CFA41C0338DE60914E4261C78391E47978F3D9583115605AC, not inserting the second time {}
[INFO ] 2019-11-01T00:07:37,131Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566854007) {}
[INFO ] 2019-11-01T00:07:37,134Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:37,144Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566854007) {}
[INFO ] 2019-11-01T00:07:37,145Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566856660) {}
[INFO ] 2019-11-01T00:07:37,148Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:37,158Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566856660) {}
[INFO ] 2019-11-01T00:07:37,159Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566854639) {}
[INFO ] 2019-11-01T00:07:37,165Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:37,175Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566854639) {}
[INFO ] 2019-11-01T00:07:37,176Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566856660) {}
[INFO ] 2019-11-01T00:07:37,177Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:37,188Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566856660) {}
[INFO ] 2019-11-01T00:07:37,189Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566855260) {}
[INFO ] 2019-11-01T00:07:37,194Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:37,202Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566855260) {}
[INFO ] 2019-11-01T00:07:37,203Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566856660) {}
[INFO ] 2019-11-01T00:07:37,204Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:37,209Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566856660) {}
[INFO ] 2019-11-01T00:07:37,210Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566856019) {}
[INFO ] 2019-11-01T00:07:37,211Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:37,216Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566856019) {}
[INFO ] 2019-11-01T00:07:37,217Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566856660) {}
[INFO ] 2019-11-01T00:07:37,218Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:37,223Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566856660) {}
[INFO ] 2019-11-01T00:07:37,224Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566856660) {}
[INFO ] 2019-11-01T00:07:37,227Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:37,227Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566856660) {}
[INFO ] 2019-11-01T00:07:37,228Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566856660) {}
[INFO ] 2019-11-01T00:07:37,229Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:37,229Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566856660) {}
[INFO ] 2019-11-01T00:07:37,235Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:37,236Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:37,240Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:37,241Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:37,242Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:37,242Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:37,243Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:37,244Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:37,365Z [Mock network] flow.[34db159c-5a6e-4880-b6f3-29b9e52f9e74].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=7248686080706025235). {}
[INFO ] 2019-11-01T00:07:37,419Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=7248686080706025235). {invocation_id=6274f86d-6a1b-431d-ad87-2287a558decf, invocation_timestamp=2019-11-01T00:07:37.418Z, session_id=6274f86d-6a1b-431d-ad87-2287a558decf, session_timestamp=2019-11-01T00:07:37.418Z}
[INFO ] 2019-11-01T00:07:37,695Z [Mock network] flow.[34db159c-5a6e-4880-b6f3-29b9e52f9e74].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-2311790075979220587). {}
[INFO ] 2019-11-01T00:07:37,710Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-2311790075979220587). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=f2e03b47-30e7-41d2-883e-74c179fe39df, invocation_timestamp=2019-11-01T00:07:37.710Z, session_id=f2e03b47-30e7-41d2-883e-74c179fe39df, session_timestamp=2019-11-01T00:07:37.710Z}
[INFO ] 2019-11-01T00:07:37,780Z [Mock network] flow.[34db159c-5a6e-4880-b6f3-29b9e52f9e74].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=5985089088705466419). {}
[INFO ] 2019-11-01T00:07:37,802Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=5985089088705466419). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=2ab9ed61-6fe7-485b-8b1a-c3c2b3197012, invocation_timestamp=2019-11-01T00:07:37.801Z, session_id=2ab9ed61-6fe7-485b-8b1a-c3c2b3197012, session_timestamp=2019-11-01T00:07:37.801Z}
[INFO ] 2019-11-01T00:07:37,913Z [Mock network] flow.[b8c4877e-4787-4cf9-9c69-dc8f7fa14358].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=6410102649967264355). {}
[INFO ] 2019-11-01T00:07:37,955Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=6410102649967264355). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=e99f0f93-96d6-4a34-8ec6-88a8be20377e, invocation_timestamp=2019-11-01T00:07:37.954Z, session_id=e99f0f93-96d6-4a34-8ec6-88a8be20377e, session_timestamp=2019-11-01T00:07:37.954Z}
[INFO ] 2019-11-01T00:07:38,197Z [Mock network] flow.[d893f509-aad2-4f0e-9bdb-1b2e8511ec1e].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=8513212742422183872). {}
[INFO ] 2019-11-01T00:07:38,240Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=8513212742422183872). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=9b13bfcb-3211-43de-9297-862cbfbd9b95, invocation_timestamp=2019-11-01T00:07:38.238Z, session_id=9b13bfcb-3211-43de-9297-862cbfbd9b95, session_timestamp=2019-11-01T00:07:38.238Z}
[INFO ] 2019-11-01T00:07:38,258Z [Mock network] flow.[33081848-a0b4-45c0-b57b-54afba36609f].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:38,317Z [Mock network] flow.[33081848-a0b4-45c0-b57b-54afba36609f].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:38,466Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:07:38,524Z [Mock network] flow.[fbb50af7-c03f-4975-9920-10d885da9c61].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=5080913915585351054). {}
[INFO ] 2019-11-01T00:07:38,568Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=5080913915585351054). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=7988ba17-ed2b-4877-b638-6c4756578c76, invocation_timestamp=2019-11-01T00:07:38.566Z, session_id=7988ba17-ed2b-4877-b638-6c4756578c76, session_timestamp=2019-11-01T00:07:38.566Z}
[INFO ] 2019-11-01T00:07:38,587Z [Mock network] flow.[3ff002d6-8614-49c2-b404-550f88ba88e7].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:38,653Z [Mock network] flow.[3ff002d6-8614-49c2-b404-550f88ba88e7].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:38,704Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.qn7265.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:07:38,840Z [Mock network] flow.[fbb50af7-c03f-4975-9920-10d885da9c61].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:38,868Z [Mock network] flow.[fbb50af7-c03f-4975-9920-10d885da9c61].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:38,870Z [Mock network] flow.[fbb50af7-c03f-4975-9920-10d885da9c61].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:38,895Z [Mock network] flow.[fbb50af7-c03f-4975-9920-10d885da9c61].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:39,036Z [Mock network] flow.[3ff002d6-8614-49c2-b404-550f88ba88e7].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-875595270632822448). {}
[INFO ] 2019-11-01T00:07:39,061Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-875595270632822448). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=c8d58d35-8394-4637-916b-d2056d6bd061, invocation_timestamp=2019-11-01T00:07:39.060Z, session_id=c8d58d35-8394-4637-916b-d2056d6bd061, session_timestamp=2019-11-01T00:07:39.060Z}
[INFO ] 2019-11-01T00:07:39,075Z [Mock network] flow.[38c318d3-928c-4628-9465-7438c296e751].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:39,126Z [Mock network] flow.[38c318d3-928c-4628-9465-7438c296e751].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:39,128Z [Mock network] flow.[38c318d3-928c-4628-9465-7438c296e751].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:39,154Z [Mock network] flow.[38c318d3-928c-4628-9465-7438c296e751].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:39,348Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:07:39,349Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:07:39,354Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@c8a8476 {}
[INFO ] 2019-11-01T00:07:39,364Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:07:39,365Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:39,366Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:39,442Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:39,448Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:07:39,449Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566859449) {}
[INFO ] 2019-11-01T00:07:39,457Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:39,472Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566859449) {}
[INFO ] 2019-11-01T00:07:39,473Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566859449) {}
[INFO ] 2019-11-01T00:07:39,623Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:07:39,807Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:07:39,895Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:07:39,896Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:07:39,905Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:07:39,909Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:07:39,910Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:39,911Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:39,911Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:39,912Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:07:39,922Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 7859B6EACBE3C0D47E56E8D686E3D63A44ACE1E03BBB36A672D42D3995A95823, not inserting the second time {}
[INFO ] 2019-11-01T00:07:39,927Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566859449) {}
[INFO ] 2019-11-01T00:07:39,930Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:39,933Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566859449) {}
[INFO ] 2019-11-01T00:07:39,934Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566859449) {}
[INFO ] 2019-11-01T00:07:39,934Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:39,935Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566859449) {}
[INFO ] 2019-11-01T00:07:39,939Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:07:39,940Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:07:39,957Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:07:39,966Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6e2ca8e8 {}
[INFO ] 2019-11-01T00:07:39,980Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:07:39,981Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:39,981Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:40,090Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:40,096Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:07:40,097Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566860097) {}
[INFO ] 2019-11-01T00:07:40,101Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:40,103Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566860097) {}
[INFO ] 2019-11-01T00:07:40,104Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566860097) {}
[INFO ] 2019-11-01T00:07:40,238Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:07:40,379Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:07:40,470Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:07:40,472Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:07:40,483Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:07:40,484Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:40,485Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:40,485Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:40,486Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:07:40,499Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key D3FDAF12EA52A87196A708528E999A1B9BE0B51EA38B043F3A3E561AD55F1312, not inserting the second time {}
[INFO ] 2019-11-01T00:07:40,505Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566859449) {}
[INFO ] 2019-11-01T00:07:40,508Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:40,513Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566859449) {}
[INFO ] 2019-11-01T00:07:40,513Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566860097) {}
[INFO ] 2019-11-01T00:07:40,515Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:40,534Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566860097) {}
[INFO ] 2019-11-01T00:07:40,540Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566860097) {}
[INFO ] 2019-11-01T00:07:40,543Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:40,548Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566860097) {}
[INFO ] 2019-11-01T00:07:40,549Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566860097) {}
[INFO ] 2019-11-01T00:07:40,550Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:40,551Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566860097) {}
[INFO ] 2019-11-01T00:07:40,553Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:07:40,554Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:07:40,570Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:07:40,577Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@64ff2429 {}
[INFO ] 2019-11-01T00:07:40,592Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:07:40,593Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:40,594Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:40,656Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:40,662Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:07:40,663Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566860663) {}
[INFO ] 2019-11-01T00:07:40,668Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:40,670Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566860663) {}
[INFO ] 2019-11-01T00:07:40,671Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566860663) {}
[INFO ] 2019-11-01T00:07:40,808Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:07:40,923Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:07:41,039Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:07:41,040Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:07:41,051Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:07:41,052Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:41,053Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:41,054Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:41,054Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:07:41,064Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 6DED842D0939100540F16E016959F8F2B27AE0317F42D2024B551CC9A234E5E6, not inserting the second time {}
[INFO ] 2019-11-01T00:07:41,069Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566859449) {}
[INFO ] 2019-11-01T00:07:41,070Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:41,090Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566859449) {}
[INFO ] 2019-11-01T00:07:41,092Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566860663) {}
[INFO ] 2019-11-01T00:07:41,093Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:41,103Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566860663) {}
[INFO ] 2019-11-01T00:07:41,103Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566860097) {}
[INFO ] 2019-11-01T00:07:41,107Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:41,120Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566860097) {}
[INFO ] 2019-11-01T00:07:41,120Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566860663) {}
[INFO ] 2019-11-01T00:07:41,122Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:41,134Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566860663) {}
[INFO ] 2019-11-01T00:07:41,135Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566860663) {}
[INFO ] 2019-11-01T00:07:41,140Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:41,141Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566860663) {}
[INFO ] 2019-11-01T00:07:41,142Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566860663) {}
[INFO ] 2019-11-01T00:07:41,143Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:41,144Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566860663) {}
[INFO ] 2019-11-01T00:07:41,146Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:07:41,147Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:07:41,157Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:07:41,162Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@3579bb9f {}
[INFO ] 2019-11-01T00:07:41,172Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:07:41,173Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:41,174Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:41,228Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:41,233Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:07:41,234Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566861234) {}
[INFO ] 2019-11-01T00:07:41,236Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:41,239Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566861234) {}
[INFO ] 2019-11-01T00:07:41,239Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566861234) {}
[INFO ] 2019-11-01T00:07:41,365Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:07:41,487Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:07:41,953Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:07:41,955Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:07:41,964Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:07:41,965Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:41,966Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:41,967Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:41,967Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:07:41,977Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 95F0BE17BF10476EA90AE65043874857B9F6201CE4A380F3252F831B69A36F1C, not inserting the second time {}
[INFO ] 2019-11-01T00:07:41,981Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566859449) {}
[INFO ] 2019-11-01T00:07:41,982Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:41,987Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566859449) {}
[INFO ] 2019-11-01T00:07:41,988Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566861234) {}
[INFO ] 2019-11-01T00:07:41,989Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:41,994Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566861234) {}
[INFO ] 2019-11-01T00:07:41,995Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566860097) {}
[INFO ] 2019-11-01T00:07:41,996Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:42,000Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566860097) {}
[INFO ] 2019-11-01T00:07:42,001Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566861234) {}
[INFO ] 2019-11-01T00:07:42,002Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:42,007Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566861234) {}
[INFO ] 2019-11-01T00:07:42,008Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566860663) {}
[INFO ] 2019-11-01T00:07:42,009Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:42,023Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566860663) {}
[INFO ] 2019-11-01T00:07:42,024Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566861234) {}
[INFO ] 2019-11-01T00:07:42,025Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:42,040Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566861234) {}
[INFO ] 2019-11-01T00:07:42,041Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566861234) {}
[INFO ] 2019-11-01T00:07:42,044Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:42,045Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566861234) {}
[INFO ] 2019-11-01T00:07:42,045Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566861234) {}
[INFO ] 2019-11-01T00:07:42,046Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:42,047Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566861234) {}
[INFO ] 2019-11-01T00:07:42,050Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:07:42,053Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:07:42,064Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:07:42,071Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@2559f12 {}
[INFO ] 2019-11-01T00:07:42,081Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:07:42,081Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:42,082Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:42,169Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:42,174Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:07:42,175Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566862175) {}
[INFO ] 2019-11-01T00:07:42,178Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:42,181Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566862175) {}
[INFO ] 2019-11-01T00:07:42,181Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566862175) {}
[INFO ] 2019-11-01T00:07:42,309Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:07:42,435Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:07:42,529Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:07:42,531Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:07:42,542Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:07:42,542Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:42,543Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:42,544Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:42,544Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:07:42,554Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key B7A623233BCC970C819BDD2B92453BD8B35C8E98FE789E95BF6CD99703679247, not inserting the second time {}
[INFO ] 2019-11-01T00:07:42,558Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566859449) {}
[INFO ] 2019-11-01T00:07:42,559Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:42,581Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566859449) {}
[INFO ] 2019-11-01T00:07:42,582Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566862175) {}
[INFO ] 2019-11-01T00:07:42,583Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:42,588Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566862175) {}
[INFO ] 2019-11-01T00:07:42,588Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566860097) {}
[INFO ] 2019-11-01T00:07:42,589Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:42,598Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566860097) {}
[INFO ] 2019-11-01T00:07:42,598Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566862175) {}
[INFO ] 2019-11-01T00:07:42,600Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:42,608Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566862175) {}
[INFO ] 2019-11-01T00:07:42,609Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566860663) {}
[INFO ] 2019-11-01T00:07:42,610Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:42,616Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566860663) {}
[INFO ] 2019-11-01T00:07:42,617Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566862175) {}
[INFO ] 2019-11-01T00:07:42,625Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:42,632Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566862175) {}
[INFO ] 2019-11-01T00:07:42,633Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566861234) {}
[INFO ] 2019-11-01T00:07:42,634Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:42,642Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566861234) {}
[INFO ] 2019-11-01T00:07:42,642Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566862175) {}
[INFO ] 2019-11-01T00:07:42,643Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:42,648Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566862175) {}
[INFO ] 2019-11-01T00:07:42,649Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566862175) {}
[INFO ] 2019-11-01T00:07:42,651Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:42,652Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566862175) {}
[INFO ] 2019-11-01T00:07:42,653Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566862175) {}
[INFO ] 2019-11-01T00:07:42,653Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:42,654Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566862175) {}
[INFO ] 2019-11-01T00:07:42,654Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:42,655Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:42,655Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:42,656Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:42,657Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:42,657Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:42,658Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:42,658Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:42,737Z [Mock network] flow.[47876220-3dce-4834-900d-aee36bd1b7e8].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=7001912661409870573). {}
[INFO ] 2019-11-01T00:07:42,797Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=7001912661409870573). {invocation_id=384b39bd-01fa-41a9-85c4-61b07e7aad9d, invocation_timestamp=2019-11-01T00:07:42.795Z, session_id=384b39bd-01fa-41a9-85c4-61b07e7aad9d, session_timestamp=2019-11-01T00:07:42.795Z}
[INFO ] 2019-11-01T00:07:42,944Z [Mock network] flow.[47876220-3dce-4834-900d-aee36bd1b7e8].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-4725819439492898828). {}
[INFO ] 2019-11-01T00:07:42,961Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-4725819439492898828). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=25d84b3e-e96c-42c1-98af-f0cb82c072be, invocation_timestamp=2019-11-01T00:07:42.960Z, session_id=25d84b3e-e96c-42c1-98af-f0cb82c072be, session_timestamp=2019-11-01T00:07:42.960Z}
[INFO ] 2019-11-01T00:07:43,011Z [Mock network] flow.[47876220-3dce-4834-900d-aee36bd1b7e8].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-4411658359665501640). {}
[INFO ] 2019-11-01T00:07:43,038Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-4411658359665501640). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=33936595-6b7d-46f0-9ce6-e87af8a8d185, invocation_timestamp=2019-11-01T00:07:43.037Z, session_id=33936595-6b7d-46f0-9ce6-e87af8a8d185, session_timestamp=2019-11-01T00:07:43.037Z}
[INFO ] 2019-11-01T00:07:43,132Z [Mock network] flow.[a3af3ee6-7ba4-4c0b-b7a7-426b76df577f].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=8998285719627842701). {}
[INFO ] 2019-11-01T00:07:43,171Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=8998285719627842701). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=fe807bed-54b9-471c-806b-9b9bef9dd719, invocation_timestamp=2019-11-01T00:07:43.161Z, session_id=fe807bed-54b9-471c-806b-9b9bef9dd719, session_timestamp=2019-11-01T00:07:43.161Z}
[INFO ] 2019-11-01T00:07:43,240Z [Mock network] flow.[517a34f7-43f2-4606-b659-0a56e5c1cb52].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=-546788172368564381). {}
[INFO ] 2019-11-01T00:07:43,270Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-546788172368564381). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=1583fee3-d661-4e3e-9974-f1083579429a, invocation_timestamp=2019-11-01T00:07:43.269Z, session_id=1583fee3-d661-4e3e-9974-f1083579429a, session_timestamp=2019-11-01T00:07:43.269Z}
[INFO ] 2019-11-01T00:07:43,286Z [Mock network] flow.[8e56a415-74e3-4ea3-956c-a93c4ca840fd].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:43,327Z [Mock network] flow.[8e56a415-74e3-4ea3-956c-a93c4ca840fd].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:43,400Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:07:43,428Z [Mock network] flow.[113e3239-5b61-414b-8988-5da11e580689].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-7172386196374972221). {}
[INFO ] 2019-11-01T00:07:43,449Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-7172386196374972221). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=19311fd1-3f84-4607-a117-be88fcf40d63, invocation_timestamp=2019-11-01T00:07:43.448Z, session_id=19311fd1-3f84-4607-a117-be88fcf40d63, session_timestamp=2019-11-01T00:07:43.448Z}
[INFO ] 2019-11-01T00:07:43,459Z [Mock network] flow.[cde38a4d-fd76-427a-9d1c-d45a3be704eb].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:43,506Z [Mock network] flow.[cde38a4d-fd76-427a-9d1c-d45a3be704eb].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:43,542Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.qn7265.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:07:43,601Z [Mock network] flow.[113e3239-5b61-414b-8988-5da11e580689].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:43,644Z [Mock network] flow.[113e3239-5b61-414b-8988-5da11e580689].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:43,645Z [Mock network] flow.[113e3239-5b61-414b-8988-5da11e580689].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:43,689Z [Mock network] flow.[113e3239-5b61-414b-8988-5da11e580689].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:43,800Z [Mock network] flow.[cde38a4d-fd76-427a-9d1c-d45a3be704eb].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-9120639963283435679). {}
[INFO ] 2019-11-01T00:07:43,821Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-9120639963283435679). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=61168259-e3e3-4404-b680-4ee8d177becc, invocation_timestamp=2019-11-01T00:07:43.820Z, session_id=61168259-e3e3-4404-b680-4ee8d177becc, session_timestamp=2019-11-01T00:07:43.820Z}
[INFO ] 2019-11-01T00:07:43,833Z [Mock network] flow.[954a631d-5e76-433d-b849-f039a73b05c6].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:43,877Z [Mock network] flow.[954a631d-5e76-433d-b849-f039a73b05c6].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:43,879Z [Mock network] flow.[954a631d-5e76-433d-b849-f039a73b05c6].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:43,898Z [Mock network] flow.[954a631d-5e76-433d-b849-f039a73b05c6].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:44,087Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:07:44,088Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:07:44,091Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@479d161c {}
[INFO ] 2019-11-01T00:07:44,101Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:07:44,102Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:44,102Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:44,177Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:44,184Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:07:44,185Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566864185) {}
[INFO ] 2019-11-01T00:07:44,187Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:44,192Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566864185) {}
[INFO ] 2019-11-01T00:07:44,193Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566864185) {}
[INFO ] 2019-11-01T00:07:44,344Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:07:44,495Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:07:44,588Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:07:44,589Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:07:44,596Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:07:44,599Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:07:44,602Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:44,605Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:44,605Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:44,606Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:07:44,618Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 9DB5CDB7335DA18D33400FDE2ADED921E2D9394B269D5683B81BF4CB8864DD08, not inserting the second time {}
[INFO ] 2019-11-01T00:07:44,623Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566864185) {}
[INFO ] 2019-11-01T00:07:44,625Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:44,626Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566864185) {}
[INFO ] 2019-11-01T00:07:44,626Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566864185) {}
[INFO ] 2019-11-01T00:07:44,631Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:44,636Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566864185) {}
[INFO ] 2019-11-01T00:07:44,638Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:07:44,638Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:07:44,659Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:07:44,665Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@3b8257c5 {}
[INFO ] 2019-11-01T00:07:44,672Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:07:44,673Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:44,674Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:44,737Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:44,747Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:07:44,748Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566864748) {}
[INFO ] 2019-11-01T00:07:44,751Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:44,754Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566864748) {}
[INFO ] 2019-11-01T00:07:44,755Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566864748) {}
[INFO ] 2019-11-01T00:07:44,874Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:07:44,988Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:07:45,100Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:07:45,102Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:07:45,113Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:07:45,114Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:45,114Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:45,115Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:45,116Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:07:45,125Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key C9B6750C331FF7E00E6B622B7F048399150ADE9932C89F2EB65B90412CFA9CB0, not inserting the second time {}
[INFO ] 2019-11-01T00:07:45,132Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566864185) {}
[INFO ] 2019-11-01T00:07:45,133Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:45,138Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566864185) {}
[INFO ] 2019-11-01T00:07:45,139Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566864748) {}
[INFO ] 2019-11-01T00:07:45,141Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:45,145Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566864748) {}
[INFO ] 2019-11-01T00:07:45,146Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566864748) {}
[INFO ] 2019-11-01T00:07:45,148Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:45,148Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566864748) {}
[INFO ] 2019-11-01T00:07:45,149Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566864748) {}
[INFO ] 2019-11-01T00:07:45,150Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:45,150Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566864748) {}
[INFO ] 2019-11-01T00:07:45,152Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:07:45,153Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:07:45,162Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:07:45,167Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@537f9854 {}
[INFO ] 2019-11-01T00:07:45,176Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:07:45,177Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:45,178Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:45,233Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:45,238Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:07:45,239Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566865239) {}
[INFO ] 2019-11-01T00:07:45,242Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:45,244Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566865239) {}
[INFO ] 2019-11-01T00:07:45,244Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566865239) {}
[INFO ] 2019-11-01T00:07:45,392Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:07:45,523Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:07:45,615Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:07:45,617Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:07:45,628Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:07:45,630Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:45,631Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:45,632Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:45,633Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:07:45,646Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 3999108F2C7E80FA74327C9EBB967F41D1DB31E13422AC72D6C5F56A9136D58C, not inserting the second time {}
[INFO ] 2019-11-01T00:07:45,653Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566864185) {}
[INFO ] 2019-11-01T00:07:45,654Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:45,659Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566864185) {}
[INFO ] 2019-11-01T00:07:45,660Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566865239) {}
[INFO ] 2019-11-01T00:07:45,663Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:45,668Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566865239) {}
[INFO ] 2019-11-01T00:07:45,669Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566864748) {}
[INFO ] 2019-11-01T00:07:45,670Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:45,673Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566864748) {}
[INFO ] 2019-11-01T00:07:45,674Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566865239) {}
[INFO ] 2019-11-01T00:07:45,675Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:45,679Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566865239) {}
[INFO ] 2019-11-01T00:07:45,679Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566865239) {}
[INFO ] 2019-11-01T00:07:45,681Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:45,682Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566865239) {}
[INFO ] 2019-11-01T00:07:45,682Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566865239) {}
[INFO ] 2019-11-01T00:07:45,683Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:45,683Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566865239) {}
[INFO ] 2019-11-01T00:07:45,685Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:07:45,686Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:07:45,715Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:07:45,721Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@22c15bd7 {}
[INFO ] 2019-11-01T00:07:45,729Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:07:45,730Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:45,730Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:45,817Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:45,822Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:07:45,823Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566865823) {}
[INFO ] 2019-11-01T00:07:45,826Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:45,830Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566865823) {}
[INFO ] 2019-11-01T00:07:45,831Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566865823) {}
[INFO ] 2019-11-01T00:07:45,943Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:07:46,057Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:07:46,145Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:07:46,147Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:07:46,161Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:07:46,162Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:46,163Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:46,164Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:46,164Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:07:46,173Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 104F015E01FB75F9D40EB8F9B0FF93D3AC06193A1FF17063CF8395F34879398E, not inserting the second time {}
[INFO ] 2019-11-01T00:07:46,184Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566864185) {}
[INFO ] 2019-11-01T00:07:46,185Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:46,193Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566864185) {}
[INFO ] 2019-11-01T00:07:46,194Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566865823) {}
[INFO ] 2019-11-01T00:07:46,195Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:46,198Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566865823) {}
[INFO ] 2019-11-01T00:07:46,199Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566864748) {}
[INFO ] 2019-11-01T00:07:46,200Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:46,203Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566864748) {}
[INFO ] 2019-11-01T00:07:46,204Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566865823) {}
[INFO ] 2019-11-01T00:07:46,205Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:46,208Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566865823) {}
[INFO ] 2019-11-01T00:07:46,209Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566865239) {}
[INFO ] 2019-11-01T00:07:46,210Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:46,213Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566865239) {}
[INFO ] 2019-11-01T00:07:46,214Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566865823) {}
[INFO ] 2019-11-01T00:07:46,215Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:46,218Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566865823) {}
[INFO ] 2019-11-01T00:07:46,219Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566865823) {}
[INFO ] 2019-11-01T00:07:46,221Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:46,221Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566865823) {}
[INFO ] 2019-11-01T00:07:46,222Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566865823) {}
[INFO ] 2019-11-01T00:07:46,222Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:46,223Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566865823) {}
[INFO ] 2019-11-01T00:07:46,225Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:07:46,225Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:07:46,235Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:07:46,240Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@43e5fafd {}
[INFO ] 2019-11-01T00:07:46,248Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:07:46,249Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:46,249Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:46,301Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:46,307Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:07:46,307Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566866307) {}
[INFO ] 2019-11-01T00:07:46,310Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:46,312Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566866307) {}
[INFO ] 2019-11-01T00:07:46,312Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566866307) {}
[INFO ] 2019-11-01T00:07:46,479Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:07:46,586Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:07:46,677Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:07:46,678Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:07:46,688Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:07:46,689Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:46,690Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:46,690Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:46,691Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:07:46,700Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 6561E7C0F0590993E23C202C423464DB8568917660D617ADBAEFE78B6B2516A3, not inserting the second time {}
[INFO ] 2019-11-01T00:07:46,708Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566864185) {}
[INFO ] 2019-11-01T00:07:46,715Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:46,720Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566864185) {}
[INFO ] 2019-11-01T00:07:46,720Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566866307) {}
[INFO ] 2019-11-01T00:07:46,721Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:46,732Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566866307) {}
[INFO ] 2019-11-01T00:07:46,732Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566864748) {}
[INFO ] 2019-11-01T00:07:46,733Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:46,749Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566864748) {}
[INFO ] 2019-11-01T00:07:46,751Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566866307) {}
[INFO ] 2019-11-01T00:07:46,752Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:46,756Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566866307) {}
[INFO ] 2019-11-01T00:07:46,757Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566865239) {}
[INFO ] 2019-11-01T00:07:46,758Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:46,762Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566865239) {}
[INFO ] 2019-11-01T00:07:46,763Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566866307) {}
[INFO ] 2019-11-01T00:07:46,764Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:46,767Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566866307) {}
[INFO ] 2019-11-01T00:07:46,768Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566865823) {}
[INFO ] 2019-11-01T00:07:46,769Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:46,773Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566865823) {}
[INFO ] 2019-11-01T00:07:46,773Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566866307) {}
[INFO ] 2019-11-01T00:07:46,774Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:46,778Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566866307) {}
[INFO ] 2019-11-01T00:07:46,778Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566866307) {}
[INFO ] 2019-11-01T00:07:46,781Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:46,781Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566866307) {}
[INFO ] 2019-11-01T00:07:46,782Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566866307) {}
[INFO ] 2019-11-01T00:07:46,783Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:46,784Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566866307) {}
[INFO ] 2019-11-01T00:07:46,784Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:46,785Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:46,786Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:46,787Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:46,787Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:46,788Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:46,789Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:46,790Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:46,837Z [Mock network] flow.[bdd9fc69-56de-4258-a69a-a8e4bf1cc5cc].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=7720876322345318211). {}
[INFO ] 2019-11-01T00:07:46,898Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=7720876322345318211). {invocation_id=d7717097-b776-4f7c-82cd-885f3c0cdaa3, invocation_timestamp=2019-11-01T00:07:46.897Z, session_id=d7717097-b776-4f7c-82cd-885f3c0cdaa3, session_timestamp=2019-11-01T00:07:46.897Z}
[INFO ] 2019-11-01T00:07:47,047Z [Mock network] flow.[bdd9fc69-56de-4258-a69a-a8e4bf1cc5cc].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-5185346446244353309). {}
[INFO ] 2019-11-01T00:07:47,060Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-5185346446244353309). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=ad33082a-fbb7-460c-aab6-812b6841a386, invocation_timestamp=2019-11-01T00:07:47.059Z, session_id=ad33082a-fbb7-460c-aab6-812b6841a386, session_timestamp=2019-11-01T00:07:47.059Z}
[INFO ] 2019-11-01T00:07:47,107Z [Mock network] flow.[bdd9fc69-56de-4258-a69a-a8e4bf1cc5cc].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=7432604904011849040). {}
[INFO ] 2019-11-01T00:07:47,127Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=7432604904011849040). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=6c0016e2-aa10-4a02-a103-d501b0159d64, invocation_timestamp=2019-11-01T00:07:47.126Z, session_id=6c0016e2-aa10-4a02-a103-d501b0159d64, session_timestamp=2019-11-01T00:07:47.126Z}
[INFO ] 2019-11-01T00:07:47,212Z [Mock network] flow.[954b18c1-8e18-4d29-9865-db271788d73c].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=443717259373378582). {}
[INFO ] 2019-11-01T00:07:47,242Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=443717259373378582). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=edf591ca-496d-467d-97b2-be38af9cea2f, invocation_timestamp=2019-11-01T00:07:47.241Z, session_id=edf591ca-496d-467d-97b2-be38af9cea2f, session_timestamp=2019-11-01T00:07:47.241Z}
[INFO ] 2019-11-01T00:07:47,357Z [Mock network] flow.[8c5d8c8e-9264-46e3-8964-595c4f0ece29].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=-1834577800867106344). {}
[INFO ] 2019-11-01T00:07:47,395Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-1834577800867106344). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=285e72d2-0e8d-4729-b7d6-e2c00f0cc4e2, invocation_timestamp=2019-11-01T00:07:47.394Z, session_id=285e72d2-0e8d-4729-b7d6-e2c00f0cc4e2, session_timestamp=2019-11-01T00:07:47.394Z}
[INFO ] 2019-11-01T00:07:47,401Z [Mock network] flow.[a47bcf72-c912-4796-9720-04f40b8857dd].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:47,461Z [Mock network] flow.[a47bcf72-c912-4796-9720-04f40b8857dd].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:47,517Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:07:47,541Z [Mock network] flow.[8e515f97-698c-44d0-a11c-64fc9bbefa73].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-1820470487317244546). {}
[INFO ] 2019-11-01T00:07:47,558Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-1820470487317244546). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=ce9514a5-6731-451f-8b0f-b3cfbc7b8438, invocation_timestamp=2019-11-01T00:07:47.557Z, session_id=ce9514a5-6731-451f-8b0f-b3cfbc7b8438, session_timestamp=2019-11-01T00:07:47.557Z}
[INFO ] 2019-11-01T00:07:47,570Z [Mock network] flow.[ca4ad4ca-896f-45ec-a5c2-51eaed325f6a].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:47,609Z [Mock network] flow.[ca4ad4ca-896f-45ec-a5c2-51eaed325f6a].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:47,679Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.qn7265.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:07:47,748Z [Mock network] flow.[8e515f97-698c-44d0-a11c-64fc9bbefa73].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:47,778Z [Mock network] flow.[8e515f97-698c-44d0-a11c-64fc9bbefa73].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:47,780Z [Mock network] flow.[8e515f97-698c-44d0-a11c-64fc9bbefa73].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:47,815Z [Mock network] flow.[8e515f97-698c-44d0-a11c-64fc9bbefa73].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:47,926Z [Mock network] flow.[ca4ad4ca-896f-45ec-a5c2-51eaed325f6a].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-5796207239075812710). {}
[INFO ] 2019-11-01T00:07:47,947Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-5796207239075812710). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=ae1e0a4b-6796-4414-a20b-4a44db9e1728, invocation_timestamp=2019-11-01T00:07:47.947Z, session_id=ae1e0a4b-6796-4414-a20b-4a44db9e1728, session_timestamp=2019-11-01T00:07:47.947Z}
[INFO ] 2019-11-01T00:07:47,961Z [Mock network] flow.[0a8782b2-b30d-4145-83b7-f0dd52b2171c].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:48,024Z [Mock network] flow.[0a8782b2-b30d-4145-83b7-f0dd52b2171c].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:48,025Z [Mock network] flow.[0a8782b2-b30d-4145-83b7-f0dd52b2171c].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:48,044Z [Mock network] flow.[0a8782b2-b30d-4145-83b7-f0dd52b2171c].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:48,199Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:07:48,201Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:07:48,204Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6c83dcf3 {}
[INFO ] 2019-11-01T00:07:48,212Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:07:48,213Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:48,214Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:48,285Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:48,291Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:07:48,292Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566868292) {}
[INFO ] 2019-11-01T00:07:48,295Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:48,301Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566868292) {}
[INFO ] 2019-11-01T00:07:48,302Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566868292) {}
[INFO ] 2019-11-01T00:07:48,444Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:07:48,553Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:07:48,640Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:07:48,641Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:07:48,649Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:07:48,652Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:07:48,652Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:48,653Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:48,653Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:48,654Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:07:48,663Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key C8B22C9425293EE0C50D1C3B68ECFF7E3731BDAF7B06E169D34BECF4CC79D56E, not inserting the second time {}
[INFO ] 2019-11-01T00:07:48,669Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566868292) {}
[INFO ] 2019-11-01T00:07:48,706Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:48,707Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566868292) {}
[INFO ] 2019-11-01T00:07:48,707Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566868292) {}
[INFO ] 2019-11-01T00:07:48,708Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:48,709Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566868292) {}
[INFO ] 2019-11-01T00:07:48,711Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:07:48,711Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:07:48,720Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:07:48,725Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@1a648dc4 {}
[INFO ] 2019-11-01T00:07:48,731Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:07:48,731Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:48,732Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:48,781Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:48,786Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:07:48,786Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566868786) {}
[INFO ] 2019-11-01T00:07:48,789Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:48,791Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566868786) {}
[INFO ] 2019-11-01T00:07:48,791Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566868786) {}
[INFO ] 2019-11-01T00:07:48,921Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:07:49,025Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:07:49,114Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:07:49,115Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:07:49,129Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:07:49,131Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:49,132Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:49,132Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:49,133Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:07:49,143Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 508660417A021B18A310C12BE9BA53294A85DF9A480610CC0A124EFE0DE0A401, not inserting the second time {}
[INFO ] 2019-11-01T00:07:49,147Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566868292) {}
[INFO ] 2019-11-01T00:07:49,148Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:49,157Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566868292) {}
[INFO ] 2019-11-01T00:07:49,160Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566868786) {}
[INFO ] 2019-11-01T00:07:49,161Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:49,165Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566868786) {}
[INFO ] 2019-11-01T00:07:49,166Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566868786) {}
[INFO ] 2019-11-01T00:07:49,168Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:49,169Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566868786) {}
[INFO ] 2019-11-01T00:07:49,170Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566868786) {}
[INFO ] 2019-11-01T00:07:49,171Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:49,171Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566868786) {}
[INFO ] 2019-11-01T00:07:49,174Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:07:49,175Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:07:49,190Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:07:49,199Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@4c2a586c {}
[INFO ] 2019-11-01T00:07:49,204Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:07:49,205Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:49,205Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:49,293Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:49,299Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:07:49,299Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566869299) {}
[INFO ] 2019-11-01T00:07:49,302Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:49,306Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566869299) {}
[INFO ] 2019-11-01T00:07:49,307Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566869299) {}
[INFO ] 2019-11-01T00:07:49,424Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:07:49,539Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:07:49,630Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:07:49,632Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:07:49,642Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:07:49,643Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:49,644Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:49,644Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:49,645Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:07:49,654Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 6BD22DA4F5F355EFA79BC8838674C6417404A9CDF28AB98619D98CA6B37BE05A, not inserting the second time {}
[INFO ] 2019-11-01T00:07:49,660Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566868292) {}
[INFO ] 2019-11-01T00:07:49,661Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:49,666Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566868292) {}
[INFO ] 2019-11-01T00:07:49,666Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566869299) {}
[INFO ] 2019-11-01T00:07:49,667Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:49,671Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566869299) {}
[INFO ] 2019-11-01T00:07:49,671Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566868786) {}
[INFO ] 2019-11-01T00:07:49,672Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:49,676Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566868786) {}
[INFO ] 2019-11-01T00:07:49,676Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566869299) {}
[INFO ] 2019-11-01T00:07:49,684Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:49,688Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566869299) {}
[INFO ] 2019-11-01T00:07:49,688Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566869299) {}
[INFO ] 2019-11-01T00:07:49,690Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:49,691Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566869299) {}
[INFO ] 2019-11-01T00:07:49,691Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566869299) {}
[INFO ] 2019-11-01T00:07:49,693Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:49,694Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566869299) {}
[INFO ] 2019-11-01T00:07:49,696Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:07:49,696Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:07:49,718Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:07:49,726Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@4adee886 {}
[INFO ] 2019-11-01T00:07:49,737Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:07:49,738Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:49,738Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:49,800Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:49,804Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:07:49,805Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566869805) {}
[INFO ] 2019-11-01T00:07:49,808Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:49,813Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566869805) {}
[INFO ] 2019-11-01T00:07:49,813Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566869805) {}
[INFO ] 2019-11-01T00:07:49,953Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:07:50,068Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:07:50,157Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:07:50,159Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:07:50,169Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:07:50,169Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:50,170Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:50,170Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:50,171Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:07:50,180Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key EC65709459ED5CAAD2C4ABC421CC2A0B8D81B03C8CC599C41F09DB957DD86A21, not inserting the second time {}
[INFO ] 2019-11-01T00:07:50,188Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566868292) {}
[INFO ] 2019-11-01T00:07:50,189Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:50,193Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566868292) {}
[INFO ] 2019-11-01T00:07:50,193Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566869805) {}
[INFO ] 2019-11-01T00:07:50,194Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:50,198Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566869805) {}
[INFO ] 2019-11-01T00:07:50,198Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566868786) {}
[INFO ] 2019-11-01T00:07:50,199Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:50,203Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566868786) {}
[INFO ] 2019-11-01T00:07:50,205Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566869805) {}
[INFO ] 2019-11-01T00:07:50,207Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:50,210Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566869805) {}
[INFO ] 2019-11-01T00:07:50,211Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566869299) {}
[INFO ] 2019-11-01T00:07:50,212Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:50,215Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566869299) {}
[INFO ] 2019-11-01T00:07:50,216Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566869805) {}
[INFO ] 2019-11-01T00:07:50,217Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:50,220Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566869805) {}
[INFO ] 2019-11-01T00:07:50,220Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566869805) {}
[INFO ] 2019-11-01T00:07:50,222Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:50,223Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566869805) {}
[INFO ] 2019-11-01T00:07:50,223Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566869805) {}
[INFO ] 2019-11-01T00:07:50,224Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:50,224Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566869805) {}
[INFO ] 2019-11-01T00:07:50,226Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:07:50,228Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:07:50,239Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:07:50,246Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@74d0e26c {}
[INFO ] 2019-11-01T00:07:50,251Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:07:50,251Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:50,252Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:50,313Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:50,318Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:07:50,319Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566870319) {}
[INFO ] 2019-11-01T00:07:50,321Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:50,323Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566870319) {}
[INFO ] 2019-11-01T00:07:50,324Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566870319) {}
[INFO ] 2019-11-01T00:07:50,442Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:07:50,552Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:07:50,676Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:07:50,677Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:07:50,686Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:07:50,687Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:50,687Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:50,688Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:50,688Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:07:50,697Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key A0E8B5218CCBF9D151C8122344F527888B5E13441462907E0A53B80CDAE47F11, not inserting the second time {}
[INFO ] 2019-11-01T00:07:50,701Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566868292) {}
[INFO ] 2019-11-01T00:07:50,702Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:50,706Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566868292) {}
[INFO ] 2019-11-01T00:07:50,706Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566870319) {}
[INFO ] 2019-11-01T00:07:50,707Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:50,710Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566870319) {}
[INFO ] 2019-11-01T00:07:50,711Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566868786) {}
[INFO ] 2019-11-01T00:07:50,712Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:50,715Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566868786) {}
[INFO ] 2019-11-01T00:07:50,715Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566870319) {}
[INFO ] 2019-11-01T00:07:50,716Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:50,719Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566870319) {}
[INFO ] 2019-11-01T00:07:50,720Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566869299) {}
[INFO ] 2019-11-01T00:07:50,721Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:50,723Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566869299) {}
[INFO ] 2019-11-01T00:07:50,724Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566870319) {}
[INFO ] 2019-11-01T00:07:50,725Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:50,728Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566870319) {}
[INFO ] 2019-11-01T00:07:50,729Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566869805) {}
[INFO ] 2019-11-01T00:07:50,730Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:50,734Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566869805) {}
[INFO ] 2019-11-01T00:07:50,734Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566870319) {}
[INFO ] 2019-11-01T00:07:50,735Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:50,738Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566870319) {}
[INFO ] 2019-11-01T00:07:50,739Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566870319) {}
[INFO ] 2019-11-01T00:07:50,741Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:50,741Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566870319) {}
[INFO ] 2019-11-01T00:07:50,742Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566870319) {}
[INFO ] 2019-11-01T00:07:50,742Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:50,743Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566870319) {}
[INFO ] 2019-11-01T00:07:50,744Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:50,744Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:50,745Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:50,745Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:50,746Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:50,746Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:50,747Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:50,748Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:50,789Z [Mock network] flow.[b764ed46-bae9-4f50-80df-17a548a87d42].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-1228753187517842193). {}
[INFO ] 2019-11-01T00:07:50,834Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-1228753187517842193). {invocation_id=052432ca-9d7b-454a-9d0c-7a262060b4be, invocation_timestamp=2019-11-01T00:07:50.833Z, session_id=052432ca-9d7b-454a-9d0c-7a262060b4be, session_timestamp=2019-11-01T00:07:50.833Z}
[INFO ] 2019-11-01T00:07:50,931Z [Mock network] flow.[b764ed46-bae9-4f50-80df-17a548a87d42].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-6791929095384466497). {}
[INFO ] 2019-11-01T00:07:50,944Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-6791929095384466497). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=1507ba07-8aaa-4b9a-aeb6-46657ba1d88c, invocation_timestamp=2019-11-01T00:07:50.943Z, session_id=1507ba07-8aaa-4b9a-aeb6-46657ba1d88c, session_timestamp=2019-11-01T00:07:50.943Z}
[INFO ] 2019-11-01T00:07:50,973Z [Mock network] flow.[b764ed46-bae9-4f50-80df-17a548a87d42].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-5374961779208299537). {}
[INFO ] 2019-11-01T00:07:50,990Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-5374961779208299537). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=9c87adb1-bd4a-430c-a28f-4d204185f84a, invocation_timestamp=2019-11-01T00:07:50.989Z, session_id=9c87adb1-bd4a-430c-a28f-4d204185f84a, session_timestamp=2019-11-01T00:07:50.989Z}
[INFO ] 2019-11-01T00:07:51,083Z [Mock network] flow.[9e0b6cef-7b2c-4c0b-b477-5c2170f6601b].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=1439371849774074998). {}
[INFO ] 2019-11-01T00:07:51,109Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=1439371849774074998). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=c4ba2767-540c-4c36-86a9-b4698c5385ea, invocation_timestamp=2019-11-01T00:07:51.108Z, session_id=c4ba2767-540c-4c36-86a9-b4698c5385ea, session_timestamp=2019-11-01T00:07:51.108Z}
[INFO ] 2019-11-01T00:07:51,182Z [Mock network] flow.[77d39afb-b4c8-4327-a0f5-2fb4808822c7].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=-6655145278956130280). {}
[INFO ] 2019-11-01T00:07:51,221Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-6655145278956130280). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=4ad9c926-23f6-4cb4-8304-e1ebed8f2372, invocation_timestamp=2019-11-01T00:07:51.220Z, session_id=4ad9c926-23f6-4cb4-8304-e1ebed8f2372, session_timestamp=2019-11-01T00:07:51.220Z}
[INFO ] 2019-11-01T00:07:51,228Z [Mock network] flow.[ef431231-a616-4669-952d-a0c9261f8604].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:51,282Z [Mock network] flow.[ef431231-a616-4669-952d-a0c9261f8604].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:51,338Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:07:51,368Z [Mock network] flow.[fcb0e5d5-fa14-4d3f-920b-55571dfdbeb5].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=5199109916822490308). {}
[INFO ] 2019-11-01T00:07:51,384Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=5199109916822490308). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=a225fda0-2423-4f08-beef-c7d41573ec92, invocation_timestamp=2019-11-01T00:07:51.383Z, session_id=a225fda0-2423-4f08-beef-c7d41573ec92, session_timestamp=2019-11-01T00:07:51.383Z}
[INFO ] 2019-11-01T00:07:51,391Z [Mock network] flow.[edec14ed-4aee-4295-b252-13afe2bbe230].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:51,455Z [Mock network] flow.[edec14ed-4aee-4295-b252-13afe2bbe230].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:51,495Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.qn7265.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:07:51,552Z [Mock network] flow.[fcb0e5d5-fa14-4d3f-920b-55571dfdbeb5].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:51,579Z [Mock network] flow.[fcb0e5d5-fa14-4d3f-920b-55571dfdbeb5].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:51,581Z [Mock network] flow.[fcb0e5d5-fa14-4d3f-920b-55571dfdbeb5].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:51,609Z [Mock network] flow.[fcb0e5d5-fa14-4d3f-920b-55571dfdbeb5].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:51,711Z [Mock network] flow.[edec14ed-4aee-4295-b252-13afe2bbe230].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=3319361024032323467). {}
[INFO ] 2019-11-01T00:07:51,733Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=3319361024032323467). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=cececa79-bed6-49d1-af70-14999ed6e4f8, invocation_timestamp=2019-11-01T00:07:51.732Z, session_id=cececa79-bed6-49d1-af70-14999ed6e4f8, session_timestamp=2019-11-01T00:07:51.732Z}
[INFO ] 2019-11-01T00:07:51,744Z [Mock network] flow.[32504622-d4c0-44b6-9539-f734ed533e37].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:51,804Z [Mock network] flow.[32504622-d4c0-44b6-9539-f734ed533e37].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:51,807Z [Mock network] flow.[32504622-d4c0-44b6-9539-f734ed533e37].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:51,828Z [Mock network] flow.[32504622-d4c0-44b6-9539-f734ed533e37].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:51,965Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:07:51,966Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:07:51,970Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@a395f35 {}
[INFO ] 2019-11-01T00:07:51,983Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:07:51,984Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:51,984Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:52,063Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:52,069Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:07:52,070Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566872070) {}
[INFO ] 2019-11-01T00:07:52,073Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:52,077Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566872070) {}
[INFO ] 2019-11-01T00:07:52,079Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566872070) {}
[INFO ] 2019-11-01T00:07:52,203Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:07:52,316Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:07:52,403Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:07:52,405Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:07:52,412Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:07:52,416Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:07:52,417Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:52,418Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:52,418Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:52,419Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:07:52,431Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key B93915B8E897B913877FCBD597BA258438E47F308E4AE8A3FF3073592F0EB7F4, not inserting the second time {}
[INFO ] 2019-11-01T00:07:52,435Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566872070) {}
[INFO ] 2019-11-01T00:07:52,438Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:52,438Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566872070) {}
[INFO ] 2019-11-01T00:07:52,439Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566872070) {}
[INFO ] 2019-11-01T00:07:52,440Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:52,441Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566872070) {}
[INFO ] 2019-11-01T00:07:52,443Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:07:52,444Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:07:52,452Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:07:52,466Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6f02043a {}
[INFO ] 2019-11-01T00:07:52,478Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:07:52,480Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:52,480Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:52,559Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:52,564Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:07:52,565Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566872565) {}
[INFO ] 2019-11-01T00:07:52,568Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:52,570Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566872565) {}
[INFO ] 2019-11-01T00:07:52,570Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566872565) {}
[INFO ] 2019-11-01T00:07:52,694Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:07:52,840Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:07:52,925Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:07:52,926Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:07:52,943Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:07:52,944Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:52,944Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:52,945Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:52,945Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:07:52,954Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key FDD5963DAFC87B1373024887DC59AAD9E33635865F510CAE728DB694650C90E5, not inserting the second time {}
[INFO ] 2019-11-01T00:07:52,957Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566872070) {}
[INFO ] 2019-11-01T00:07:52,958Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:52,965Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566872070) {}
[INFO ] 2019-11-01T00:07:52,966Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566872565) {}
[INFO ] 2019-11-01T00:07:52,967Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:52,971Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566872565) {}
[INFO ] 2019-11-01T00:07:52,971Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566872565) {}
[INFO ] 2019-11-01T00:07:52,973Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:52,974Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566872565) {}
[INFO ] 2019-11-01T00:07:52,975Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566872565) {}
[INFO ] 2019-11-01T00:07:52,975Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:52,976Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566872565) {}
[INFO ] 2019-11-01T00:07:52,978Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:07:52,978Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:07:52,988Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:07:52,993Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@528ca2e0 {}
[INFO ] 2019-11-01T00:07:53,000Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:07:53,001Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:53,001Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:53,050Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:53,055Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:07:53,056Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566873055) {}
[INFO ] 2019-11-01T00:07:53,058Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:53,060Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566873055) {}
[INFO ] 2019-11-01T00:07:53,065Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566873055) {}
[INFO ] 2019-11-01T00:07:53,183Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:07:53,297Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:07:53,387Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:07:53,388Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:07:53,404Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:07:53,405Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:53,405Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:53,406Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:53,406Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:07:53,416Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key F3629AAE684D8AFAE4B9C7008AB0BA0554D56765DAE355B612AC5F0B9F31194B, not inserting the second time {}
[INFO ] 2019-11-01T00:07:53,419Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566872070) {}
[INFO ] 2019-11-01T00:07:53,420Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:53,429Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566872070) {}
[INFO ] 2019-11-01T00:07:53,430Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566873055) {}
[INFO ] 2019-11-01T00:07:53,431Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:53,435Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566873055) {}
[INFO ] 2019-11-01T00:07:53,436Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566872565) {}
[INFO ] 2019-11-01T00:07:53,437Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:53,440Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566872565) {}
[INFO ] 2019-11-01T00:07:53,441Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566873055) {}
[INFO ] 2019-11-01T00:07:53,442Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:53,445Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566873055) {}
[INFO ] 2019-11-01T00:07:53,446Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566873055) {}
[INFO ] 2019-11-01T00:07:53,448Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:53,449Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566873055) {}
[INFO ] 2019-11-01T00:07:53,450Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566873055) {}
[INFO ] 2019-11-01T00:07:53,450Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:53,451Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566873055) {}
[INFO ] 2019-11-01T00:07:53,453Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:07:53,454Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:07:53,465Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:07:53,471Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@3dce7a0 {}
[INFO ] 2019-11-01T00:07:53,477Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:07:53,478Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:53,479Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:53,571Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:53,577Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:07:53,577Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566873577) {}
[INFO ] 2019-11-01T00:07:53,580Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:53,582Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566873577) {}
[INFO ] 2019-11-01T00:07:53,582Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566873577) {}
[INFO ] 2019-11-01T00:07:53,706Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:07:53,823Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:07:53,920Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:07:53,921Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:07:53,931Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:07:53,931Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:53,932Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:53,933Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:53,933Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:07:53,942Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 995019793CAE1105EF48F5729879F3D7529B193806B095CE11AE31898FDF91FF, not inserting the second time {}
[INFO ] 2019-11-01T00:07:53,946Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566872070) {}
[INFO ] 2019-11-01T00:07:53,947Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:53,952Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566872070) {}
[INFO ] 2019-11-01T00:07:53,953Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566873577) {}
[INFO ] 2019-11-01T00:07:53,954Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:53,965Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566873577) {}
[INFO ] 2019-11-01T00:07:53,966Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566872565) {}
[INFO ] 2019-11-01T00:07:53,967Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:53,972Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566872565) {}
[INFO ] 2019-11-01T00:07:53,972Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566873577) {}
[INFO ] 2019-11-01T00:07:53,974Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:53,979Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566873577) {}
[INFO ] 2019-11-01T00:07:53,985Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566873055) {}
[INFO ] 2019-11-01T00:07:53,986Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:53,989Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566873055) {}
[INFO ] 2019-11-01T00:07:53,990Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566873577) {}
[INFO ] 2019-11-01T00:07:53,991Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:53,999Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566873577) {}
[INFO ] 2019-11-01T00:07:53,999Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566873577) {}
[INFO ] 2019-11-01T00:07:54,001Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:54,002Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566873577) {}
[INFO ] 2019-11-01T00:07:54,003Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566873577) {}
[INFO ] 2019-11-01T00:07:54,010Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:54,012Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566873577) {}
[INFO ] 2019-11-01T00:07:54,014Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:07:54,014Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:07:54,025Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:07:54,033Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@3e885786 {}
[INFO ] 2019-11-01T00:07:54,044Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:07:54,045Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:54,046Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:54,110Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:54,117Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:07:54,118Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566874118) {}
[INFO ] 2019-11-01T00:07:54,120Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:54,122Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566874118) {}
[INFO ] 2019-11-01T00:07:54,123Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566874118) {}
[INFO ] 2019-11-01T00:07:54,268Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:07:54,418Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:07:54,499Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:07:54,501Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:07:54,510Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:07:54,511Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:54,511Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:54,512Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:54,512Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:07:54,521Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 439A21BBBC626362A413EB7BD8B3A9D5259C40CC412463FE43E63DE1FDC5B967, not inserting the second time {}
[INFO ] 2019-11-01T00:07:54,524Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566872070) {}
[INFO ] 2019-11-01T00:07:54,526Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:54,529Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566872070) {}
[INFO ] 2019-11-01T00:07:54,529Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566874118) {}
[INFO ] 2019-11-01T00:07:54,530Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:54,533Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566874118) {}
[INFO ] 2019-11-01T00:07:54,534Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566872565) {}
[INFO ] 2019-11-01T00:07:54,535Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:54,538Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566872565) {}
[INFO ] 2019-11-01T00:07:54,538Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566874118) {}
[INFO ] 2019-11-01T00:07:54,539Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:54,542Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566874118) {}
[INFO ] 2019-11-01T00:07:54,543Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566873055) {}
[INFO ] 2019-11-01T00:07:54,544Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:54,547Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566873055) {}
[INFO ] 2019-11-01T00:07:54,547Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566874118) {}
[INFO ] 2019-11-01T00:07:54,548Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:54,552Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566874118) {}
[INFO ] 2019-11-01T00:07:54,552Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566873577) {}
[INFO ] 2019-11-01T00:07:54,553Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:54,556Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566873577) {}
[INFO ] 2019-11-01T00:07:54,556Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566874118) {}
[INFO ] 2019-11-01T00:07:54,557Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:54,560Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566874118) {}
[INFO ] 2019-11-01T00:07:54,561Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566874118) {}
[INFO ] 2019-11-01T00:07:54,563Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:54,563Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566874118) {}
[INFO ] 2019-11-01T00:07:54,564Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566874118) {}
[INFO ] 2019-11-01T00:07:54,564Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:54,565Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566874118) {}
[INFO ] 2019-11-01T00:07:54,565Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:54,566Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:54,567Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:54,567Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:54,568Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:54,568Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:54,569Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:54,569Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:54,627Z [Mock network] flow.[69a306c4-b97b-4f7a-8542-2ca345772e13].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=2027158178474361646). {}
[INFO ] 2019-11-01T00:07:54,662Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=2027158178474361646). {invocation_id=cfe0ce85-1e44-43a3-af34-13fc1f39f837, invocation_timestamp=2019-11-01T00:07:54.661Z, session_id=cfe0ce85-1e44-43a3-af34-13fc1f39f837, session_timestamp=2019-11-01T00:07:54.661Z}
[INFO ] 2019-11-01T00:07:54,782Z [Mock network] flow.[69a306c4-b97b-4f7a-8542-2ca345772e13].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-8378287942303168234). {}
[INFO ] 2019-11-01T00:07:54,820Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-8378287942303168234). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=c1fd1ef3-f61a-4436-aacb-e06368b01a1e, invocation_timestamp=2019-11-01T00:07:54.819Z, session_id=c1fd1ef3-f61a-4436-aacb-e06368b01a1e, session_timestamp=2019-11-01T00:07:54.819Z}
[INFO ] 2019-11-01T00:07:54,864Z [Mock network] flow.[69a306c4-b97b-4f7a-8542-2ca345772e13].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-30467563056004116). {}
[INFO ] 2019-11-01T00:07:54,884Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-30467563056004116). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=f4f18701-0981-427f-b94c-9837ff16f389, invocation_timestamp=2019-11-01T00:07:54.883Z, session_id=f4f18701-0981-427f-b94c-9837ff16f389, session_timestamp=2019-11-01T00:07:54.883Z}
[INFO ] 2019-11-01T00:07:54,953Z [Mock network] flow.[ad24d0b6-4104-4370-b78e-5067cbdfe929].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-681401172890564407). {}
[INFO ] 2019-11-01T00:07:54,991Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-681401172890564407). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=69a7ceac-3a8b-4a69-a75e-7ba5aad4f3e0, invocation_timestamp=2019-11-01T00:07:54.990Z, session_id=69a7ceac-3a8b-4a69-a75e-7ba5aad4f3e0, session_timestamp=2019-11-01T00:07:54.990Z}
[INFO ] 2019-11-01T00:07:55,072Z [Mock network] flow.[a58ef721-ea6e-4574-bc9e-17da1639429c].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=-8245709216289030208). {}
[INFO ] 2019-11-01T00:07:55,091Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-8245709216289030208). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=7e19f3b0-56a8-4a1b-baa1-c212002fce7e, invocation_timestamp=2019-11-01T00:07:55.091Z, session_id=7e19f3b0-56a8-4a1b-baa1-c212002fce7e, session_timestamp=2019-11-01T00:07:55.091Z}
[INFO ] 2019-11-01T00:07:55,102Z [Mock network] flow.[7840b54b-df76-43d6-ab6d-42107354d111].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:55,168Z [Mock network] flow.[7840b54b-df76-43d6-ab6d-42107354d111].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:55,212Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:07:55,227Z [Mock network] flow.[b63e2417-bbef-49b8-88ab-59087a606b3c].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-1822770084902726099). {}
[INFO ] 2019-11-01T00:07:55,242Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-1822770084902726099). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=e0e7e4f8-9be9-43e4-a2c8-c316ababdecb, invocation_timestamp=2019-11-01T00:07:55.241Z, session_id=e0e7e4f8-9be9-43e4-a2c8-c316ababdecb, session_timestamp=2019-11-01T00:07:55.241Z}
[INFO ] 2019-11-01T00:07:55,249Z [Mock network] flow.[cfcab2ce-82a8-4009-aa9d-bbd896325239].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:55,287Z [Mock network] flow.[cfcab2ce-82a8-4009-aa9d-bbd896325239].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:55,321Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.qn7265.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:07:55,362Z [Mock network] flow.[b63e2417-bbef-49b8-88ab-59087a606b3c].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:55,389Z [Mock network] flow.[b63e2417-bbef-49b8-88ab-59087a606b3c].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:55,391Z [Mock network] flow.[b63e2417-bbef-49b8-88ab-59087a606b3c].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:55,437Z [Mock network] flow.[b63e2417-bbef-49b8-88ab-59087a606b3c].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:55,493Z [Mock network] flow.[cfcab2ce-82a8-4009-aa9d-bbd896325239].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-8065651151440549426). {}
[INFO ] 2019-11-01T00:07:55,504Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-8065651151440549426). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=d3f070f4-38e8-40e4-bb39-f8d5dc152c68, invocation_timestamp=2019-11-01T00:07:55.503Z, session_id=d3f070f4-38e8-40e4-bb39-f8d5dc152c68, session_timestamp=2019-11-01T00:07:55.503Z}
[INFO ] 2019-11-01T00:07:55,513Z [Mock network] flow.[684e0389-50ee-4d10-8c88-0440cf5f8c9e].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:55,569Z [Mock network] flow.[684e0389-50ee-4d10-8c88-0440cf5f8c9e].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:55,570Z [Mock network] flow.[684e0389-50ee-4d10-8c88-0440cf5f8c9e].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:55,595Z [Mock network] flow.[684e0389-50ee-4d10-8c88-0440cf5f8c9e].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:56,129Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:07:56,130Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:07:56,133Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@21c946b6 {}
[INFO ] 2019-11-01T00:07:56,140Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:07:56,141Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:56,142Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:56,194Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:56,198Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:07:56,199Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566876199) {}
[INFO ] 2019-11-01T00:07:56,201Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:56,205Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566876199) {}
[INFO ] 2019-11-01T00:07:56,206Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566876199) {}
[INFO ] 2019-11-01T00:07:56,346Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:07:56,475Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:07:56,580Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:07:56,581Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:07:56,588Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:07:56,592Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:07:56,592Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:56,593Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:56,594Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:56,594Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:07:56,603Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 66B9DB5DD87E36C717D7CD380DFA69AD8FDFCC1825123A2B2F06690773244448, not inserting the second time {}
[INFO ] 2019-11-01T00:07:56,607Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566876199) {}
[INFO ] 2019-11-01T00:07:56,609Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:56,610Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566876199) {}
[INFO ] 2019-11-01T00:07:56,610Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566876199) {}
[INFO ] 2019-11-01T00:07:56,611Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:56,611Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566876199) {}
[INFO ] 2019-11-01T00:07:56,613Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:07:56,615Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:07:56,627Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:07:56,633Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@5f5a4f56 {}
[INFO ] 2019-11-01T00:07:56,640Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:07:56,641Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:56,642Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:56,693Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:56,699Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:07:56,699Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566876699) {}
[INFO ] 2019-11-01T00:07:56,702Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:56,704Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566876699) {}
[INFO ] 2019-11-01T00:07:56,705Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566876699) {}
[INFO ] 2019-11-01T00:07:56,824Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:07:56,950Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:07:57,039Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:07:57,040Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:07:57,050Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:07:57,052Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:57,052Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:57,053Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:57,054Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:07:57,063Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 5A686F0A6E0DC65261697CBDEE9F2920EDF3632187A729E30A6296CEE1CA94AE, not inserting the second time {}
[INFO ] 2019-11-01T00:07:57,067Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566876199) {}
[INFO ] 2019-11-01T00:07:57,069Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:57,072Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566876199) {}
[INFO ] 2019-11-01T00:07:57,074Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566876699) {}
[INFO ] 2019-11-01T00:07:57,075Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:57,080Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566876699) {}
[INFO ] 2019-11-01T00:07:57,081Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566876699) {}
[INFO ] 2019-11-01T00:07:57,085Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:57,086Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566876699) {}
[INFO ] 2019-11-01T00:07:57,087Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566876699) {}
[INFO ] 2019-11-01T00:07:57,089Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:57,090Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566876699) {}
[INFO ] 2019-11-01T00:07:57,098Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:07:57,099Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:07:57,111Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:07:57,117Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@44e4c27d {}
[INFO ] 2019-11-01T00:07:57,128Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:07:57,129Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:57,130Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:57,207Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:57,216Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:07:57,217Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566877217) {}
[INFO ] 2019-11-01T00:07:57,220Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:57,222Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566877217) {}
[INFO ] 2019-11-01T00:07:57,223Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566877217) {}
[INFO ] 2019-11-01T00:07:57,351Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:07:57,465Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:07:57,555Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:07:57,557Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:07:57,566Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:07:57,567Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:57,568Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:57,569Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:57,569Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:07:57,578Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key DD0A1FBCC1796ECFE747BFEB62E53E52E4B41B7377BDAA177986E28455BF21D1, not inserting the second time {}
[INFO ] 2019-11-01T00:07:57,581Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566876199) {}
[INFO ] 2019-11-01T00:07:57,582Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:57,585Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566876199) {}
[INFO ] 2019-11-01T00:07:57,586Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566877217) {}
[INFO ] 2019-11-01T00:07:57,591Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:57,595Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566877217) {}
[INFO ] 2019-11-01T00:07:57,595Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566876699) {}
[INFO ] 2019-11-01T00:07:57,596Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:57,601Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566876699) {}
[INFO ] 2019-11-01T00:07:57,601Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566877217) {}
[INFO ] 2019-11-01T00:07:57,602Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:57,606Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566877217) {}
[INFO ] 2019-11-01T00:07:57,607Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566877217) {}
[INFO ] 2019-11-01T00:07:57,611Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:57,611Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566877217) {}
[INFO ] 2019-11-01T00:07:57,613Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566877217) {}
[INFO ] 2019-11-01T00:07:57,613Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:57,614Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566877217) {}
[INFO ] 2019-11-01T00:07:57,615Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:07:57,616Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:07:57,624Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:07:57,629Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@7e26eb21 {}
[INFO ] 2019-11-01T00:07:57,634Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:07:57,635Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:57,635Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:57,681Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:57,686Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:07:57,686Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566877686) {}
[INFO ] 2019-11-01T00:07:57,688Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:57,690Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566877686) {}
[INFO ] 2019-11-01T00:07:57,691Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566877686) {}
[INFO ] 2019-11-01T00:07:57,828Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:07:57,962Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:07:58,052Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:07:58,053Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:07:58,062Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:07:58,063Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:58,064Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:58,064Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:58,065Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:07:58,074Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 67F775589FA8C096600870433F8BE4C53ADF87CA737A7D83D6ADF369C9561E0F, not inserting the second time {}
[INFO ] 2019-11-01T00:07:58,077Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566876199) {}
[INFO ] 2019-11-01T00:07:58,078Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:58,081Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566876199) {}
[INFO ] 2019-11-01T00:07:58,082Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566877686) {}
[INFO ] 2019-11-01T00:07:58,085Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:58,088Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566877686) {}
[INFO ] 2019-11-01T00:07:58,089Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566876699) {}
[INFO ] 2019-11-01T00:07:58,090Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:58,093Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566876699) {}
[INFO ] 2019-11-01T00:07:58,093Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566877686) {}
[INFO ] 2019-11-01T00:07:58,094Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:58,097Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566877686) {}
[INFO ] 2019-11-01T00:07:58,098Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566877217) {}
[INFO ] 2019-11-01T00:07:58,098Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:58,101Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566877217) {}
[INFO ] 2019-11-01T00:07:58,102Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566877686) {}
[INFO ] 2019-11-01T00:07:58,102Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:58,105Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566877686) {}
[INFO ] 2019-11-01T00:07:58,106Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566877686) {}
[INFO ] 2019-11-01T00:07:58,108Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:58,108Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566877686) {}
[INFO ] 2019-11-01T00:07:58,109Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566877686) {}
[INFO ] 2019-11-01T00:07:58,109Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:58,110Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566877686) {}
[INFO ] 2019-11-01T00:07:58,111Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:07:58,112Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:07:58,120Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:07:58,125Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@3d81b0eb {}
[INFO ] 2019-11-01T00:07:58,137Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:07:58,138Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:58,138Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:58,204Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:58,208Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:07:58,209Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566878209) {}
[INFO ] 2019-11-01T00:07:58,213Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:58,215Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566878209) {}
[INFO ] 2019-11-01T00:07:58,216Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566878209) {}
[INFO ] 2019-11-01T00:07:58,331Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:07:58,475Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:07:58,555Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:07:58,556Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:07:58,566Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:07:58,567Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:58,568Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:58,569Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:58,570Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:07:58,579Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key B0A64E53FEF785482F6478CB407139395437C7D63D3C9C0748E8166E94260961, not inserting the second time {}
[INFO ] 2019-11-01T00:07:58,583Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566876199) {}
[INFO ] 2019-11-01T00:07:58,587Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:58,593Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566876199) {}
[INFO ] 2019-11-01T00:07:58,594Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566878209) {}
[INFO ] 2019-11-01T00:07:58,595Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:58,598Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566878209) {}
[INFO ] 2019-11-01T00:07:58,599Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566876699) {}
[INFO ] 2019-11-01T00:07:58,600Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:58,603Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566876699) {}
[INFO ] 2019-11-01T00:07:58,604Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566878209) {}
[INFO ] 2019-11-01T00:07:58,605Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:58,608Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566878209) {}
[INFO ] 2019-11-01T00:07:58,608Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566877217) {}
[INFO ] 2019-11-01T00:07:58,609Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:58,612Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566877217) {}
[INFO ] 2019-11-01T00:07:58,613Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566878209) {}
[INFO ] 2019-11-01T00:07:58,614Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:58,617Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566878209) {}
[INFO ] 2019-11-01T00:07:58,617Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566877686) {}
[INFO ] 2019-11-01T00:07:58,642Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:58,646Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566877686) {}
[INFO ] 2019-11-01T00:07:58,647Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566878209) {}
[INFO ] 2019-11-01T00:07:58,648Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:58,651Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566878209) {}
[INFO ] 2019-11-01T00:07:58,652Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566878209) {}
[INFO ] 2019-11-01T00:07:58,654Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:58,655Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566878209) {}
[INFO ] 2019-11-01T00:07:58,656Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566878209) {}
[INFO ] 2019-11-01T00:07:58,657Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:07:58,657Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566878209) {}
[INFO ] 2019-11-01T00:07:58,658Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:58,659Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:58,660Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:58,661Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:58,661Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:58,662Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:58,663Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:07:58,664Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:07:58,716Z [Mock network] flow.[ed3f2bd4-59e6-4213-8695-e5848e722767].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-7551731176024181502). {}
[INFO ] 2019-11-01T00:07:58,779Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-7551731176024181502). {invocation_id=4f48a081-c751-4c07-ad8a-a26cb1997c80, invocation_timestamp=2019-11-01T00:07:58.772Z, session_id=4f48a081-c751-4c07-ad8a-a26cb1997c80, session_timestamp=2019-11-01T00:07:58.772Z}
[INFO ] 2019-11-01T00:07:58,934Z [Mock network] flow.[ed3f2bd4-59e6-4213-8695-e5848e722767].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-631969055570543803). {}
[INFO ] 2019-11-01T00:07:58,945Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-631969055570543803). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=a1109956-0ade-4c75-a798-46fcf5bea05f, invocation_timestamp=2019-11-01T00:07:58.944Z, session_id=a1109956-0ade-4c75-a798-46fcf5bea05f, session_timestamp=2019-11-01T00:07:58.944Z}
[INFO ] 2019-11-01T00:07:59,000Z [Mock network] flow.[ed3f2bd4-59e6-4213-8695-e5848e722767].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=5412238975591723995). {}
[INFO ] 2019-11-01T00:07:59,030Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=5412238975591723995). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=20dce617-78ed-43f5-b222-a2e313623d64, invocation_timestamp=2019-11-01T00:07:59.029Z, session_id=20dce617-78ed-43f5-b222-a2e313623d64, session_timestamp=2019-11-01T00:07:59.029Z}
[INFO ] 2019-11-01T00:07:59,159Z [Mock network] flow.[4f96b911-bed9-4371-99fa-89a21ccb8018].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=3692959689009442693). {}
[INFO ] 2019-11-01T00:07:59,190Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=3692959689009442693). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=e0a93aac-1f78-4ed0-8ad0-ce0ae74532aa, invocation_timestamp=2019-11-01T00:07:59.190Z, session_id=e0a93aac-1f78-4ed0-8ad0-ce0ae74532aa, session_timestamp=2019-11-01T00:07:59.190Z}
[INFO ] 2019-11-01T00:07:59,254Z [Mock network] flow.[499e60a7-781b-41e4-a1ed-971582e4596e].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=-5859225899361308023). {}
[INFO ] 2019-11-01T00:07:59,286Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-5859225899361308023). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=990af723-3bba-43f8-9389-e37a7f264e94, invocation_timestamp=2019-11-01T00:07:59.285Z, session_id=990af723-3bba-43f8-9389-e37a7f264e94, session_timestamp=2019-11-01T00:07:59.285Z}
[INFO ] 2019-11-01T00:07:59,292Z [Mock network] flow.[322f3cae-3d2c-4cf2-a3e8-0949fa074d8a].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:59,336Z [Mock network] flow.[322f3cae-3d2c-4cf2-a3e8-0949fa074d8a].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:59,381Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:07:59,396Z [Mock network] flow.[7fd1fc70-a61a-45da-9c99-37ddca31385e].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=1143922749020660432). {}
[INFO ] 2019-11-01T00:07:59,408Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=1143922749020660432). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=d7721919-2af1-4124-a316-069b55a29c88, invocation_timestamp=2019-11-01T00:07:59.407Z, session_id=d7721919-2af1-4124-a316-069b55a29c88, session_timestamp=2019-11-01T00:07:59.407Z}
[INFO ] 2019-11-01T00:07:59,416Z [Mock network] flow.[96288559-6180-42b1-b1e2-939ad446f15c].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:59,466Z [Mock network] flow.[96288559-6180-42b1-b1e2-939ad446f15c].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:59,492Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.qn7265.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:07:59,528Z [Mock network] flow.[7fd1fc70-a61a-45da-9c99-37ddca31385e].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:59,548Z [Mock network] flow.[7fd1fc70-a61a-45da-9c99-37ddca31385e].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:59,549Z [Mock network] flow.[7fd1fc70-a61a-45da-9c99-37ddca31385e].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:59,567Z [Mock network] flow.[7fd1fc70-a61a-45da-9c99-37ddca31385e].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:59,654Z [Mock network] flow.[96288559-6180-42b1-b1e2-939ad446f15c].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=4140554179380473897). {}
[INFO ] 2019-11-01T00:07:59,673Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=4140554179380473897). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=bf10efa8-0018-4091-bdc1-8d8597a2e5ec, invocation_timestamp=2019-11-01T00:07:59.672Z, session_id=bf10efa8-0018-4091-bdc1-8d8597a2e5ec, session_timestamp=2019-11-01T00:07:59.672Z}
[INFO ] 2019-11-01T00:07:59,683Z [Mock network] flow.[e63d7283-92bc-48c7-8b23-6d48df60092d].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:59,719Z [Mock network] flow.[e63d7283-92bc-48c7-8b23-6d48df60092d].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:59,721Z [Mock network] flow.[e63d7283-92bc-48c7-8b23-6d48df60092d].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:59,755Z [Mock network] flow.[e63d7283-92bc-48c7-8b23-6d48df60092d].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:07:59,856Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:07:59,860Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:07:59,868Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@7b536e0d {}
[INFO ] 2019-11-01T00:07:59,874Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:07:59,875Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:59,876Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:59,946Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:07:59,950Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:07:59,951Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566879951) {}
[INFO ] 2019-11-01T00:07:59,953Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:07:59,958Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566879951) {}
[INFO ] 2019-11-01T00:07:59,959Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566879951) {}
[INFO ] 2019-11-01T00:08:00,086Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:08:00,192Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:08:00,283Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:08:00,284Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:08:00,291Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:08:00,293Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:08:00,294Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:08:00,295Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:08:00,295Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:08:00,296Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:08:00,305Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 1EB1FA19A77AE6DC0F13A03B3B08FE941A1B2E80C4AC574757523E90999C34A7, not inserting the second time {}
[INFO ] 2019-11-01T00:08:00,309Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566879951) {}
[INFO ] 2019-11-01T00:08:00,311Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:08:00,318Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566879951) {}
[INFO ] 2019-11-01T00:08:00,319Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566879951) {}
[INFO ] 2019-11-01T00:08:00,323Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:08:00,324Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566879951) {}
[INFO ] 2019-11-01T00:08:00,326Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:08:00,327Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:08:00,336Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:08:00,340Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@44a7acda {}
[INFO ] 2019-11-01T00:08:00,348Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:08:00,349Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:08:00,349Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:08:00,397Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:08:00,402Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:08:00,402Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566880402) {}
[INFO ] 2019-11-01T00:08:00,405Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:08:00,407Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566880402) {}
[INFO ] 2019-11-01T00:08:00,407Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566880402) {}
[INFO ] 2019-11-01T00:08:00,544Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:08:00,694Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:08:00,782Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:08:00,783Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:08:00,796Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:08:00,797Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:08:00,798Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:08:00,799Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:08:00,799Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:08:00,809Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key FF00BEF6BC3CA688D39941ECF07F934109D683C022F8DF5E7ECF3DD003BDD3CB, not inserting the second time {}
[INFO ] 2019-11-01T00:08:00,813Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566879951) {}
[INFO ] 2019-11-01T00:08:00,814Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:08:00,817Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566879951) {}
[INFO ] 2019-11-01T00:08:00,818Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566880402) {}
[INFO ] 2019-11-01T00:08:00,819Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:08:00,822Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566880402) {}
[INFO ] 2019-11-01T00:08:00,822Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566880402) {}
[INFO ] 2019-11-01T00:08:00,824Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:08:00,825Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566880402) {}
[INFO ] 2019-11-01T00:08:00,825Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566880402) {}
[INFO ] 2019-11-01T00:08:00,826Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:08:00,826Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566880402) {}
[INFO ] 2019-11-01T00:08:00,828Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:08:00,829Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:08:00,837Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:08:00,842Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@3a433bb4 {}
[INFO ] 2019-11-01T00:08:00,852Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:08:00,853Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:08:00,853Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:08:00,903Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:08:00,907Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:08:00,908Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566880908) {}
[INFO ] 2019-11-01T00:08:00,910Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:08:00,912Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566880908) {}
[INFO ] 2019-11-01T00:08:00,913Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566880908) {}
[INFO ] 2019-11-01T00:08:01,026Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:08:01,143Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:08:01,233Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:08:01,236Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:08:01,246Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:08:01,247Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:08:01,248Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:08:01,248Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:08:01,249Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:08:01,258Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 57B31E550FE2BEB732A7ED570E2ED5649499CE721B2302D3433514CF55B587F6, not inserting the second time {}
[INFO ] 2019-11-01T00:08:01,261Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566879951) {}
[INFO ] 2019-11-01T00:08:01,262Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:08:01,266Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566879951) {}
[INFO ] 2019-11-01T00:08:01,266Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566880908) {}
[INFO ] 2019-11-01T00:08:01,267Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:08:01,270Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566880908) {}
[INFO ] 2019-11-01T00:08:01,271Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566880402) {}
[INFO ] 2019-11-01T00:08:01,272Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:08:01,274Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566880402) {}
[INFO ] 2019-11-01T00:08:01,275Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566880908) {}
[INFO ] 2019-11-01T00:08:01,276Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:08:01,279Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566880908) {}
[INFO ] 2019-11-01T00:08:01,279Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566880908) {}
[INFO ] 2019-11-01T00:08:01,281Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:08:01,282Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566880908) {}
[INFO ] 2019-11-01T00:08:01,282Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566880908) {}
[INFO ] 2019-11-01T00:08:01,283Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:08:01,283Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566880908) {}
[INFO ] 2019-11-01T00:08:01,285Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:08:01,286Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:08:01,294Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:08:01,299Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@18cca1c4 {}
[INFO ] 2019-11-01T00:08:01,303Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:08:01,304Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:08:01,305Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:08:01,385Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:08:01,391Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:08:01,391Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566881391) {}
[INFO ] 2019-11-01T00:08:01,394Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:08:01,396Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566881391) {}
[INFO ] 2019-11-01T00:08:01,397Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566881391) {}
[INFO ] 2019-11-01T00:08:01,580Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:08:01,712Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:08:01,794Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:08:01,795Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:08:01,805Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:08:01,807Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:08:01,807Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:08:01,808Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:08:01,808Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:08:01,821Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key D8BF27FD65A96E7DFE8C616AD752E11AA9628176EB5CBD0E90DDB74946573A0D, not inserting the second time {}
[INFO ] 2019-11-01T00:08:01,825Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566879951) {}
[INFO ] 2019-11-01T00:08:01,826Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:08:01,831Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566879951) {}
[INFO ] 2019-11-01T00:08:01,832Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566881391) {}
[INFO ] 2019-11-01T00:08:01,833Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:08:01,836Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566881391) {}
[INFO ] 2019-11-01T00:08:01,843Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566880402) {}
[INFO ] 2019-11-01T00:08:01,845Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:08:01,850Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566880402) {}
[INFO ] 2019-11-01T00:08:01,850Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566881391) {}
[INFO ] 2019-11-01T00:08:01,851Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:08:01,858Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566881391) {}
[INFO ] 2019-11-01T00:08:01,859Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566880908) {}
[INFO ] 2019-11-01T00:08:01,860Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:08:01,874Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566880908) {}
[INFO ] 2019-11-01T00:08:01,875Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566881391) {}
[INFO ] 2019-11-01T00:08:01,877Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:08:01,881Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566881391) {}
[INFO ] 2019-11-01T00:08:01,882Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566881391) {}
[INFO ] 2019-11-01T00:08:01,885Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:08:01,885Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566881391) {}
[INFO ] 2019-11-01T00:08:01,886Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566881391) {}
[INFO ] 2019-11-01T00:08:01,887Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:08:01,887Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566881391) {}
[INFO ] 2019-11-01T00:08:01,889Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:08:01,890Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:08:01,899Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:08:01,904Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6d00be71 {}
[INFO ] 2019-11-01T00:08:01,908Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:08:01,909Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:08:01,910Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:08:01,959Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:08:01,964Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:08:01,964Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566881964) {}
[INFO ] 2019-11-01T00:08:01,967Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:08:01,969Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566881964) {}
[INFO ] 2019-11-01T00:08:01,970Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566881964) {}
[INFO ] 2019-11-01T00:08:02,091Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:08:02,206Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:08:02,320Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:08:02,322Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:08:02,331Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:08:02,331Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:08:02,332Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:08:02,333Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:08:02,333Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:08:02,342Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 2089E3D5BEA839C3E64A08A7E9AD1FBE128648043B74855E7F8816B5FDF65845, not inserting the second time {}
[INFO ] 2019-11-01T00:08:02,345Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566879951) {}
[INFO ] 2019-11-01T00:08:02,347Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:08:02,350Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566879951) {}
[INFO ] 2019-11-01T00:08:02,351Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566881964) {}
[INFO ] 2019-11-01T00:08:02,352Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:08:02,355Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566881964) {}
[INFO ] 2019-11-01T00:08:02,356Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566880402) {}
[INFO ] 2019-11-01T00:08:02,357Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:08:02,360Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566880402) {}
[INFO ] 2019-11-01T00:08:02,360Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566881964) {}
[INFO ] 2019-11-01T00:08:02,361Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:08:02,364Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566881964) {}
[INFO ] 2019-11-01T00:08:02,365Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566880908) {}
[INFO ] 2019-11-01T00:08:02,366Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:08:02,369Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566880908) {}
[INFO ] 2019-11-01T00:08:02,370Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566881964) {}
[INFO ] 2019-11-01T00:08:02,371Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:08:02,384Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566881964) {}
[INFO ] 2019-11-01T00:08:02,385Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566881391) {}
[INFO ] 2019-11-01T00:08:02,386Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:08:02,389Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566881391) {}
[INFO ] 2019-11-01T00:08:02,390Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566881964) {}
[INFO ] 2019-11-01T00:08:02,391Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:08:02,394Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566881964) {}
[INFO ] 2019-11-01T00:08:02,395Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566881964) {}
[INFO ] 2019-11-01T00:08:02,397Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:08:02,397Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566881964) {}
[INFO ] 2019-11-01T00:08:02,398Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566881964) {}
[INFO ] 2019-11-01T00:08:02,398Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:08:02,399Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566881964) {}
[INFO ] 2019-11-01T00:08:02,399Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:08:02,401Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:08:02,402Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:08:02,402Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:08:02,403Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:08:02,403Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:08:02,404Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:08:02,405Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:08:02,455Z [Mock network] flow.[3e5b4dec-f912-4c38-bb3a-bed7e55fb240].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=8656143799332660124). {}
[INFO ] 2019-11-01T00:08:02,515Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=8656143799332660124). {invocation_id=8359fec7-ee68-4da8-9b6c-b97040900302, invocation_timestamp=2019-11-01T00:08:02.514Z, session_id=8359fec7-ee68-4da8-9b6c-b97040900302, session_timestamp=2019-11-01T00:08:02.514Z}
[INFO ] 2019-11-01T00:08:02,642Z [Mock network] flow.[3e5b4dec-f912-4c38-bb3a-bed7e55fb240].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=5801287127881356124). {}
[INFO ] 2019-11-01T00:08:02,659Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=5801287127881356124). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=83b2eccd-3d7a-4d6d-a72c-bafbfa560955, invocation_timestamp=2019-11-01T00:08:02.658Z, session_id=83b2eccd-3d7a-4d6d-a72c-bafbfa560955, session_timestamp=2019-11-01T00:08:02.658Z}
[INFO ] 2019-11-01T00:08:02,695Z [Mock network] flow.[3e5b4dec-f912-4c38-bb3a-bed7e55fb240].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-4060546842033912403). {}
[INFO ] 2019-11-01T00:08:02,712Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-4060546842033912403). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=6a4e92b8-7f6d-4f16-b67c-ef6e1116b049, invocation_timestamp=2019-11-01T00:08:02.712Z, session_id=6a4e92b8-7f6d-4f16-b67c-ef6e1116b049, session_timestamp=2019-11-01T00:08:02.712Z}
[INFO ] 2019-11-01T00:08:02,794Z [Mock network] flow.[85b4db9e-7553-462a-b97f-a57f27e9ace3].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=1691036663869402817). {}
[INFO ] 2019-11-01T00:08:02,816Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=1691036663869402817). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=785aa11c-bedf-413d-9a64-d132e6c61be5, invocation_timestamp=2019-11-01T00:08:02.815Z, session_id=785aa11c-bedf-413d-9a64-d132e6c61be5, session_timestamp=2019-11-01T00:08:02.815Z}
[INFO ] 2019-11-01T00:08:02,877Z [Mock network] flow.[9cbcbf1c-76ae-464e-a535-3c04866b9d10].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=-822870936555442126). {}
[INFO ] 2019-11-01T00:08:02,926Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-822870936555442126). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=753cb243-89ee-44ae-a9dc-5ec046d9de11, invocation_timestamp=2019-11-01T00:08:02.925Z, session_id=753cb243-89ee-44ae-a9dc-5ec046d9de11, session_timestamp=2019-11-01T00:08:02.925Z}
[INFO ] 2019-11-01T00:08:02,934Z [Mock network] flow.[0683517a-e62e-4d95-9649-bd1b55da32cd].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:08:02,995Z [Mock network] flow.[0683517a-e62e-4d95-9649-bd1b55da32cd].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:08:03,035Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:08:03,050Z [Mock network] flow.[23785aad-5a48-42ed-840f-754022ecdb99].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-2676637708662097463). {}
[INFO ] 2019-11-01T00:08:03,059Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-2676637708662097463). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=48b02023-b1b6-4340-b7ca-2341f4f7c762, invocation_timestamp=2019-11-01T00:08:03.058Z, session_id=48b02023-b1b6-4340-b7ca-2341f4f7c762, session_timestamp=2019-11-01T00:08:03.058Z}
[INFO ] 2019-11-01T00:08:03,063Z [Mock network] flow.[ba2a2099-758f-4b35-b684-517f4f58910c].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:08:03,091Z [Mock network] flow.[ba2a2099-758f-4b35-b684-517f4f58910c].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:08:03,141Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.qn7265.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:08:03,202Z [Mock network] flow.[23785aad-5a48-42ed-840f-754022ecdb99].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:08:03,215Z [Mock network] flow.[23785aad-5a48-42ed-840f-754022ecdb99].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:08:03,217Z [Mock network] flow.[23785aad-5a48-42ed-840f-754022ecdb99].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:08:03,240Z [Mock network] flow.[23785aad-5a48-42ed-840f-754022ecdb99].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:08:03,303Z [Mock network] flow.[ba2a2099-758f-4b35-b684-517f4f58910c].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=2093153473800206659). {}
[INFO ] 2019-11-01T00:08:03,314Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=2093153473800206659). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=2eee4fe2-fdc0-47a2-8a17-672747304d0c, invocation_timestamp=2019-11-01T00:08:03.313Z, session_id=2eee4fe2-fdc0-47a2-8a17-672747304d0c, session_timestamp=2019-11-01T00:08:03.313Z}
[INFO ] 2019-11-01T00:08:03,357Z [Mock network] flow.[105dfe60-c37d-4f72-a421-7d7ffca53d4b].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:08:03,390Z [Mock network] flow.[105dfe60-c37d-4f72-a421-7d7ffca53d4b].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:08:03,391Z [Mock network] flow.[105dfe60-c37d-4f72-a421-7d7ffca53d4b].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:08:03,408Z [Mock network] flow.[105dfe60-c37d-4f72-a421-7d7ffca53d4b].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:08:54,386Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.qn7265 in file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/classes/kotlin/test/com/qn7265: build/tmp/generated-test-cordapps/com.qn7265-9eecfcee-c953-4f83-b7bd-1ced9945a5b7.jar {}
[INFO ] 2019-11-01T00:08:54,426Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.qn7265 in file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/classes/kotlin/main/com/qn7265: build/tmp/generated-test-cordapps/com.qn7265-b52f839a-29b8-4326-840e-7ab6cad054b2.jar {}
[INFO ] 2019-11-01T00:08:54,482Z [Test worker] cordapp.CordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/tmp/generated-test-cordapps/com.qn7265-9eecfcee-c953-4f83-b7bd-1ced9945a5b7.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/tmp/generated-test-cordapps/com.qn7265-b52f839a-29b8-4326-840e-7ab6cad054b2.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/qn7265-contracts-new/build/libs/qn7265-contracts-new.jar, rootPackageName=com.qn7265), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/qn7265-contracts/build/libs/qn7265-contracts.jar, rootPackageName=com.qn7265), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/libs/prides.jar, rootPackageName=com.twig) {}
[INFO ] 2019-11-01T00:08:54,520Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:08:54,533Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:08:54,554Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/tmp/generated-test-cordapps/com.qn7265-9eecfcee-c953-4f83-b7bd-1ced9945a5b7.jar {}
[INFO ] 2019-11-01T00:08:54,571Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/tmp/generated-test-cordapps/com.qn7265-b52f839a-29b8-4326-840e-7ab6cad054b2.jar {}
[INFO ] 2019-11-01T00:08:54,617Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/qn7265-contracts-new/build/libs/qn7265-contracts-new.jar {}
[INFO ] 2019-11-01T00:08:54,671Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/qn7265-contracts/build/libs/qn7265-contracts.jar {}
[INFO ] 2019-11-01T00:08:54,737Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/libs/prides.jar {}
[INFO ] 2019-11-01T00:08:54,890Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@e4a7dfc {}
[INFO ] 2019-11-01T00:08:55,747Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:08:55,807Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:08:55,813Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:08:58,182Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:08:59,022Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:08:59,025Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566939025) {}
[INFO ] 2019-11-01T00:08:59,037Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:08:59,143Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566939025) {}
[INFO ] 2019-11-01T00:08:59,146Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566939025) {}
[INFO ] 2019-11-01T00:08:59,465Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:08:59,680Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:08:59,812Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:08:59,825Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:08:59,940Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:09:00,108Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:09:00,114Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:00,121Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:00,124Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:00,129Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:09:00,199Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 125998AAA8494545EF1F1F3BCC5A97F4F3CB5852C3A3612AFCAF14CFE2EA64CA, not inserting the second time {}
[INFO ] 2019-11-01T00:09:00,284Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566939025) {}
[INFO ] 2019-11-01T00:09:00,311Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:00,313Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566939025) {}
[INFO ] 2019-11-01T00:09:00,315Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566939025) {}
[INFO ] 2019-11-01T00:09:00,317Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:00,319Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566939025) {}
[INFO ] 2019-11-01T00:09:00,324Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:09:00,326Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:09:00,357Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:09:00,371Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6a96c0df {}
[INFO ] 2019-11-01T00:09:00,388Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:09:00,391Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:00,392Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:00,596Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:00,618Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:09:00,623Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566940623) {}
[INFO ] 2019-11-01T00:09:00,634Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:00,647Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566940623) {}
[INFO ] 2019-11-01T00:09:00,650Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566940623) {}
[INFO ] 2019-11-01T00:09:00,836Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:09:00,978Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:09:01,077Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:09:01,081Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:09:01,111Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:09:01,113Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:01,117Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:01,120Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:01,123Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:09:01,150Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 1325BCEDC4ABFBCEE2F5EAB9A1ACDDB80E37B2D8391BB9CF5AB92AF94B0D61C3, not inserting the second time {}
[INFO ] 2019-11-01T00:09:01,162Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566939025) {}
[INFO ] 2019-11-01T00:09:01,165Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:01,203Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566939025) {}
[INFO ] 2019-11-01T00:09:01,205Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566940623) {}
[INFO ] 2019-11-01T00:09:01,212Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:01,239Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566940623) {}
[INFO ] 2019-11-01T00:09:01,241Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566940623) {}
[INFO ] 2019-11-01T00:09:01,252Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:01,256Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566940623) {}
[INFO ] 2019-11-01T00:09:01,258Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566940623) {}
[INFO ] 2019-11-01T00:09:01,263Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:01,266Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566940623) {}
[INFO ] 2019-11-01T00:09:01,271Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:09:01,274Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:09:01,322Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:09:01,337Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@471d8d09 {}
[INFO ] 2019-11-01T00:09:01,359Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:09:01,363Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:01,365Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:01,547Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:01,557Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:09:01,559Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566941559) {}
[INFO ] 2019-11-01T00:09:01,564Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:01,569Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566941559) {}
[INFO ] 2019-11-01T00:09:01,571Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566941559) {}
[INFO ] 2019-11-01T00:09:01,715Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:09:01,852Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:09:01,972Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:09:01,974Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:09:01,989Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:09:01,991Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:01,992Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:01,993Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:01,995Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:09:02,008Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 73D83FB449F3FAAC233DB3D4F8D7ADE4D66DDE958F8433F6287DC8EB8086FC01, not inserting the second time {}
[INFO ] 2019-11-01T00:09:02,020Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566939025) {}
[INFO ] 2019-11-01T00:09:02,039Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:02,056Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566939025) {}
[INFO ] 2019-11-01T00:09:02,060Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566941559) {}
[INFO ] 2019-11-01T00:09:02,063Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:02,077Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566941559) {}
[INFO ] 2019-11-01T00:09:02,080Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566940623) {}
[INFO ] 2019-11-01T00:09:02,091Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:02,108Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566940623) {}
[INFO ] 2019-11-01T00:09:02,121Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566941559) {}
[INFO ] 2019-11-01T00:09:02,125Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:02,139Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566941559) {}
[INFO ] 2019-11-01T00:09:02,141Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566941559) {}
[INFO ] 2019-11-01T00:09:02,147Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:02,149Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566941559) {}
[INFO ] 2019-11-01T00:09:02,150Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566941559) {}
[INFO ] 2019-11-01T00:09:02,152Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:02,153Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566941559) {}
[INFO ] 2019-11-01T00:09:02,157Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:09:02,159Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:09:02,176Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:09:02,186Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@348c7d14 {}
[INFO ] 2019-11-01T00:09:02,202Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:09:02,205Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:02,206Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:02,369Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:02,390Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:09:02,392Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566942392) {}
[INFO ] 2019-11-01T00:09:02,406Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:02,418Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566942392) {}
[INFO ] 2019-11-01T00:09:02,420Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566942392) {}
[INFO ] 2019-11-01T00:09:02,576Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:09:02,706Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:09:02,799Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:09:02,801Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:09:02,817Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:09:02,819Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:02,820Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:02,822Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:02,823Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:09:02,837Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key C4701143366E10C237605D40D08367C2FC5001E183393A5380F6BE7911DFBDE5, not inserting the second time {}
[INFO ] 2019-11-01T00:09:02,845Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566939025) {}
[INFO ] 2019-11-01T00:09:02,857Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:02,879Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566939025) {}
[INFO ] 2019-11-01T00:09:02,885Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566942392) {}
[INFO ] 2019-11-01T00:09:02,889Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:02,905Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566942392) {}
[INFO ] 2019-11-01T00:09:02,909Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566940623) {}
[INFO ] 2019-11-01T00:09:02,915Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:02,935Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566940623) {}
[INFO ] 2019-11-01T00:09:02,940Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566942392) {}
[INFO ] 2019-11-01T00:09:02,945Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:02,960Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566942392) {}
[INFO ] 2019-11-01T00:09:02,962Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566941559) {}
[INFO ] 2019-11-01T00:09:02,964Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:02,973Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566941559) {}
[INFO ] 2019-11-01T00:09:02,975Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566942392) {}
[INFO ] 2019-11-01T00:09:02,979Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:02,988Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566942392) {}
[INFO ] 2019-11-01T00:09:02,990Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566942392) {}
[INFO ] 2019-11-01T00:09:02,995Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:02,997Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566942392) {}
[INFO ] 2019-11-01T00:09:02,998Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566942392) {}
[INFO ] 2019-11-01T00:09:02,999Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:03,002Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566942392) {}
[INFO ] 2019-11-01T00:09:03,005Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:09:03,007Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:09:03,024Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:09:03,033Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@bd05bb {}
[INFO ] 2019-11-01T00:09:03,045Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:09:03,047Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:03,049Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:03,156Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:03,165Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:09:03,166Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566943166) {}
[INFO ] 2019-11-01T00:09:03,171Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:03,176Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566943166) {}
[INFO ] 2019-11-01T00:09:03,178Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566943166) {}
[INFO ] 2019-11-01T00:09:03,314Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:09:03,429Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:09:03,528Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:09:03,531Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:09:03,552Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:09:03,554Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:03,555Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:03,557Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:03,558Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:09:03,584Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 3CC4FA08F9819AD6705047C0D991F02D19D1CFA3F167A4D94BC66EA9B616CCE8, not inserting the second time {}
[INFO ] 2019-11-01T00:09:03,599Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566939025) {}
[INFO ] 2019-11-01T00:09:03,602Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:03,629Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566939025) {}
[INFO ] 2019-11-01T00:09:03,634Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566943166) {}
[INFO ] 2019-11-01T00:09:03,637Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:03,655Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566943166) {}
[INFO ] 2019-11-01T00:09:03,658Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566940623) {}
[INFO ] 2019-11-01T00:09:03,660Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:03,681Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566940623) {}
[INFO ] 2019-11-01T00:09:03,685Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566943166) {}
[INFO ] 2019-11-01T00:09:03,688Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:03,747Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566943166) {}
[INFO ] 2019-11-01T00:09:03,756Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566941559) {}
[INFO ] 2019-11-01T00:09:03,759Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:03,771Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566941559) {}
[INFO ] 2019-11-01T00:09:03,773Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566943166) {}
[INFO ] 2019-11-01T00:09:03,781Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:03,800Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566943166) {}
[INFO ] 2019-11-01T00:09:03,807Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566942392) {}
[INFO ] 2019-11-01T00:09:03,810Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:03,819Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566942392) {}
[INFO ] 2019-11-01T00:09:03,821Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566943166) {}
[INFO ] 2019-11-01T00:09:03,824Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:03,831Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566943166) {}
[INFO ] 2019-11-01T00:09:03,833Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566943166) {}
[INFO ] 2019-11-01T00:09:03,838Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:03,839Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566943166) {}
[INFO ] 2019-11-01T00:09:03,842Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566943166) {}
[INFO ] 2019-11-01T00:09:03,844Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:03,845Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566943166) {}
[INFO ] 2019-11-01T00:09:03,854Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:03,855Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:03,856Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:03,858Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:03,861Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:03,863Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:03,865Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:03,871Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:04,937Z [Mock network] flow.[51337bce-b5ce-455d-91ea-956866f25948].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=7475622197877875023). {}
[INFO ] 2019-11-01T00:09:05,178Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=7475622197877875023). {invocation_id=2ad20397-f69d-4db5-8a50-0cf98ef37a95, invocation_timestamp=2019-11-01T00:09:05.170Z, session_id=2ad20397-f69d-4db5-8a50-0cf98ef37a95, session_timestamp=2019-11-01T00:09:05.170Z}
[INFO ] 2019-11-01T00:09:05,589Z [Mock network] flow.[51337bce-b5ce-455d-91ea-956866f25948].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-7170413016738542254). {}
[INFO ] 2019-11-01T00:09:05,630Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-7170413016738542254). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=c7673827-2d19-418f-8da7-4bed2da45096, invocation_timestamp=2019-11-01T00:09:05.628Z, session_id=c7673827-2d19-418f-8da7-4bed2da45096, session_timestamp=2019-11-01T00:09:05.628Z}
[INFO ] 2019-11-01T00:09:05,845Z [Mock network] flow.[51337bce-b5ce-455d-91ea-956866f25948].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-4358212516654057466). {}
[INFO ] 2019-11-01T00:09:05,886Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-4358212516654057466). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=3fc27732-3320-4ed3-be12-bb0d14747e26, invocation_timestamp=2019-11-01T00:09:05.885Z, session_id=3fc27732-3320-4ed3-be12-bb0d14747e26, session_timestamp=2019-11-01T00:09:05.885Z}
[INFO ] 2019-11-01T00:09:06,068Z [Mock network] flow.[629e9878-1180-4832-a9ef-59500e566d61].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-6491086822735919316). {}
[INFO ] 2019-11-01T00:09:06,136Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-6491086822735919316). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=abe6392e-6df2-4e79-927a-636ca2ccac3b, invocation_timestamp=2019-11-01T00:09:06.135Z, session_id=abe6392e-6df2-4e79-927a-636ca2ccac3b, session_timestamp=2019-11-01T00:09:06.135Z}
[INFO ] 2019-11-01T00:09:06,371Z [Mock network] flow.[a8180e25-20fa-47ac-a1f6-49b11c55bf92].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=-3091169761879976379). {}
[INFO ] 2019-11-01T00:09:06,420Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-3091169761879976379). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=973dd8a7-bd5d-4312-9821-de7007af3b08, invocation_timestamp=2019-11-01T00:09:06.418Z, session_id=973dd8a7-bd5d-4312-9821-de7007af3b08, session_timestamp=2019-11-01T00:09:06.418Z}
[INFO ] 2019-11-01T00:09:06,438Z [Mock network] flow.[ce171fec-63fb-47ce-92ad-30e6c110c9a0].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:06,517Z [Mock network] flow.[ce171fec-63fb-47ce-92ad-30e6c110c9a0].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:06,675Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:09:06,740Z [Mock network] flow.[4d956140-a615-42e9-963a-372cb86cd31c].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=693009875963985843). {}
[INFO ] 2019-11-01T00:09:06,766Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=693009875963985843). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=713f7120-955e-4166-90b1-101719b2335f, invocation_timestamp=2019-11-01T00:09:06.765Z, session_id=713f7120-955e-4166-90b1-101719b2335f, session_timestamp=2019-11-01T00:09:06.765Z}
[INFO ] 2019-11-01T00:09:06,791Z [Mock network] flow.[5d84167e-7694-4ba3-bd79-51d480a970cc].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:06,864Z [Mock network] flow.[5d84167e-7694-4ba3-bd79-51d480a970cc].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:06,928Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.qn7265.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:09:07,043Z [Mock network] flow.[4d956140-a615-42e9-963a-372cb86cd31c].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:07,086Z [Mock network] flow.[4d956140-a615-42e9-963a-372cb86cd31c].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:07,088Z [Mock network] flow.[4d956140-a615-42e9-963a-372cb86cd31c].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:07,142Z [Mock network] flow.[4d956140-a615-42e9-963a-372cb86cd31c].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:07,269Z [Mock network] flow.[5d84167e-7694-4ba3-bd79-51d480a970cc].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-5051432975846165664). {}
[INFO ] 2019-11-01T00:09:07,285Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-5051432975846165664). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=43ca78b2-76d2-4f5b-9fe9-14ad0c9c5cd2, invocation_timestamp=2019-11-01T00:09:07.284Z, session_id=43ca78b2-76d2-4f5b-9fe9-14ad0c9c5cd2, session_timestamp=2019-11-01T00:09:07.284Z}
[INFO ] 2019-11-01T00:09:07,299Z [Mock network] flow.[ff843c93-40e4-4ac5-a97a-09d99e1dfdd6].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:07,344Z [Mock network] flow.[ff843c93-40e4-4ac5-a97a-09d99e1dfdd6].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:07,347Z [Mock network] flow.[ff843c93-40e4-4ac5-a97a-09d99e1dfdd6].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:07,371Z [Mock network] flow.[ff843c93-40e4-4ac5-a97a-09d99e1dfdd6].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:07,651Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:09:07,653Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:09:07,664Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@4a050a7 {}
[INFO ] 2019-11-01T00:09:07,681Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:09:07,682Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:07,683Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:07,797Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:07,811Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:09:07,813Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566947813) {}
[INFO ] 2019-11-01T00:09:07,819Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:07,830Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566947813) {}
[INFO ] 2019-11-01T00:09:07,834Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566947813) {}
[INFO ] 2019-11-01T00:09:07,997Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:09:08,118Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:09:08,205Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:09:08,209Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:09:08,231Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:09:08,238Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:09:08,246Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:08,248Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:08,249Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:08,254Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:09:08,270Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 8F5FE2BBA15CC78B8C95977C1FAAB487C40935ECAE9D06484610ADA2F7AB480B, not inserting the second time {}
[INFO ] 2019-11-01T00:09:08,280Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566947813) {}
[INFO ] 2019-11-01T00:09:08,291Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:08,296Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566947813) {}
[INFO ] 2019-11-01T00:09:08,298Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566947813) {}
[INFO ] 2019-11-01T00:09:08,299Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:08,300Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566947813) {}
[INFO ] 2019-11-01T00:09:08,307Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:09:08,316Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:09:08,338Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:09:08,356Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@428536a5 {}
[INFO ] 2019-11-01T00:09:08,366Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:09:08,368Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:08,370Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:08,570Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:08,581Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:09:08,582Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566948582) {}
[INFO ] 2019-11-01T00:09:08,586Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:08,589Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566948582) {}
[INFO ] 2019-11-01T00:09:08,592Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566948582) {}
[INFO ] 2019-11-01T00:09:08,726Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:09:08,868Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:09:08,958Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:09:08,960Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:09:08,972Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:09:08,973Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:08,974Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:08,975Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:08,976Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:09:08,989Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 24DDD8473D8D0EF5EA7CC6B6C28A3B215E1A4F196B5C18B96EE3EBF141B86C7D, not inserting the second time {}
[INFO ] 2019-11-01T00:09:08,994Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566947813) {}
[INFO ] 2019-11-01T00:09:09,004Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:09,018Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566947813) {}
[INFO ] 2019-11-01T00:09:09,020Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566948582) {}
[INFO ] 2019-11-01T00:09:09,022Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:09,028Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566948582) {}
[INFO ] 2019-11-01T00:09:09,030Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566948582) {}
[INFO ] 2019-11-01T00:09:09,034Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:09,035Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566948582) {}
[INFO ] 2019-11-01T00:09:09,036Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566948582) {}
[INFO ] 2019-11-01T00:09:09,037Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:09,038Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566948582) {}
[INFO ] 2019-11-01T00:09:09,041Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:09:09,042Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:09:09,056Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:09:09,064Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@2bf3387b {}
[INFO ] 2019-11-01T00:09:09,078Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:09:09,080Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:09,081Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:09,155Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:09,162Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:09:09,165Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566949165) {}
[INFO ] 2019-11-01T00:09:09,171Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:09,183Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566949165) {}
[INFO ] 2019-11-01T00:09:09,184Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566949165) {}
[INFO ] 2019-11-01T00:09:09,311Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:09:09,475Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:09:09,563Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:09:09,567Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:09:09,584Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:09:09,585Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:09,587Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:09,588Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:09,589Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:09:09,600Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key CC8FB9CC193C4A409528F255882D11CACA3A43A96DD864322BD67C71F3E5618E, not inserting the second time {}
[INFO ] 2019-11-01T00:09:09,606Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566947813) {}
[INFO ] 2019-11-01T00:09:09,608Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:09,614Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566947813) {}
[INFO ] 2019-11-01T00:09:09,616Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566949165) {}
[INFO ] 2019-11-01T00:09:09,617Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:09,623Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566949165) {}
[INFO ] 2019-11-01T00:09:09,624Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566948582) {}
[INFO ] 2019-11-01T00:09:09,626Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:09,631Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566948582) {}
[INFO ] 2019-11-01T00:09:09,632Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566949165) {}
[INFO ] 2019-11-01T00:09:09,634Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:09,640Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566949165) {}
[INFO ] 2019-11-01T00:09:09,641Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566949165) {}
[INFO ] 2019-11-01T00:09:09,644Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:09,645Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566949165) {}
[INFO ] 2019-11-01T00:09:09,646Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566949165) {}
[INFO ] 2019-11-01T00:09:09,647Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:09,648Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566949165) {}
[INFO ] 2019-11-01T00:09:09,651Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:09:09,652Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:09:09,665Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:09:09,673Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@1b8047cd {}
[INFO ] 2019-11-01T00:09:09,682Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:09:09,683Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:09,684Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:09,757Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:09,764Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:09:09,765Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566949765) {}
[INFO ] 2019-11-01T00:09:09,768Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:09,771Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566949765) {}
[INFO ] 2019-11-01T00:09:09,772Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566949765) {}
[INFO ] 2019-11-01T00:09:09,921Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:09:10,033Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:09:10,179Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:09:10,184Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:09:10,202Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:09:10,204Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:10,205Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:10,207Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:10,208Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:09:10,225Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 7F0E478EEA69627856DEEF96BB28BD8B565823DEA3CDB7C265B51432A5535E4E, not inserting the second time {}
[INFO ] 2019-11-01T00:09:10,232Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566947813) {}
[INFO ] 2019-11-01T00:09:10,234Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:10,240Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566947813) {}
[INFO ] 2019-11-01T00:09:10,241Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566949765) {}
[INFO ] 2019-11-01T00:09:10,242Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:10,247Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566949765) {}
[INFO ] 2019-11-01T00:09:10,248Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566948582) {}
[INFO ] 2019-11-01T00:09:10,255Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:10,268Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566948582) {}
[INFO ] 2019-11-01T00:09:10,270Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566949765) {}
[INFO ] 2019-11-01T00:09:10,271Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:10,283Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566949765) {}
[INFO ] 2019-11-01T00:09:10,286Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566949165) {}
[INFO ] 2019-11-01T00:09:10,287Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:10,299Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566949165) {}
[INFO ] 2019-11-01T00:09:10,300Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566949765) {}
[INFO ] 2019-11-01T00:09:10,301Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:10,307Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566949765) {}
[INFO ] 2019-11-01T00:09:10,308Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566949765) {}
[INFO ] 2019-11-01T00:09:10,310Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:10,311Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566949765) {}
[INFO ] 2019-11-01T00:09:10,312Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566949765) {}
[INFO ] 2019-11-01T00:09:10,313Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:10,313Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566949765) {}
[INFO ] 2019-11-01T00:09:10,316Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:09:10,317Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:09:10,329Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:09:10,335Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@3a5a5a8d {}
[INFO ] 2019-11-01T00:09:10,347Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:09:10,348Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:10,349Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:10,421Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:10,427Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:09:10,428Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566950428) {}
[INFO ] 2019-11-01T00:09:10,431Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:10,434Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566950428) {}
[INFO ] 2019-11-01T00:09:10,434Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566950428) {}
[INFO ] 2019-11-01T00:09:10,559Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:09:10,674Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:09:10,812Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:09:10,815Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:09:10,830Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:09:10,831Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:10,832Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:10,833Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:10,834Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:09:10,845Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 736896D12676377D17D7DBF2EEACCA3BE62C0C68C36A99B6D4407E2C768CA277, not inserting the second time {}
[INFO ] 2019-11-01T00:09:10,854Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566947813) {}
[INFO ] 2019-11-01T00:09:10,856Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:10,864Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566947813) {}
[INFO ] 2019-11-01T00:09:10,870Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566950428) {}
[INFO ] 2019-11-01T00:09:10,873Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:10,880Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566950428) {}
[INFO ] 2019-11-01T00:09:10,884Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566948582) {}
[INFO ] 2019-11-01T00:09:10,886Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:10,897Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566948582) {}
[INFO ] 2019-11-01T00:09:10,900Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566950428) {}
[INFO ] 2019-11-01T00:09:10,902Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:10,913Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566950428) {}
[INFO ] 2019-11-01T00:09:10,915Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566949165) {}
[INFO ] 2019-11-01T00:09:10,922Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:10,933Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566949165) {}
[INFO ] 2019-11-01T00:09:10,935Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566950428) {}
[INFO ] 2019-11-01T00:09:10,937Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:10,944Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566950428) {}
[INFO ] 2019-11-01T00:09:10,946Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566949765) {}
[INFO ] 2019-11-01T00:09:10,947Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:10,961Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566949765) {}
[INFO ] 2019-11-01T00:09:10,964Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566950428) {}
[INFO ] 2019-11-01T00:09:10,966Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:10,974Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566950428) {}
[INFO ] 2019-11-01T00:09:10,975Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566950428) {}
[INFO ] 2019-11-01T00:09:10,981Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:10,982Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566950428) {}
[INFO ] 2019-11-01T00:09:10,983Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566950428) {}
[INFO ] 2019-11-01T00:09:10,984Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:10,985Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566950428) {}
[INFO ] 2019-11-01T00:09:10,986Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:10,987Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:10,988Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:10,988Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:10,989Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:10,990Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:10,991Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:10,992Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:11,092Z [Mock network] flow.[3376c0b8-4540-4264-9c94-87e970b48081].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-8385674057256082166). {}
[INFO ] 2019-11-01T00:09:11,197Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-8385674057256082166). {invocation_id=dc29e843-20ee-4e45-9b79-73371928579b, invocation_timestamp=2019-11-01T00:09:11.197Z, session_id=dc29e843-20ee-4e45-9b79-73371928579b, session_timestamp=2019-11-01T00:09:11.197Z}
[INFO ] 2019-11-01T00:09:11,438Z [Mock network] flow.[3376c0b8-4540-4264-9c94-87e970b48081].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=5727853259264603712). {}
[INFO ] 2019-11-01T00:09:11,456Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=5727853259264603712). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=f80669f5-2848-4340-ae0c-86c7d99aa6de, invocation_timestamp=2019-11-01T00:09:11.455Z, session_id=f80669f5-2848-4340-ae0c-86c7d99aa6de, session_timestamp=2019-11-01T00:09:11.455Z}
[INFO ] 2019-11-01T00:09:11,532Z [Mock network] flow.[3376c0b8-4540-4264-9c94-87e970b48081].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=5985571556329518083). {}
[INFO ] 2019-11-01T00:09:11,564Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=5985571556329518083). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=72e8d55d-8124-4364-874f-4b8eb2e29b5e, invocation_timestamp=2019-11-01T00:09:11.562Z, session_id=72e8d55d-8124-4364-874f-4b8eb2e29b5e, session_timestamp=2019-11-01T00:09:11.562Z}
[INFO ] 2019-11-01T00:09:11,688Z [Mock network] flow.[14e240e6-9e6d-4f17-95f9-d373216fbea0].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=1115404184916131101). {}
[INFO ] 2019-11-01T00:09:11,719Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=1115404184916131101). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=1aadb914-f612-454c-ac9d-bff3cfb867bd, invocation_timestamp=2019-11-01T00:09:11.718Z, session_id=1aadb914-f612-454c-ac9d-bff3cfb867bd, session_timestamp=2019-11-01T00:09:11.718Z}
[INFO ] 2019-11-01T00:09:11,872Z [Mock network] flow.[318598ee-a4b0-42f1-9aa4-790d73ef4840].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=8361067561018259751). {}
[INFO ] 2019-11-01T00:09:11,918Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=8361067561018259751). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=5a81e68e-b14d-40b4-8d0a-1df29baec8b0, invocation_timestamp=2019-11-01T00:09:11.918Z, session_id=5a81e68e-b14d-40b4-8d0a-1df29baec8b0, session_timestamp=2019-11-01T00:09:11.918Z}
[INFO ] 2019-11-01T00:09:11,927Z [Mock network] flow.[bb1a7deb-b73f-4f97-a62f-8686c5a7ec39].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:11,969Z [Mock network] flow.[bb1a7deb-b73f-4f97-a62f-8686c5a7ec39].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:12,021Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:09:12,039Z [Mock network] flow.[4cc42ef9-67f8-48b6-81d0-3c6d99f32abf].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=1006846810672486601). {}
[INFO ] 2019-11-01T00:09:12,051Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=1006846810672486601). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=a77048be-2d70-4b4e-a528-4c1d5910749d, invocation_timestamp=2019-11-01T00:09:12.050Z, session_id=a77048be-2d70-4b4e-a528-4c1d5910749d, session_timestamp=2019-11-01T00:09:12.050Z}
[INFO ] 2019-11-01T00:09:12,097Z [Mock network] flow.[29808f54-1c00-4d98-9c1d-c7c02c8549c7].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:12,173Z [Mock network] flow.[29808f54-1c00-4d98-9c1d-c7c02c8549c7].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:12,226Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.qn7265.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:09:12,289Z [Mock network] flow.[4cc42ef9-67f8-48b6-81d0-3c6d99f32abf].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:12,322Z [Mock network] flow.[4cc42ef9-67f8-48b6-81d0-3c6d99f32abf].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:12,328Z [Mock network] flow.[4cc42ef9-67f8-48b6-81d0-3c6d99f32abf].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:12,416Z [Mock network] flow.[4cc42ef9-67f8-48b6-81d0-3c6d99f32abf].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:12,511Z [Mock network] flow.[29808f54-1c00-4d98-9c1d-c7c02c8549c7].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-2869855686802750013). {}
[INFO ] 2019-11-01T00:09:12,530Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-2869855686802750013). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=604fcae1-450c-43c2-9b32-5a17209566d5, invocation_timestamp=2019-11-01T00:09:12.529Z, session_id=604fcae1-450c-43c2-9b32-5a17209566d5, session_timestamp=2019-11-01T00:09:12.529Z}
[INFO ] 2019-11-01T00:09:12,546Z [Mock network] flow.[d6fd35d7-e9a6-4e4d-8bd5-ee68cdd9e3c6].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:12,621Z [Mock network] flow.[d6fd35d7-e9a6-4e4d-8bd5-ee68cdd9e3c6].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:12,624Z [Mock network] flow.[d6fd35d7-e9a6-4e4d-8bd5-ee68cdd9e3c6].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:12,645Z [Mock network] flow.[d6fd35d7-e9a6-4e4d-8bd5-ee68cdd9e3c6].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:12,838Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:09:12,839Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:09:12,869Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@1a832b4a {}
[INFO ] 2019-11-01T00:09:12,887Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:09:12,888Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:12,889Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:12,990Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:13,004Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:09:13,005Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566953005) {}
[INFO ] 2019-11-01T00:09:13,020Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:13,029Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566953005) {}
[INFO ] 2019-11-01T00:09:13,031Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566953005) {}
[INFO ] 2019-11-01T00:09:13,156Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:09:13,279Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:09:13,375Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:09:13,377Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:09:13,385Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:09:13,389Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:09:13,390Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:13,391Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:13,392Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:13,393Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:09:13,403Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 71ECC3C01F4214937D0385AD71E55EB9C447F90B529B10684D7869A191792A4D, not inserting the second time {}
[INFO ] 2019-11-01T00:09:13,409Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566953005) {}
[INFO ] 2019-11-01T00:09:13,418Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:13,420Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566953005) {}
[INFO ] 2019-11-01T00:09:13,420Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566953005) {}
[INFO ] 2019-11-01T00:09:13,469Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:13,470Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566953005) {}
[INFO ] 2019-11-01T00:09:13,472Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:09:13,473Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:09:13,496Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:09:13,506Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@70a0e477 {}
[INFO ] 2019-11-01T00:09:13,517Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:09:13,519Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:13,520Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:13,643Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:13,658Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:09:13,659Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566953659) {}
[INFO ] 2019-11-01T00:09:13,662Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:13,670Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566953659) {}
[INFO ] 2019-11-01T00:09:13,671Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566953659) {}
[INFO ] 2019-11-01T00:09:13,813Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:09:13,932Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:09:14,011Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:09:14,013Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:09:14,025Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:09:14,027Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:14,028Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:14,029Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:14,031Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:09:14,063Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key D225657E4A0D65BA8367AD6D58FD2209E9E5D567C37B515A8787AA399B8E0688, not inserting the second time {}
[INFO ] 2019-11-01T00:09:14,067Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566953005) {}
[INFO ] 2019-11-01T00:09:14,069Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:14,074Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566953005) {}
[INFO ] 2019-11-01T00:09:14,076Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566953659) {}
[INFO ] 2019-11-01T00:09:14,077Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:14,086Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566953659) {}
[INFO ] 2019-11-01T00:09:14,088Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566953659) {}
[INFO ] 2019-11-01T00:09:14,095Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:14,096Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566953659) {}
[INFO ] 2019-11-01T00:09:14,096Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566953659) {}
[INFO ] 2019-11-01T00:09:14,097Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:14,098Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566953659) {}
[INFO ] 2019-11-01T00:09:14,100Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:09:14,101Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:09:14,113Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:09:14,118Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@4e80ad21 {}
[INFO ] 2019-11-01T00:09:14,124Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:09:14,125Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:14,127Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:14,222Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:14,231Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:09:14,238Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566954238) {}
[INFO ] 2019-11-01T00:09:14,241Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:14,246Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566954238) {}
[INFO ] 2019-11-01T00:09:14,247Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566954238) {}
[INFO ] 2019-11-01T00:09:14,388Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:09:14,504Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:09:14,594Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:09:14,595Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:09:14,606Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:09:14,607Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:14,607Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:14,608Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:14,609Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:09:14,638Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key B5CE21593D1160AB20678A27B7CF3D267B8BAA73C2B40B1D5857D302FE6BDDB8, not inserting the second time {}
[INFO ] 2019-11-01T00:09:14,642Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566953005) {}
[INFO ] 2019-11-01T00:09:14,643Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:14,653Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566953005) {}
[INFO ] 2019-11-01T00:09:14,654Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566954238) {}
[INFO ] 2019-11-01T00:09:14,657Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:14,663Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566954238) {}
[INFO ] 2019-11-01T00:09:14,664Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566953659) {}
[INFO ] 2019-11-01T00:09:14,666Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:14,676Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566953659) {}
[INFO ] 2019-11-01T00:09:14,677Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566954238) {}
[INFO ] 2019-11-01T00:09:14,679Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:14,684Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566954238) {}
[INFO ] 2019-11-01T00:09:14,685Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566954238) {}
[INFO ] 2019-11-01T00:09:14,690Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:14,691Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566954238) {}
[INFO ] 2019-11-01T00:09:14,691Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566954238) {}
[INFO ] 2019-11-01T00:09:14,692Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:14,692Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566954238) {}
[INFO ] 2019-11-01T00:09:14,695Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:09:14,696Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:09:14,723Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:09:14,731Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@561d03c7 {}
[INFO ] 2019-11-01T00:09:14,741Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:09:14,742Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:14,743Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:14,825Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:14,832Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:09:14,833Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566954833) {}
[INFO ] 2019-11-01T00:09:14,840Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:14,844Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566954833) {}
[INFO ] 2019-11-01T00:09:14,844Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566954833) {}
[INFO ] 2019-11-01T00:09:14,988Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:09:15,124Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:09:15,216Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:09:15,217Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:09:15,229Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:09:15,231Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:15,231Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:15,232Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:15,233Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:09:15,266Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key FFEE274F659896E7168B9EE747E7FECD8201FBC6B5EFF3FB5C4411FC4C0043F7, not inserting the second time {}
[INFO ] 2019-11-01T00:09:15,271Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566953005) {}
[INFO ] 2019-11-01T00:09:15,273Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:15,278Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566953005) {}
[INFO ] 2019-11-01T00:09:15,279Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566954833) {}
[INFO ] 2019-11-01T00:09:15,280Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:15,285Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566954833) {}
[INFO ] 2019-11-01T00:09:15,286Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566953659) {}
[INFO ] 2019-11-01T00:09:15,287Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:15,292Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566953659) {}
[INFO ] 2019-11-01T00:09:15,292Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566954833) {}
[INFO ] 2019-11-01T00:09:15,294Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:15,298Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566954833) {}
[INFO ] 2019-11-01T00:09:15,299Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566954238) {}
[INFO ] 2019-11-01T00:09:15,300Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:15,305Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566954238) {}
[INFO ] 2019-11-01T00:09:15,306Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566954833) {}
[INFO ] 2019-11-01T00:09:15,307Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:15,312Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566954833) {}
[INFO ] 2019-11-01T00:09:15,313Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566954833) {}
[INFO ] 2019-11-01T00:09:15,315Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:15,316Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566954833) {}
[INFO ] 2019-11-01T00:09:15,317Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566954833) {}
[INFO ] 2019-11-01T00:09:15,318Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:15,319Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566954833) {}
[INFO ] 2019-11-01T00:09:15,321Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:09:15,322Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:09:15,333Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:09:15,345Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@11a6fc44 {}
[INFO ] 2019-11-01T00:09:15,357Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:09:15,358Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:15,359Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:15,468Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:15,476Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:09:15,477Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566955477) {}
[INFO ] 2019-11-01T00:09:15,482Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:15,484Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566955477) {}
[INFO ] 2019-11-01T00:09:15,495Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566955477) {}
[INFO ] 2019-11-01T00:09:15,613Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:09:15,731Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:09:15,820Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:09:15,821Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:09:15,831Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:09:15,832Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:15,833Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:15,833Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:15,834Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:09:15,875Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key E9CA32506091683947562796FDDB8DF30D51C6A8D4575FA99EB4EE58789E6176, not inserting the second time {}
[INFO ] 2019-11-01T00:09:15,880Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566953005) {}
[INFO ] 2019-11-01T00:09:15,882Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:15,896Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566953005) {}
[INFO ] 2019-11-01T00:09:15,902Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566955477) {}
[INFO ] 2019-11-01T00:09:15,905Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:15,914Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566955477) {}
[INFO ] 2019-11-01T00:09:15,918Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566953659) {}
[INFO ] 2019-11-01T00:09:15,919Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:15,923Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566953659) {}
[INFO ] 2019-11-01T00:09:15,928Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566955477) {}
[INFO ] 2019-11-01T00:09:15,930Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:15,940Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566955477) {}
[INFO ] 2019-11-01T00:09:15,941Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566954238) {}
[INFO ] 2019-11-01T00:09:15,942Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:15,947Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566954238) {}
[INFO ] 2019-11-01T00:09:15,948Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566955477) {}
[INFO ] 2019-11-01T00:09:15,950Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:15,956Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566955477) {}
[INFO ] 2019-11-01T00:09:15,957Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566954833) {}
[INFO ] 2019-11-01T00:09:15,958Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:15,963Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566954833) {}
[INFO ] 2019-11-01T00:09:15,963Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566955477) {}
[INFO ] 2019-11-01T00:09:15,965Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:15,969Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566955477) {}
[INFO ] 2019-11-01T00:09:15,971Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566955477) {}
[INFO ] 2019-11-01T00:09:15,974Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:15,974Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566955477) {}
[INFO ] 2019-11-01T00:09:15,975Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566955477) {}
[INFO ] 2019-11-01T00:09:15,976Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:15,977Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566955477) {}
[INFO ] 2019-11-01T00:09:15,978Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:15,979Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:15,979Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:15,980Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:15,981Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:15,981Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:15,982Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:15,983Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:16,041Z [Mock network] flow.[d66af834-d715-4fa8-8937-96da4406ce34].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-8710331786708958813). {}
[INFO ] 2019-11-01T00:09:16,107Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-8710331786708958813). {invocation_id=1c6ea1bd-c161-473b-9716-fb6126450457, invocation_timestamp=2019-11-01T00:09:16.105Z, session_id=1c6ea1bd-c161-473b-9716-fb6126450457, session_timestamp=2019-11-01T00:09:16.105Z}
[INFO ] 2019-11-01T00:09:16,267Z [Mock network] flow.[d66af834-d715-4fa8-8937-96da4406ce34].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=7227684255292679101). {}
[INFO ] 2019-11-01T00:09:16,286Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=7227684255292679101). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=d139d5c9-89d0-46d8-adbf-abfd8e5c757b, invocation_timestamp=2019-11-01T00:09:16.285Z, session_id=d139d5c9-89d0-46d8-adbf-abfd8e5c757b, session_timestamp=2019-11-01T00:09:16.285Z}
[INFO ] 2019-11-01T00:09:16,358Z [Mock network] flow.[d66af834-d715-4fa8-8937-96da4406ce34].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-2699180839491830804). {}
[INFO ] 2019-11-01T00:09:16,381Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-2699180839491830804). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=85fa5cec-c325-4515-b25d-ab3af2d81bba, invocation_timestamp=2019-11-01T00:09:16.380Z, session_id=85fa5cec-c325-4515-b25d-ab3af2d81bba, session_timestamp=2019-11-01T00:09:16.380Z}
[INFO ] 2019-11-01T00:09:16,459Z [Mock network] flow.[20f709a4-d915-44e7-a606-eeafc5d91202].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-385998470062847803). {}
[INFO ] 2019-11-01T00:09:16,493Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-385998470062847803). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=79973d59-e9d3-478f-b499-9cbfe2e6cd4d, invocation_timestamp=2019-11-01T00:09:16.492Z, session_id=79973d59-e9d3-478f-b499-9cbfe2e6cd4d, session_timestamp=2019-11-01T00:09:16.492Z}
[INFO ] 2019-11-01T00:09:16,556Z [Mock network] flow.[5d589fa7-9696-47e2-b364-112bcb4e352f].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=-3835993361593430607). {}
[INFO ] 2019-11-01T00:09:16,589Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-3835993361593430607). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=2bb2b566-e052-44ba-b9ff-9e2d2d38441e, invocation_timestamp=2019-11-01T00:09:16.588Z, session_id=2bb2b566-e052-44ba-b9ff-9e2d2d38441e, session_timestamp=2019-11-01T00:09:16.588Z}
[INFO ] 2019-11-01T00:09:16,597Z [Mock network] flow.[18a3174b-23b5-415f-81d6-32528aaed5b9].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:16,653Z [Mock network] flow.[18a3174b-23b5-415f-81d6-32528aaed5b9].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:16,723Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:09:16,754Z [Mock network] flow.[c4372a10-e9d1-4f99-8b87-73399bc3b7de].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-7664040543699929709). {}
[INFO ] 2019-11-01T00:09:16,770Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-7664040543699929709). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=ca80764e-83d5-49aa-9307-77eff7a421a8, invocation_timestamp=2019-11-01T00:09:16.770Z, session_id=ca80764e-83d5-49aa-9307-77eff7a421a8, session_timestamp=2019-11-01T00:09:16.770Z}
[INFO ] 2019-11-01T00:09:16,785Z [Mock network] flow.[610a9ae2-403b-4f21-9a8f-ca704a6eec05].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:16,825Z [Mock network] flow.[610a9ae2-403b-4f21-9a8f-ca704a6eec05].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:16,862Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.qn7265.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:09:16,910Z [Mock network] flow.[c4372a10-e9d1-4f99-8b87-73399bc3b7de].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:16,949Z [Mock network] flow.[c4372a10-e9d1-4f99-8b87-73399bc3b7de].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:16,951Z [Mock network] flow.[c4372a10-e9d1-4f99-8b87-73399bc3b7de].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:16,992Z [Mock network] flow.[c4372a10-e9d1-4f99-8b87-73399bc3b7de].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:17,074Z [Mock network] flow.[610a9ae2-403b-4f21-9a8f-ca704a6eec05].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=965910522578280194). {}
[INFO ] 2019-11-01T00:09:17,088Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=965910522578280194). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=fcc1bbf3-99ee-423a-ad48-fe3677e180b6, invocation_timestamp=2019-11-01T00:09:17.087Z, session_id=fcc1bbf3-99ee-423a-ad48-fe3677e180b6, session_timestamp=2019-11-01T00:09:17.087Z}
[INFO ] 2019-11-01T00:09:17,110Z [Mock network] flow.[891498c5-ecd1-4802-a7d7-81b375e34e23].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:17,175Z [Mock network] flow.[891498c5-ecd1-4802-a7d7-81b375e34e23].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:17,177Z [Mock network] flow.[891498c5-ecd1-4802-a7d7-81b375e34e23].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:17,207Z [Mock network] flow.[891498c5-ecd1-4802-a7d7-81b375e34e23].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:17,369Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:09:17,370Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:09:17,375Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@4a95ba60 {}
[INFO ] 2019-11-01T00:09:17,384Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:09:17,385Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:17,386Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:17,498Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:17,537Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:09:17,538Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566957538) {}
[INFO ] 2019-11-01T00:09:17,541Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:17,546Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566957538) {}
[INFO ] 2019-11-01T00:09:17,547Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566957538) {}
[INFO ] 2019-11-01T00:09:17,665Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:09:17,779Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:09:17,869Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:09:17,871Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:09:17,878Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:09:17,883Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:09:17,883Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:17,884Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:17,885Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:17,885Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:09:17,894Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 64DCECC9CAEEAEF06F30891280E37BD87ADDC45F31A1252A147F9387469166C2, not inserting the second time {}
[INFO ] 2019-11-01T00:09:17,900Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566957538) {}
[INFO ] 2019-11-01T00:09:17,903Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:17,909Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566957538) {}
[INFO ] 2019-11-01T00:09:17,910Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566957538) {}
[INFO ] 2019-11-01T00:09:17,910Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:17,911Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566957538) {}
[INFO ] 2019-11-01T00:09:17,913Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:09:17,913Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:09:17,923Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:09:17,929Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@74fe38ff {}
[INFO ] 2019-11-01T00:09:17,939Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:09:17,940Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:17,941Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:18,010Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:18,016Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:09:18,017Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566958017) {}
[INFO ] 2019-11-01T00:09:18,020Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:18,023Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566958017) {}
[INFO ] 2019-11-01T00:09:18,024Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566958017) {}
[INFO ] 2019-11-01T00:09:18,162Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:09:18,312Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:09:18,400Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:09:18,401Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:09:18,411Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:09:18,412Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:18,413Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:18,413Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:18,414Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:09:18,423Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key FDC3C365D5BD342A7DCE11E6AC2ECC92EAFB0229A160FD5E07F926C63AD52AE2, not inserting the second time {}
[INFO ] 2019-11-01T00:09:18,427Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566957538) {}
[INFO ] 2019-11-01T00:09:18,428Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:18,438Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566957538) {}
[INFO ] 2019-11-01T00:09:18,443Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566958017) {}
[INFO ] 2019-11-01T00:09:18,445Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:18,453Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566958017) {}
[INFO ] 2019-11-01T00:09:18,456Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566958017) {}
[INFO ] 2019-11-01T00:09:18,460Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:18,461Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566958017) {}
[INFO ] 2019-11-01T00:09:18,462Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566958017) {}
[INFO ] 2019-11-01T00:09:18,463Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:18,463Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566958017) {}
[INFO ] 2019-11-01T00:09:18,466Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:09:18,467Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:09:18,488Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:09:18,496Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@5551d8c5 {}
[INFO ] 2019-11-01T00:09:18,508Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:09:18,509Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:18,510Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:18,622Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:18,633Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:09:18,637Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566958637) {}
[INFO ] 2019-11-01T00:09:18,641Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:18,645Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566958637) {}
[INFO ] 2019-11-01T00:09:18,646Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566958637) {}
[INFO ] 2019-11-01T00:09:18,782Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:09:18,911Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:09:19,001Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:09:19,002Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:09:19,013Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:09:19,014Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:19,015Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:19,015Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:19,016Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:09:19,025Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key D45CFB27EAD3A10E1B039B61D71F5CAFFA9AB2E90FB95E7DC99B97F12A7EDAFF, not inserting the second time {}
[INFO ] 2019-11-01T00:09:19,030Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566957538) {}
[INFO ] 2019-11-01T00:09:19,032Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:19,041Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566957538) {}
[INFO ] 2019-11-01T00:09:19,042Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566958637) {}
[INFO ] 2019-11-01T00:09:19,043Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:19,050Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566958637) {}
[INFO ] 2019-11-01T00:09:19,051Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566958017) {}
[INFO ] 2019-11-01T00:09:19,052Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:19,055Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566958017) {}
[INFO ] 2019-11-01T00:09:19,056Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566958637) {}
[INFO ] 2019-11-01T00:09:19,057Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:19,061Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566958637) {}
[INFO ] 2019-11-01T00:09:19,062Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566958637) {}
[INFO ] 2019-11-01T00:09:19,064Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:19,064Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566958637) {}
[INFO ] 2019-11-01T00:09:19,065Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566958637) {}
[INFO ] 2019-11-01T00:09:19,066Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:19,066Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566958637) {}
[INFO ] 2019-11-01T00:09:19,068Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:09:19,069Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:09:19,119Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:09:19,125Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@65278783 {}
[INFO ] 2019-11-01T00:09:19,132Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:09:19,133Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:19,134Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:19,187Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:19,193Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:09:19,193Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566959193) {}
[INFO ] 2019-11-01T00:09:19,196Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:19,198Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566959193) {}
[INFO ] 2019-11-01T00:09:19,199Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566959193) {}
[INFO ] 2019-11-01T00:09:19,338Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:09:19,470Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:09:19,561Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:09:19,569Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:09:19,584Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:09:19,586Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:19,586Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:19,587Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:19,588Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:09:19,598Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 67CA987156C1B55553C0A912961BD98D80C20DA5FE0B2C69AC4F10A52E668625, not inserting the second time {}
[INFO ] 2019-11-01T00:09:19,603Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566957538) {}
[INFO ] 2019-11-01T00:09:19,606Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:19,610Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566957538) {}
[INFO ] 2019-11-01T00:09:19,611Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566959193) {}
[INFO ] 2019-11-01T00:09:19,613Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:19,617Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566959193) {}
[INFO ] 2019-11-01T00:09:19,618Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566958017) {}
[INFO ] 2019-11-01T00:09:19,619Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:19,623Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566958017) {}
[INFO ] 2019-11-01T00:09:19,624Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566959193) {}
[INFO ] 2019-11-01T00:09:19,625Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:19,628Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566959193) {}
[INFO ] 2019-11-01T00:09:19,629Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566958637) {}
[INFO ] 2019-11-01T00:09:19,630Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:19,633Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566958637) {}
[INFO ] 2019-11-01T00:09:19,634Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566959193) {}
[INFO ] 2019-11-01T00:09:19,635Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:19,638Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566959193) {}
[INFO ] 2019-11-01T00:09:19,639Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566959193) {}
[INFO ] 2019-11-01T00:09:19,641Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:19,641Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566959193) {}
[INFO ] 2019-11-01T00:09:19,642Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566959193) {}
[INFO ] 2019-11-01T00:09:19,642Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:19,643Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566959193) {}
[INFO ] 2019-11-01T00:09:19,645Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:09:19,645Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:09:19,655Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:09:19,660Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@40254eff {}
[INFO ] 2019-11-01T00:09:19,667Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:09:19,668Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:19,669Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:19,740Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:19,746Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:09:19,746Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566959746) {}
[INFO ] 2019-11-01T00:09:19,749Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:19,751Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566959746) {}
[INFO ] 2019-11-01T00:09:19,752Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566959746) {}
[INFO ] 2019-11-01T00:09:19,933Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:09:20,048Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:09:20,138Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:09:20,140Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:09:20,149Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:09:20,150Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:20,151Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:20,152Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:20,152Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:09:20,162Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 00B857694FCB0B92ED2DB1B4BA07C4E49B1C01CBA40D724B1EE95179575777E3, not inserting the second time {}
[INFO ] 2019-11-01T00:09:20,169Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566957538) {}
[INFO ] 2019-11-01T00:09:20,171Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:20,180Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566957538) {}
[INFO ] 2019-11-01T00:09:20,186Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566959746) {}
[INFO ] 2019-11-01T00:09:20,187Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:20,191Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566959746) {}
[INFO ] 2019-11-01T00:09:20,192Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566958017) {}
[INFO ] 2019-11-01T00:09:20,193Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:20,203Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566958017) {}
[INFO ] 2019-11-01T00:09:20,203Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566959746) {}
[INFO ] 2019-11-01T00:09:20,205Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:20,218Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566959746) {}
[INFO ] 2019-11-01T00:09:20,219Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566958637) {}
[INFO ] 2019-11-01T00:09:20,228Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:20,232Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566958637) {}
[INFO ] 2019-11-01T00:09:20,233Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566959746) {}
[INFO ] 2019-11-01T00:09:20,237Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:20,241Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566959746) {}
[INFO ] 2019-11-01T00:09:20,243Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566959193) {}
[INFO ] 2019-11-01T00:09:20,244Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:20,248Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566959193) {}
[INFO ] 2019-11-01T00:09:20,248Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566959746) {}
[INFO ] 2019-11-01T00:09:20,249Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:20,253Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566959746) {}
[INFO ] 2019-11-01T00:09:20,254Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566959746) {}
[INFO ] 2019-11-01T00:09:20,256Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:20,257Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566959746) {}
[INFO ] 2019-11-01T00:09:20,258Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566959746) {}
[INFO ] 2019-11-01T00:09:20,260Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:20,261Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566959746) {}
[INFO ] 2019-11-01T00:09:20,262Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:20,262Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:20,263Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:20,263Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:20,264Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:20,265Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:20,265Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:20,266Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:20,317Z [Mock network] flow.[87d563cd-b340-4379-bca2-929b49d48e9f].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-5703589146102392618). {}
[INFO ] 2019-11-01T00:09:20,378Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-5703589146102392618). {invocation_id=e3e250be-49ca-419e-b97b-c501310f37ee, invocation_timestamp=2019-11-01T00:09:20.377Z, session_id=e3e250be-49ca-419e-b97b-c501310f37ee, session_timestamp=2019-11-01T00:09:20.377Z}
[INFO ] 2019-11-01T00:09:20,521Z [Mock network] flow.[87d563cd-b340-4379-bca2-929b49d48e9f].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=670408615883226677). {}
[INFO ] 2019-11-01T00:09:20,541Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=670408615883226677). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=debfd8dd-c5fd-44c4-9bf1-ebcf1b9e00a1, invocation_timestamp=2019-11-01T00:09:20.532Z, session_id=debfd8dd-c5fd-44c4-9bf1-ebcf1b9e00a1, session_timestamp=2019-11-01T00:09:20.532Z}
[INFO ] 2019-11-01T00:09:20,577Z [Mock network] flow.[87d563cd-b340-4379-bca2-929b49d48e9f].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-2410925670045546583). {}
[INFO ] 2019-11-01T00:09:20,596Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-2410925670045546583). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=c1dde5d1-2322-44e8-9387-00d9167cc061, invocation_timestamp=2019-11-01T00:09:20.595Z, session_id=c1dde5d1-2322-44e8-9387-00d9167cc061, session_timestamp=2019-11-01T00:09:20.595Z}
[INFO ] 2019-11-01T00:09:20,671Z [Mock network] flow.[cd1828d9-123d-4875-9284-c29d20aff335].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=8630048569712164465). {}
[INFO ] 2019-11-01T00:09:20,701Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=8630048569712164465). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=89192540-03c8-426e-8831-08963ddb65c6, invocation_timestamp=2019-11-01T00:09:20.699Z, session_id=89192540-03c8-426e-8831-08963ddb65c6, session_timestamp=2019-11-01T00:09:20.699Z}
[INFO ] 2019-11-01T00:09:20,767Z [Mock network] flow.[2a4df0e6-ade9-4595-a640-925265e53e63].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=1324172096155769856). {}
[INFO ] 2019-11-01T00:09:20,797Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=1324172096155769856). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=19194562-1dc3-4d68-8c29-0e33ccaa4cea, invocation_timestamp=2019-11-01T00:09:20.796Z, session_id=19194562-1dc3-4d68-8c29-0e33ccaa4cea, session_timestamp=2019-11-01T00:09:20.796Z}
[INFO ] 2019-11-01T00:09:20,806Z [Mock network] flow.[55de7443-199e-4eea-a9ef-9331aa8abbd8].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:20,877Z [Mock network] flow.[55de7443-199e-4eea-a9ef-9331aa8abbd8].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:20,924Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:09:20,941Z [Mock network] flow.[21f86fcd-871b-4c40-aaca-a9f990143161].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=189019824817700485). {}
[INFO ] 2019-11-01T00:09:20,955Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=189019824817700485). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=87b33bbf-f3ed-4f72-8b54-263ae1836c9c, invocation_timestamp=2019-11-01T00:09:20.955Z, session_id=87b33bbf-f3ed-4f72-8b54-263ae1836c9c, session_timestamp=2019-11-01T00:09:20.955Z}
[INFO ] 2019-11-01T00:09:20,963Z [Mock network] flow.[01d13b4e-b3da-4a84-978a-65e655f8eb12].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:21,000Z [Mock network] flow.[01d13b4e-b3da-4a84-978a-65e655f8eb12].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:21,036Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.qn7265.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:09:21,082Z [Mock network] flow.[21f86fcd-871b-4c40-aaca-a9f990143161].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:21,160Z [Mock network] flow.[21f86fcd-871b-4c40-aaca-a9f990143161].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:21,161Z [Mock network] flow.[21f86fcd-871b-4c40-aaca-a9f990143161].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:21,189Z [Mock network] flow.[21f86fcd-871b-4c40-aaca-a9f990143161].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:21,266Z [Mock network] flow.[01d13b4e-b3da-4a84-978a-65e655f8eb12].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=3446173057441089283). {}
[INFO ] 2019-11-01T00:09:21,291Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=3446173057441089283). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=6b0b94f5-db4f-4d9e-9c88-51e4a9c10522, invocation_timestamp=2019-11-01T00:09:21.290Z, session_id=6b0b94f5-db4f-4d9e-9c88-51e4a9c10522, session_timestamp=2019-11-01T00:09:21.290Z}
[INFO ] 2019-11-01T00:09:21,304Z [Mock network] flow.[acf6b1c1-d84a-41ad-82c8-69f51db2a2c3].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:21,339Z [Mock network] flow.[acf6b1c1-d84a-41ad-82c8-69f51db2a2c3].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:21,340Z [Mock network] flow.[acf6b1c1-d84a-41ad-82c8-69f51db2a2c3].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:21,400Z [Mock network] flow.[acf6b1c1-d84a-41ad-82c8-69f51db2a2c3].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:21,524Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:09:21,525Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:09:21,529Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@334a0103 {}
[INFO ] 2019-11-01T00:09:21,536Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:09:21,537Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:21,538Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:21,600Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:21,606Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:09:21,606Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566961606) {}
[INFO ] 2019-11-01T00:09:21,611Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:21,616Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566961606) {}
[INFO ] 2019-11-01T00:09:21,617Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566961606) {}
[INFO ] 2019-11-01T00:09:22,354Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:09:22,469Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:09:22,559Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:09:22,560Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:09:22,568Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:09:22,571Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:09:22,572Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:22,572Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:22,573Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:22,574Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:09:22,583Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 162D7958631BA26E445E9AEB347FE76F874F59F509C81D9B07EA709E5C53F62C, not inserting the second time {}
[INFO ] 2019-11-01T00:09:22,587Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566961606) {}
[INFO ] 2019-11-01T00:09:22,591Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:22,592Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566961606) {}
[INFO ] 2019-11-01T00:09:22,593Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566961606) {}
[INFO ] 2019-11-01T00:09:22,593Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:22,594Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566961606) {}
[INFO ] 2019-11-01T00:09:22,596Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:09:22,597Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:09:22,608Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:09:22,613Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@16b01f36 {}
[INFO ] 2019-11-01T00:09:22,626Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:09:22,627Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:22,628Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:22,716Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:22,723Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:09:22,724Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566962724) {}
[INFO ] 2019-11-01T00:09:22,727Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:22,729Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566962724) {}
[INFO ] 2019-11-01T00:09:22,729Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566962724) {}
[INFO ] 2019-11-01T00:09:22,844Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:09:22,954Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:09:23,093Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:09:23,094Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:09:23,113Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:09:23,115Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:23,116Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:23,117Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:23,118Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:09:23,129Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key E5A445E560203F9E59B6AF494E2777D3A4E5A5E691F467D1ED1A817C0E712FB7, not inserting the second time {}
[INFO ] 2019-11-01T00:09:23,132Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566961606) {}
[INFO ] 2019-11-01T00:09:23,133Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:23,139Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566961606) {}
[INFO ] 2019-11-01T00:09:23,141Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566962724) {}
[INFO ] 2019-11-01T00:09:23,143Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:23,147Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566962724) {}
[INFO ] 2019-11-01T00:09:23,148Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566962724) {}
[INFO ] 2019-11-01T00:09:23,150Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:23,151Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566962724) {}
[INFO ] 2019-11-01T00:09:23,151Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566962724) {}
[INFO ] 2019-11-01T00:09:23,152Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:23,152Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566962724) {}
[INFO ] 2019-11-01T00:09:23,155Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:09:23,155Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:09:23,165Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:09:23,171Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@26d5a26e {}
[INFO ] 2019-11-01T00:09:23,176Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:09:23,177Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:23,178Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:23,233Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:23,239Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:09:23,239Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566963239) {}
[INFO ] 2019-11-01T00:09:23,242Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:23,244Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566963239) {}
[INFO ] 2019-11-01T00:09:23,245Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566963239) {}
[INFO ] 2019-11-01T00:09:23,382Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:09:23,497Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:09:23,585Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:09:23,587Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:09:23,599Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:09:23,600Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:23,600Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:23,601Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:23,602Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:09:23,612Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key D9A5C80A69D5D86BE8825F39FE86FAEAB46CDF064322AFC0F7C9015C8A267C7B, not inserting the second time {}
[INFO ] 2019-11-01T00:09:23,617Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566961606) {}
[INFO ] 2019-11-01T00:09:23,618Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:23,625Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566961606) {}
[INFO ] 2019-11-01T00:09:23,626Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566963239) {}
[INFO ] 2019-11-01T00:09:23,627Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:23,630Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566963239) {}
[INFO ] 2019-11-01T00:09:23,631Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566962724) {}
[INFO ] 2019-11-01T00:09:23,632Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:23,635Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566962724) {}
[INFO ] 2019-11-01T00:09:23,636Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566963239) {}
[INFO ] 2019-11-01T00:09:23,637Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:23,641Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566963239) {}
[INFO ] 2019-11-01T00:09:23,641Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566963239) {}
[INFO ] 2019-11-01T00:09:23,643Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:23,644Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566963239) {}
[INFO ] 2019-11-01T00:09:23,644Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566963239) {}
[INFO ] 2019-11-01T00:09:23,645Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:23,645Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566963239) {}
[INFO ] 2019-11-01T00:09:23,648Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:09:23,648Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:09:23,658Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:09:23,663Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@539b8a19 {}
[INFO ] 2019-11-01T00:09:23,672Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:09:23,673Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:23,674Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:23,778Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:23,783Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:09:23,784Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566963784) {}
[INFO ] 2019-11-01T00:09:23,787Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:23,789Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566963784) {}
[INFO ] 2019-11-01T00:09:23,789Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566963784) {}
[INFO ] 2019-11-01T00:09:23,919Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:09:24,034Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:09:24,122Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:09:24,124Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:09:24,134Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:09:24,135Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:24,135Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:24,136Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:24,136Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:09:24,146Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 508B53108A652AB5BE8834355E28F6FB991BFBB244E8D0DE5196F0EBEBF28BF8, not inserting the second time {}
[INFO ] 2019-11-01T00:09:24,150Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566961606) {}
[INFO ] 2019-11-01T00:09:24,151Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:24,155Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566961606) {}
[INFO ] 2019-11-01T00:09:24,156Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566963784) {}
[INFO ] 2019-11-01T00:09:24,157Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:24,160Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566963784) {}
[INFO ] 2019-11-01T00:09:24,161Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566962724) {}
[INFO ] 2019-11-01T00:09:24,162Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:24,165Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566962724) {}
[INFO ] 2019-11-01T00:09:24,166Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566963784) {}
[INFO ] 2019-11-01T00:09:24,167Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:24,170Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566963784) {}
[INFO ] 2019-11-01T00:09:24,171Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566963239) {}
[INFO ] 2019-11-01T00:09:24,172Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:24,175Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566963239) {}
[INFO ] 2019-11-01T00:09:24,175Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566963784) {}
[INFO ] 2019-11-01T00:09:24,176Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:24,180Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566963784) {}
[INFO ] 2019-11-01T00:09:24,181Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566963784) {}
[INFO ] 2019-11-01T00:09:24,183Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:24,183Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566963784) {}
[INFO ] 2019-11-01T00:09:24,184Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566963784) {}
[INFO ] 2019-11-01T00:09:24,184Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:24,185Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566963784) {}
[INFO ] 2019-11-01T00:09:24,187Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:09:24,187Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:09:24,196Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:09:24,201Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@4c9c6472 {}
[INFO ] 2019-11-01T00:09:24,208Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:09:24,209Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:24,210Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:24,270Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:24,276Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:09:24,277Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566964277) {}
[INFO ] 2019-11-01T00:09:24,280Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:24,282Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566964277) {}
[INFO ] 2019-11-01T00:09:24,283Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566964277) {}
[INFO ] 2019-11-01T00:09:24,450Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:09:24,567Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:09:24,655Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:09:24,656Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:09:24,666Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:09:24,667Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:24,668Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:24,669Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:24,669Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:09:24,678Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 4441CAFA1F5D1B985EB62F2DCCD66A52C84358EC06C14F9AAB19DB99F7E3B468, not inserting the second time {}
[INFO ] 2019-11-01T00:09:24,682Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566961606) {}
[INFO ] 2019-11-01T00:09:24,684Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:24,688Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566961606) {}
[INFO ] 2019-11-01T00:09:24,692Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566964277) {}
[INFO ] 2019-11-01T00:09:24,694Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:24,700Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566964277) {}
[INFO ] 2019-11-01T00:09:24,704Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566962724) {}
[INFO ] 2019-11-01T00:09:24,707Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:24,714Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566962724) {}
[INFO ] 2019-11-01T00:09:24,716Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566964277) {}
[INFO ] 2019-11-01T00:09:24,723Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:24,728Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566964277) {}
[INFO ] 2019-11-01T00:09:24,728Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566963239) {}
[INFO ] 2019-11-01T00:09:24,729Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:24,733Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566963239) {}
[INFO ] 2019-11-01T00:09:24,734Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566964277) {}
[INFO ] 2019-11-01T00:09:24,735Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:24,738Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566964277) {}
[INFO ] 2019-11-01T00:09:24,739Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566963784) {}
[INFO ] 2019-11-01T00:09:24,739Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:24,743Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566963784) {}
[INFO ] 2019-11-01T00:09:24,744Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566964277) {}
[INFO ] 2019-11-01T00:09:24,745Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:24,748Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566964277) {}
[INFO ] 2019-11-01T00:09:24,749Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566964277) {}
[INFO ] 2019-11-01T00:09:24,751Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:24,751Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566964277) {}
[INFO ] 2019-11-01T00:09:24,752Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566964277) {}
[INFO ] 2019-11-01T00:09:24,752Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:24,753Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566964277) {}
[INFO ] 2019-11-01T00:09:24,754Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:24,754Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:24,755Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:24,755Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:24,756Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:24,756Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:24,757Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:24,757Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:24,813Z [Mock network] flow.[ca500273-437a-4143-aff0-c89ef4cc13ac].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=1299978899183158375). {}
[INFO ] 2019-11-01T00:09:24,868Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=1299978899183158375). {invocation_id=4895dadc-eddd-431c-af82-57027a2bec14, invocation_timestamp=2019-11-01T00:09:24.863Z, session_id=4895dadc-eddd-431c-af82-57027a2bec14, session_timestamp=2019-11-01T00:09:24.863Z}
[INFO ] 2019-11-01T00:09:25,012Z [Mock network] flow.[ca500273-437a-4143-aff0-c89ef4cc13ac].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-5794572412887347806). {}
[INFO ] 2019-11-01T00:09:25,022Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-5794572412887347806). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=7f9bb81f-9a73-4c1c-a4e2-6804bb60f271, invocation_timestamp=2019-11-01T00:09:25.021Z, session_id=7f9bb81f-9a73-4c1c-a4e2-6804bb60f271, session_timestamp=2019-11-01T00:09:25.021Z}
[INFO ] 2019-11-01T00:09:25,062Z [Mock network] flow.[ca500273-437a-4143-aff0-c89ef4cc13ac].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-8472488258138606046). {}
[INFO ] 2019-11-01T00:09:25,088Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-8472488258138606046). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=310fa65e-3482-4c68-94e9-c37d7d6467a7, invocation_timestamp=2019-11-01T00:09:25.087Z, session_id=310fa65e-3482-4c68-94e9-c37d7d6467a7, session_timestamp=2019-11-01T00:09:25.087Z}
[INFO ] 2019-11-01T00:09:25,166Z [Mock network] flow.[331f97bb-4ed0-4ec0-9cab-cb065a1b28e5].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=3845474472323593600). {}
[INFO ] 2019-11-01T00:09:25,207Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=3845474472323593600). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=3441e141-8a4b-4ed3-af44-966dc09001f2, invocation_timestamp=2019-11-01T00:09:25.205Z, session_id=3441e141-8a4b-4ed3-af44-966dc09001f2, session_timestamp=2019-11-01T00:09:25.205Z}
[INFO ] 2019-11-01T00:09:25,270Z [Mock network] flow.[d696b310-77bd-423d-bdc1-a72b1c28b325].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=-8170420262708870637). {}
[INFO ] 2019-11-01T00:09:25,343Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-8170420262708870637). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=1bfc11e6-dfa9-44e6-aeb4-dcbdb8518207, invocation_timestamp=2019-11-01T00:09:25.342Z, session_id=1bfc11e6-dfa9-44e6-aeb4-dcbdb8518207, session_timestamp=2019-11-01T00:09:25.342Z}
[INFO ] 2019-11-01T00:09:25,365Z [Mock network] flow.[b377a350-f83c-4302-ad13-efe13e904159].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:25,428Z [Mock network] flow.[b377a350-f83c-4302-ad13-efe13e904159].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:25,488Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:09:25,518Z [Mock network] flow.[a359530e-ef95-4046-bd54-23f877bfde6b].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-4016360725794607207). {}
[INFO ] 2019-11-01T00:09:25,534Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-4016360725794607207). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=b9bf815f-41f5-4cf0-a480-597bf531b433, invocation_timestamp=2019-11-01T00:09:25.533Z, session_id=b9bf815f-41f5-4cf0-a480-597bf531b433, session_timestamp=2019-11-01T00:09:25.533Z}
[INFO ] 2019-11-01T00:09:25,541Z [Mock network] flow.[bc97abaa-ccdc-4f47-995c-9ccc650a150e].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:25,585Z [Mock network] flow.[bc97abaa-ccdc-4f47-995c-9ccc650a150e].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:25,632Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.qn7265.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:09:25,711Z [Mock network] flow.[a359530e-ef95-4046-bd54-23f877bfde6b].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:25,734Z [Mock network] flow.[a359530e-ef95-4046-bd54-23f877bfde6b].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:25,736Z [Mock network] flow.[a359530e-ef95-4046-bd54-23f877bfde6b].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:25,756Z [Mock network] flow.[a359530e-ef95-4046-bd54-23f877bfde6b].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:25,843Z [Mock network] flow.[bc97abaa-ccdc-4f47-995c-9ccc650a150e].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=2481713558890412663). {}
[INFO ] 2019-11-01T00:09:25,862Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=2481713558890412663). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=ec050435-3cff-4b55-9854-2f5082ee1ac5, invocation_timestamp=2019-11-01T00:09:25.861Z, session_id=ec050435-3cff-4b55-9854-2f5082ee1ac5, session_timestamp=2019-11-01T00:09:25.861Z}
[INFO ] 2019-11-01T00:09:25,874Z [Mock network] flow.[8a9f88dd-4ff2-413e-ac2c-af62028511be].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:25,922Z [Mock network] flow.[8a9f88dd-4ff2-413e-ac2c-af62028511be].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:25,924Z [Mock network] flow.[8a9f88dd-4ff2-413e-ac2c-af62028511be].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:25,972Z [Mock network] flow.[8a9f88dd-4ff2-413e-ac2c-af62028511be].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:26,081Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:09:26,082Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:09:26,087Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@21257cad {}
[INFO ] 2019-11-01T00:09:26,097Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:09:26,097Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:26,098Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:26,184Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:26,189Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:09:26,190Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566966190) {}
[INFO ] 2019-11-01T00:09:26,192Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:26,198Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566966190) {}
[INFO ] 2019-11-01T00:09:26,199Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566966190) {}
[INFO ] 2019-11-01T00:09:26,319Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:09:26,462Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:09:26,552Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:09:26,553Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:09:26,560Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:09:26,563Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:09:26,564Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:26,564Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:26,565Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:26,566Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:09:26,575Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key BCD3E3621BFA09215D7C2D942F514EEBB7062E447FB6F7D89ECE32833B1A6129, not inserting the second time {}
[INFO ] 2019-11-01T00:09:26,579Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566966190) {}
[INFO ] 2019-11-01T00:09:26,581Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:26,581Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566966190) {}
[INFO ] 2019-11-01T00:09:26,582Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566966190) {}
[INFO ] 2019-11-01T00:09:26,582Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:26,583Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566966190) {}
[INFO ] 2019-11-01T00:09:26,590Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:09:26,591Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:09:26,616Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:09:26,622Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@8a2a720 {}
[INFO ] 2019-11-01T00:09:26,641Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:09:26,642Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:26,643Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:26,706Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:26,713Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:09:26,714Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566966714) {}
[INFO ] 2019-11-01T00:09:26,716Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:26,718Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566966714) {}
[INFO ] 2019-11-01T00:09:26,719Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566966714) {}
[INFO ] 2019-11-01T00:09:26,855Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:09:26,966Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:09:27,052Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:09:27,053Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:09:27,064Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:09:27,064Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:27,065Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:27,066Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:27,066Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:09:27,076Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key FC3E17840A36B9416E27B6452F75CE8F937208323B17C60EEEA448B2FBDDEA0E, not inserting the second time {}
[INFO ] 2019-11-01T00:09:27,079Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566966190) {}
[INFO ] 2019-11-01T00:09:27,081Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:27,086Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566966190) {}
[INFO ] 2019-11-01T00:09:27,091Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566966714) {}
[INFO ] 2019-11-01T00:09:27,092Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:27,099Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566966714) {}
[INFO ] 2019-11-01T00:09:27,100Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566966714) {}
[INFO ] 2019-11-01T00:09:27,106Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:27,106Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566966714) {}
[INFO ] 2019-11-01T00:09:27,107Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566966714) {}
[INFO ] 2019-11-01T00:09:27,108Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:27,108Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566966714) {}
[INFO ] 2019-11-01T00:09:27,111Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:09:27,112Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:09:27,123Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:09:27,130Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@286440a7 {}
[INFO ] 2019-11-01T00:09:27,135Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:09:27,136Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:27,136Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:27,217Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:27,222Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:09:27,223Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566967223) {}
[INFO ] 2019-11-01T00:09:27,225Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:27,227Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566967223) {}
[INFO ] 2019-11-01T00:09:27,227Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566967223) {}
[INFO ] 2019-11-01T00:09:27,354Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:09:27,469Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:09:27,552Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:09:27,554Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:09:27,564Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:09:27,565Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:27,567Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:27,568Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:27,568Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:09:27,581Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key C9FFF885DB8F0F4479755064C0B0CBDF1747E9153C5FE3B122BF2D6770739B90, not inserting the second time {}
[INFO ] 2019-11-01T00:09:27,588Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566966190) {}
[INFO ] 2019-11-01T00:09:27,589Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:27,599Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566966190) {}
[INFO ] 2019-11-01T00:09:27,600Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566967223) {}
[INFO ] 2019-11-01T00:09:27,602Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:27,608Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566967223) {}
[INFO ] 2019-11-01T00:09:27,610Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566966714) {}
[INFO ] 2019-11-01T00:09:27,611Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:27,615Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566966714) {}
[INFO ] 2019-11-01T00:09:27,615Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566967223) {}
[INFO ] 2019-11-01T00:09:27,616Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:27,619Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566967223) {}
[INFO ] 2019-11-01T00:09:27,620Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566967223) {}
[INFO ] 2019-11-01T00:09:27,622Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:27,623Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566967223) {}
[INFO ] 2019-11-01T00:09:27,623Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566967223) {}
[INFO ] 2019-11-01T00:09:27,624Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:27,624Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566967223) {}
[INFO ] 2019-11-01T00:09:27,626Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:09:27,627Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:09:27,636Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:09:27,640Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@7d4d87f9 {}
[INFO ] 2019-11-01T00:09:27,648Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:09:27,649Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:27,650Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:27,712Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:27,718Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:09:27,718Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566967718) {}
[INFO ] 2019-11-01T00:09:27,721Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:27,723Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566967718) {}
[INFO ] 2019-11-01T00:09:27,724Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566967718) {}
[INFO ] 2019-11-01T00:09:27,849Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:09:27,963Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:09:28,073Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:09:28,075Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:09:28,084Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:09:28,085Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:28,086Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:28,086Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:28,087Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:09:28,096Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key A8EC349BAE6F9C97835CF0D5BA6A853A97B20B724EA00013C8C29AF3E9B038CA, not inserting the second time {}
[INFO ] 2019-11-01T00:09:28,101Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566966190) {}
[INFO ] 2019-11-01T00:09:28,102Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:28,106Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566966190) {}
[INFO ] 2019-11-01T00:09:28,106Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566967718) {}
[INFO ] 2019-11-01T00:09:28,108Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:28,112Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566967718) {}
[INFO ] 2019-11-01T00:09:28,113Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566966714) {}
[INFO ] 2019-11-01T00:09:28,114Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:28,117Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566966714) {}
[INFO ] 2019-11-01T00:09:28,118Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566967718) {}
[INFO ] 2019-11-01T00:09:28,119Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:28,122Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566967718) {}
[INFO ] 2019-11-01T00:09:28,122Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566967223) {}
[INFO ] 2019-11-01T00:09:28,123Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:28,127Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566967223) {}
[INFO ] 2019-11-01T00:09:28,127Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566967718) {}
[INFO ] 2019-11-01T00:09:28,128Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:28,132Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566967718) {}
[INFO ] 2019-11-01T00:09:28,132Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566967718) {}
[INFO ] 2019-11-01T00:09:28,134Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:28,135Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566967718) {}
[INFO ] 2019-11-01T00:09:28,135Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566967718) {}
[INFO ] 2019-11-01T00:09:28,136Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:28,136Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566967718) {}
[INFO ] 2019-11-01T00:09:28,139Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:09:28,139Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:09:28,148Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:09:28,154Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@3d78009a {}
[INFO ] 2019-11-01T00:09:28,160Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:09:28,161Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:28,162Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:28,214Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:28,219Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:09:28,220Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566968220) {}
[INFO ] 2019-11-01T00:09:28,222Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:28,224Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566968220) {}
[INFO ] 2019-11-01T00:09:28,225Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566968220) {}
[INFO ] 2019-11-01T00:09:28,361Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:09:28,476Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:09:28,566Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:09:28,567Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:09:28,577Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:09:28,578Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:28,578Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:28,579Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:28,580Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:09:28,589Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key CD0E6E91160B01AB57AEA7AA83815DB61C4420A4574186768122FD419825E0F2, not inserting the second time {}
[INFO ] 2019-11-01T00:09:28,595Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566966190) {}
[INFO ] 2019-11-01T00:09:28,596Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:28,600Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566966190) {}
[INFO ] 2019-11-01T00:09:28,601Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566968220) {}
[INFO ] 2019-11-01T00:09:28,601Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:28,605Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566968220) {}
[INFO ] 2019-11-01T00:09:28,605Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566966714) {}
[INFO ] 2019-11-01T00:09:28,606Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:28,610Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566966714) {}
[INFO ] 2019-11-01T00:09:28,610Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566968220) {}
[INFO ] 2019-11-01T00:09:28,611Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:28,614Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566968220) {}
[INFO ] 2019-11-01T00:09:28,615Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566967223) {}
[INFO ] 2019-11-01T00:09:28,615Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:28,619Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572566967223) {}
[INFO ] 2019-11-01T00:09:28,619Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566968220) {}
[INFO ] 2019-11-01T00:09:28,620Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:28,623Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566968220) {}
[INFO ] 2019-11-01T00:09:28,624Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566967718) {}
[INFO ] 2019-11-01T00:09:28,625Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:28,628Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572566967718) {}
[INFO ] 2019-11-01T00:09:28,628Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566968220) {}
[INFO ] 2019-11-01T00:09:28,629Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:28,632Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566968220) {}
[INFO ] 2019-11-01T00:09:28,633Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566968220) {}
[INFO ] 2019-11-01T00:09:28,634Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:28,635Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566968220) {}
[INFO ] 2019-11-01T00:09:28,635Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566968220) {}
[INFO ] 2019-11-01T00:09:28,636Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:28,636Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566968220) {}
[INFO ] 2019-11-01T00:09:28,637Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:28,638Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:28,638Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:28,639Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:28,639Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:28,640Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:28,640Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:28,641Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:28,705Z [Mock network] flow.[afc82f5f-9780-4ba9-a944-adcef3a40dd6].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=699860127064082624). {}
[INFO ] 2019-11-01T00:09:28,780Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=699860127064082624). {invocation_id=02c468e1-250f-42bd-9e63-87b026d74608, invocation_timestamp=2019-11-01T00:09:28.779Z, session_id=02c468e1-250f-42bd-9e63-87b026d74608, session_timestamp=2019-11-01T00:09:28.779Z}
[INFO ] 2019-11-01T00:09:28,897Z [Mock network] flow.[afc82f5f-9780-4ba9-a944-adcef3a40dd6].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=8979907523289416528). {}
[INFO ] 2019-11-01T00:09:28,911Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=8979907523289416528). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=ed529e22-04b4-4293-a22e-c8f74eacc139, invocation_timestamp=2019-11-01T00:09:28.910Z, session_id=ed529e22-04b4-4293-a22e-c8f74eacc139, session_timestamp=2019-11-01T00:09:28.910Z}
[INFO ] 2019-11-01T00:09:28,940Z [Mock network] flow.[afc82f5f-9780-4ba9-a944-adcef3a40dd6].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=6249173992565881188). {}
[INFO ] 2019-11-01T00:09:28,958Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=6249173992565881188). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=c0bd2e8e-4c3e-442d-8791-6d598027a7e7, invocation_timestamp=2019-11-01T00:09:28.957Z, session_id=c0bd2e8e-4c3e-442d-8791-6d598027a7e7, session_timestamp=2019-11-01T00:09:28.957Z}
[INFO ] 2019-11-01T00:09:29,044Z [Mock network] flow.[6611909e-dd6a-4d8c-ad7d-45bdc3eb3bd1].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=8820346037788718256). {}
[INFO ] 2019-11-01T00:09:29,069Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=8820346037788718256). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=515c88b4-ab97-423d-bacf-3b2b304f4e0a, invocation_timestamp=2019-11-01T00:09:29.068Z, session_id=515c88b4-ab97-423d-bacf-3b2b304f4e0a, session_timestamp=2019-11-01T00:09:29.068Z}
[INFO ] 2019-11-01T00:09:29,135Z [Mock network] flow.[e4c725c6-7b2f-473c-9c0b-b1501fce09cb].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=4529763009687156288). {}
[INFO ] 2019-11-01T00:09:29,170Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=4529763009687156288). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=3df8887c-c8b7-4223-9086-3ac4f82d6382, invocation_timestamp=2019-11-01T00:09:29.169Z, session_id=3df8887c-c8b7-4223-9086-3ac4f82d6382, session_timestamp=2019-11-01T00:09:29.169Z}
[INFO ] 2019-11-01T00:09:29,176Z [Mock network] flow.[5fd663ab-09e3-4787-8b65-62aee86d49e9].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:29,215Z [Mock network] flow.[5fd663ab-09e3-4787-8b65-62aee86d49e9].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:29,270Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:09:29,291Z [Mock network] flow.[4b31a282-0233-4239-b753-0cf105f87d11].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-5026730533858629593). {}
[INFO ] 2019-11-01T00:09:29,313Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-5026730533858629593). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=14744e48-c5a0-4e6c-b945-ece36a50ff5f, invocation_timestamp=2019-11-01T00:09:29.312Z, session_id=14744e48-c5a0-4e6c-b945-ece36a50ff5f, session_timestamp=2019-11-01T00:09:29.312Z}
[INFO ] 2019-11-01T00:09:29,318Z [Mock network] flow.[3ca10fa7-ae69-46c5-97d9-65b97cc50ddb].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:29,366Z [Mock network] flow.[3ca10fa7-ae69-46c5-97d9-65b97cc50ddb].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:29,408Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.qn7265.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:09:29,476Z [Mock network] flow.[4b31a282-0233-4239-b753-0cf105f87d11].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:29,519Z [Mock network] flow.[4b31a282-0233-4239-b753-0cf105f87d11].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:29,521Z [Mock network] flow.[4b31a282-0233-4239-b753-0cf105f87d11].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:29,534Z [Mock network] flow.[4b31a282-0233-4239-b753-0cf105f87d11].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:29,602Z [Mock network] flow.[3ca10fa7-ae69-46c5-97d9-65b97cc50ddb].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-1440436881094195302). {}
[INFO ] 2019-11-01T00:09:29,615Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-1440436881094195302). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=6cfb2a1d-4ffe-4a47-84cb-9da969595751, invocation_timestamp=2019-11-01T00:09:29.614Z, session_id=6cfb2a1d-4ffe-4a47-84cb-9da969595751, session_timestamp=2019-11-01T00:09:29.614Z}
[INFO ] 2019-11-01T00:09:29,627Z [Mock network] flow.[b1a99bfc-4dd6-498f-882f-b3d1fba65471].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:29,653Z [Mock network] flow.[b1a99bfc-4dd6-498f-882f-b3d1fba65471].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:29,655Z [Mock network] flow.[b1a99bfc-4dd6-498f-882f-b3d1fba65471].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:29,668Z [Mock network] flow.[b1a99bfc-4dd6-498f-882f-b3d1fba65471].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:09:29,815Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:09:29,816Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:09:29,821Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@522ee20c {}
[INFO ] 2019-11-01T00:09:29,832Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:09:29,833Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:29,834Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:29,924Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:29,929Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:09:29,930Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566969930) {}
[INFO ] 2019-11-01T00:09:29,933Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:29,938Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566969930) {}
[INFO ] 2019-11-01T00:09:29,939Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566969930) {}
[INFO ] 2019-11-01T00:09:30,061Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:09:30,178Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:09:30,263Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:09:30,269Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:09:30,277Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:09:30,280Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:09:30,280Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:30,281Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:30,282Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:30,282Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:09:30,291Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key DB375ACBB8DDA00C52FC04E37F23970F53FF110EF8BC0C87979EF1EAA5F50575, not inserting the second time {}
[INFO ] 2019-11-01T00:09:30,295Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566969930) {}
[INFO ] 2019-11-01T00:09:30,297Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:30,298Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566969930) {}
[INFO ] 2019-11-01T00:09:30,299Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566969930) {}
[INFO ] 2019-11-01T00:09:30,300Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:30,301Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566969930) {}
[INFO ] 2019-11-01T00:09:30,303Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:09:30,304Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:09:30,313Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:09:30,318Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@413d0c56 {}
[INFO ] 2019-11-01T00:09:30,331Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:09:30,333Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:30,333Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:30,426Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:30,434Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:09:30,435Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566970435) {}
[INFO ] 2019-11-01T00:09:30,437Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:30,439Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566970435) {}
[INFO ] 2019-11-01T00:09:30,440Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566970435) {}
[INFO ] 2019-11-01T00:09:30,561Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:09:30,677Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:09:30,767Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:09:30,768Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:09:30,778Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:09:30,779Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:30,779Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:30,780Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:30,781Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:09:30,790Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 525197EC6B8F7E9643383AF92EF8F25D1F76ACD2225F7BBC45524D7FE9E6EECA, not inserting the second time {}
[INFO ] 2019-11-01T00:09:30,793Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566969930) {}
[INFO ] 2019-11-01T00:09:30,799Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:30,804Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566969930) {}
[INFO ] 2019-11-01T00:09:30,805Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566970435) {}
[INFO ] 2019-11-01T00:09:30,806Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:30,811Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566970435) {}
[INFO ] 2019-11-01T00:09:30,812Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566970435) {}
[INFO ] 2019-11-01T00:09:30,820Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:30,821Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566970435) {}
[INFO ] 2019-11-01T00:09:30,822Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566970435) {}
[INFO ] 2019-11-01T00:09:30,823Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:30,823Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566970435) {}
[INFO ] 2019-11-01T00:09:30,826Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:09:30,827Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:09:30,839Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:09:30,846Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@49e80563 {}
[INFO ] 2019-11-01T00:09:30,852Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:09:30,852Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:30,853Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:30,912Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:30,917Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:09:30,918Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566970918) {}
[INFO ] 2019-11-01T00:09:30,921Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:30,923Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566970918) {}
[INFO ] 2019-11-01T00:09:30,924Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566970918) {}
[INFO ] 2019-11-01T00:09:31,051Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:09:31,170Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:09:31,257Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:09:31,258Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:09:31,267Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:09:31,268Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:31,268Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:31,269Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:31,270Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:09:31,315Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key F268CF7F966D67B3F3BABBAFE1F5E3855207009F39779BD7405249B5C6CE3649, not inserting the second time {}
[INFO ] 2019-11-01T00:09:31,321Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566969930) {}
[INFO ] 2019-11-01T00:09:31,323Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:31,326Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566969930) {}
[INFO ] 2019-11-01T00:09:31,327Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566970918) {}
[INFO ] 2019-11-01T00:09:31,328Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:31,331Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566970918) {}
[INFO ] 2019-11-01T00:09:31,332Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566970435) {}
[INFO ] 2019-11-01T00:09:31,332Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:31,335Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566970435) {}
[INFO ] 2019-11-01T00:09:31,336Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566970918) {}
[INFO ] 2019-11-01T00:09:31,337Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:31,340Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566970918) {}
[INFO ] 2019-11-01T00:09:31,340Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566970918) {}
[INFO ] 2019-11-01T00:09:31,342Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:31,343Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566970918) {}
[INFO ] 2019-11-01T00:09:31,343Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566970918) {}
[INFO ] 2019-11-01T00:09:31,344Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:31,345Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566970918) {}
[INFO ] 2019-11-01T00:09:31,414Z [Mock network] flow.[1d112622-66f9-4d3b-96c9-c230a71fbca7].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-8840836479562750810). {}
[INFO ] 2019-11-01T00:09:31,455Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-8840836479562750810). {invocation_id=be09fb89-d0c6-4331-8197-75ce149b36b8, invocation_timestamp=2019-11-01T00:09:31.455Z, session_id=be09fb89-d0c6-4331-8197-75ce149b36b8, session_timestamp=2019-11-01T00:09:31.455Z}
[INFO ] 2019-11-01T00:09:31,577Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:09:31,578Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:09:31,582Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@b06e18e {}
[INFO ] 2019-11-01T00:09:31,589Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:09:31,590Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:31,591Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:31,671Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:31,676Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:09:31,676Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566971676) {}
[INFO ] 2019-11-01T00:09:31,679Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:31,683Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566971676) {}
[INFO ] 2019-11-01T00:09:31,684Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566971676) {}
[INFO ] 2019-11-01T00:09:31,824Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:09:31,939Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:09:32,054Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:09:32,056Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:09:32,063Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:09:32,066Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:09:32,067Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:32,067Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:32,068Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:32,068Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:09:32,077Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 5A30C13986EA340F2BD4A19C46BE7794913702C050D243A7EF83600D554C02EA, not inserting the second time {}
[INFO ] 2019-11-01T00:09:32,081Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566971676) {}
[INFO ] 2019-11-01T00:09:32,085Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:32,086Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566971676) {}
[INFO ] 2019-11-01T00:09:32,086Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566971676) {}
[INFO ] 2019-11-01T00:09:32,087Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:32,087Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566971676) {}
[INFO ] 2019-11-01T00:09:32,089Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:09:32,090Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:09:32,101Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:09:32,105Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@76b1ec6a {}
[INFO ] 2019-11-01T00:09:32,110Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:09:32,110Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:32,111Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:32,158Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:32,163Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:09:32,164Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566972164) {}
[INFO ] 2019-11-01T00:09:32,166Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:32,168Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566972164) {}
[INFO ] 2019-11-01T00:09:32,168Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566972164) {}
[INFO ] 2019-11-01T00:09:32,310Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:09:32,423Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:09:32,508Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:09:32,509Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:09:32,519Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:09:32,520Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:32,520Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:32,521Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:32,521Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:09:32,530Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 6250B3FE8EBAFD04C4AD74C7264763FAA9FBC2B30AACCEDA5434A8C89B25526B, not inserting the second time {}
[INFO ] 2019-11-01T00:09:32,533Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566971676) {}
[INFO ] 2019-11-01T00:09:32,534Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:32,537Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566971676) {}
[INFO ] 2019-11-01T00:09:32,538Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566972164) {}
[INFO ] 2019-11-01T00:09:32,551Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:32,554Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566972164) {}
[INFO ] 2019-11-01T00:09:32,554Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566972164) {}
[INFO ] 2019-11-01T00:09:32,556Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:32,558Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566972164) {}
[INFO ] 2019-11-01T00:09:32,558Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566972164) {}
[INFO ] 2019-11-01T00:09:32,559Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:32,559Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566972164) {}
[INFO ] 2019-11-01T00:09:32,564Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:09:32,564Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:09:32,577Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:09:32,582Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@5886dde {}
[INFO ] 2019-11-01T00:09:32,588Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:09:32,589Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:32,590Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:32,648Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:32,654Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:09:32,654Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566972654) {}
[INFO ] 2019-11-01T00:09:32,656Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:32,658Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566972654) {}
[INFO ] 2019-11-01T00:09:32,659Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566972654) {}
[INFO ] 2019-11-01T00:09:32,793Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:09:32,943Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:09:33,029Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:09:33,031Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:09:33,040Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:09:33,041Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:33,042Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:33,042Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:33,043Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:09:33,052Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 295E40C1380FA4EC6227A8161CC1C92D8AE4AE8CEF781479FB0AE65B21BBA9B8, not inserting the second time {}
[INFO ] 2019-11-01T00:09:33,055Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566971676) {}
[INFO ] 2019-11-01T00:09:33,056Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:33,060Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566971676) {}
[INFO ] 2019-11-01T00:09:33,061Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566972654) {}
[INFO ] 2019-11-01T00:09:33,062Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:33,067Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566972654) {}
[INFO ] 2019-11-01T00:09:33,068Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566972164) {}
[INFO ] 2019-11-01T00:09:33,070Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:33,074Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566972164) {}
[INFO ] 2019-11-01T00:09:33,075Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566972654) {}
[INFO ] 2019-11-01T00:09:33,076Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:33,079Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566972654) {}
[INFO ] 2019-11-01T00:09:33,080Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566972654) {}
[INFO ] 2019-11-01T00:09:33,082Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:33,083Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566972654) {}
[INFO ] 2019-11-01T00:09:33,083Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566972654) {}
[INFO ] 2019-11-01T00:09:33,084Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:33,085Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566972654) {}
[INFO ] 2019-11-01T00:09:33,141Z [Mock network] flow.[3c051ca1-e3b7-4a06-a7ff-d84eb6f336c2].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-3481754816220996981). {}
[INFO ] 2019-11-01T00:09:33,184Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-3481754816220996981). {invocation_id=fd3bbee6-1d10-48f5-b47e-f9ca50e5ff40, invocation_timestamp=2019-11-01T00:09:33.183Z, session_id=fd3bbee6-1d10-48f5-b47e-f9ca50e5ff40, session_timestamp=2019-11-01T00:09:33.183Z}
[INFO ] 2019-11-01T00:09:33,337Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:09:33,338Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:09:33,342Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@3716af29 {}
[INFO ] 2019-11-01T00:09:33,352Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:09:33,353Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:33,354Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:33,406Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:33,412Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:09:33,412Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566973412) {}
[INFO ] 2019-11-01T00:09:33,415Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:33,419Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566973412) {}
[INFO ] 2019-11-01T00:09:33,420Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566973412) {}
[INFO ] 2019-11-01T00:09:33,593Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:09:33,720Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:09:33,810Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:09:33,812Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:09:33,819Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:09:33,822Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:09:33,822Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:33,823Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:33,823Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:33,824Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:09:33,833Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 5D23E06EAC4BBE8D685F97480175591DA9E5FD8FE1E5AB4A35E66394852C3777, not inserting the second time {}
[INFO ] 2019-11-01T00:09:33,836Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566973412) {}
[INFO ] 2019-11-01T00:09:33,838Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:33,839Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566973412) {}
[INFO ] 2019-11-01T00:09:33,845Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566973412) {}
[INFO ] 2019-11-01T00:09:33,846Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:33,846Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566973412) {}
[INFO ] 2019-11-01T00:09:33,850Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:09:33,850Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:09:33,861Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:09:33,866Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@5a7a6737 {}
[INFO ] 2019-11-01T00:09:33,878Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:09:33,879Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:33,880Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:33,964Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:33,978Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:09:33,979Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566973978) {}
[INFO ] 2019-11-01T00:09:33,984Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:33,986Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566973978) {}
[INFO ] 2019-11-01T00:09:33,987Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566973978) {}
[INFO ] 2019-11-01T00:09:34,104Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:09:34,216Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:09:34,306Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:09:34,308Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:09:34,317Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:09:34,318Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:34,319Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:34,320Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:34,320Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:09:34,329Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 651869394D58210228921F6D3B8D03605EEB32A586DBF4D7048FF557F6F32924, not inserting the second time {}
[INFO ] 2019-11-01T00:09:34,333Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566973412) {}
[INFO ] 2019-11-01T00:09:34,334Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:34,337Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566973412) {}
[INFO ] 2019-11-01T00:09:34,338Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566973978) {}
[INFO ] 2019-11-01T00:09:34,338Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:34,348Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566973978) {}
[INFO ] 2019-11-01T00:09:34,349Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566973978) {}
[INFO ] 2019-11-01T00:09:34,351Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:34,352Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566973978) {}
[INFO ] 2019-11-01T00:09:34,353Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566973978) {}
[INFO ] 2019-11-01T00:09:34,353Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:34,354Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566973978) {}
[INFO ] 2019-11-01T00:09:34,356Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:09:34,357Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:09:34,365Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:09:34,425Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@4981afd2 {}
[INFO ] 2019-11-01T00:09:34,436Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:09:34,437Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:34,437Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:34,487Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:09:34,493Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:09:34,493Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566974493) {}
[INFO ] 2019-11-01T00:09:34,496Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:34,498Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566974493) {}
[INFO ] 2019-11-01T00:09:34,499Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566974493) {}
[INFO ] 2019-11-01T00:09:34,636Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:09:34,742Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:09:34,831Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:09:34,832Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:09:34,844Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:09:34,845Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:09:34,845Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:34,846Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:09:34,847Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:09:34,856Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key BA09D98B43F35266C4E49F2DD3DF176C2BDD54DAF1C9F3DCB56F909FC628978E, not inserting the second time {}
[INFO ] 2019-11-01T00:09:34,859Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566973412) {}
[INFO ] 2019-11-01T00:09:34,860Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:34,867Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572566973412) {}
[INFO ] 2019-11-01T00:09:34,868Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566974493) {}
[INFO ] 2019-11-01T00:09:34,870Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:34,873Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566974493) {}
[INFO ] 2019-11-01T00:09:34,874Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566973978) {}
[INFO ] 2019-11-01T00:09:34,875Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:34,878Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572566973978) {}
[INFO ] 2019-11-01T00:09:34,878Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566974493) {}
[INFO ] 2019-11-01T00:09:34,879Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:09:34,883Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566974493) {}
[INFO ] 2019-11-01T00:09:34,884Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566974493) {}
[INFO ] 2019-11-01T00:09:34,886Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:34,886Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566974493) {}
[INFO ] 2019-11-01T00:09:34,887Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566974493) {}
[INFO ] 2019-11-01T00:09:34,888Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:09:34,888Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572566974493) {}
[WARN ] 2019-11-01T00:09:34,919Z [Mock network] flow.[c8612e21-44e1-41c9-9dc3-44051d11e885].run - Flow finished with exception {}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: A newly issued asset must have a positive amount., contract: com.qn7265.issue.AssetContract, transaction: D035149FFC0F785C6850D43332DB96B0E41EEB5BC4AA221B15456D044EAAF525
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:127) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:80) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:143) ~[corda-core-3.4-corda.jar:?]
	at com.qn7265.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:82) ~[main/:?]
	at com.qn7265.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:27) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.4-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_211]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.4-corda.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: A newly issued asset must have a positive amount.
	at com.qn7265.issue.AssetContract.verifyIssue(AssetContract.kt:80) ~[qn7265-contracts.jar:?]
	at com.qn7265.issue.AssetContract.verify(AssetContract.kt:29) ~[qn7265-contracts.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:125) ~[corda-core-3.4-corda.jar:?]
	... 17 more
[INFO ] 2019-11-01T00:09:34,994Z [Mock network] flow.[f9be6d2f-9b50-40e2-9740-ca31e8696c0d].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=6291970963128715605). {}
[INFO ] 2019-11-01T00:09:35,039Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=6291970963128715605). {invocation_id=a4875579-a7ec-4d87-9fbe-a6e41fab7acb, invocation_timestamp=2019-11-01T00:09:35.038Z, session_id=a4875579-a7ec-4d87-9fbe-a6e41fab7acb, session_timestamp=2019-11-01T00:09:35.038Z}
[INFO ] 2019-11-01T00:13:52,260Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.qn7265 in file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/classes/kotlin/test/com/qn7265: build/tmp/generated-test-cordapps/com.qn7265-a5fe6f17-1290-4f3a-b560-bcb55a828525.jar {}
[INFO ] 2019-11-01T00:13:52,302Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.qn7265 in file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/classes/kotlin/main/com/qn7265: build/tmp/generated-test-cordapps/com.qn7265-f35eed42-62f9-4f14-b987-af5ffe7384ca.jar {}
[INFO ] 2019-11-01T00:13:52,362Z [Test worker] cordapp.CordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/tmp/generated-test-cordapps/com.qn7265-a5fe6f17-1290-4f3a-b560-bcb55a828525.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/tmp/generated-test-cordapps/com.qn7265-f35eed42-62f9-4f14-b987-af5ffe7384ca.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/qn7265-contracts-new/build/libs/qn7265-contracts-new.jar, rootPackageName=com.qn7265), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/qn7265-contracts/build/libs/qn7265-contracts.jar, rootPackageName=com.qn7265), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/libs/prides.jar, rootPackageName=com.twig) {}
[INFO ] 2019-11-01T00:13:52,411Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:13:52,420Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:13:52,449Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/tmp/generated-test-cordapps/com.qn7265-a5fe6f17-1290-4f3a-b560-bcb55a828525.jar {}
[INFO ] 2019-11-01T00:13:52,491Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/tmp/generated-test-cordapps/com.qn7265-f35eed42-62f9-4f14-b987-af5ffe7384ca.jar {}
[INFO ] 2019-11-01T00:13:52,530Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/qn7265-contracts-new/build/libs/qn7265-contracts-new.jar {}
[INFO ] 2019-11-01T00:13:52,585Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/qn7265-contracts/build/libs/qn7265-contracts.jar {}
[INFO ] 2019-11-01T00:13:52,663Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/libs/prides.jar {}
[INFO ] 2019-11-01T00:13:52,810Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6fa6c221 {}
[INFO ] 2019-11-01T00:13:53,674Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:13:53,735Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:13:53,740Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:13:56,231Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:13:56,867Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:13:56,870Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567236869) {}
[INFO ] 2019-11-01T00:13:56,881Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:13:57,012Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567236869) {}
[INFO ] 2019-11-01T00:13:57,014Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567236869) {}
[INFO ] 2019-11-01T00:13:57,375Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:13:57,566Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:13:57,699Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:13:57,706Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:13:57,807Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:13:57,952Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:13:57,957Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:13:57,960Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:13:57,966Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:13:57,973Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:13:58,049Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key CE7F440B6A301AA79BF972D249934C6082C7F988F23389BB251DC36052A191D5, not inserting the second time {}
[INFO ] 2019-11-01T00:13:58,152Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567236869) {}
[INFO ] 2019-11-01T00:13:58,209Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:13:58,216Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567236869) {}
[INFO ] 2019-11-01T00:13:58,219Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567236869) {}
[INFO ] 2019-11-01T00:13:58,229Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:13:58,231Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567236869) {}
[INFO ] 2019-11-01T00:13:58,239Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:13:58,244Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:13:58,283Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:13:58,309Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@67ea124b {}
[INFO ] 2019-11-01T00:13:58,364Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:13:58,371Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:13:58,376Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:13:58,605Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:13:58,631Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:13:58,635Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567238634) {}
[INFO ] 2019-11-01T00:13:58,647Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:13:58,661Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567238634) {}
[INFO ] 2019-11-01T00:13:58,663Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567238634) {}
[INFO ] 2019-11-01T00:13:58,874Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:13:59,027Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:13:59,140Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:13:59,145Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:13:59,178Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:13:59,183Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:13:59,186Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:13:59,191Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:13:59,194Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:13:59,226Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key E40D242BFC43AE1146D57B699876E5A59F6D4A219C00F46A8472CB6AC68DF27F, not inserting the second time {}
[INFO ] 2019-11-01T00:13:59,238Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567236869) {}
[INFO ] 2019-11-01T00:13:59,242Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:13:59,266Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567236869) {}
[INFO ] 2019-11-01T00:13:59,269Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567238634) {}
[INFO ] 2019-11-01T00:13:59,272Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:13:59,282Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567238634) {}
[INFO ] 2019-11-01T00:13:59,284Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567238634) {}
[INFO ] 2019-11-01T00:13:59,290Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:13:59,295Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567238634) {}
[INFO ] 2019-11-01T00:13:59,296Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567238634) {}
[INFO ] 2019-11-01T00:13:59,298Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:13:59,299Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567238634) {}
[INFO ] 2019-11-01T00:13:59,306Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:13:59,308Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:13:59,348Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:13:59,370Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@36a0b27b {}
[INFO ] 2019-11-01T00:13:59,395Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:13:59,397Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:13:59,399Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:13:59,608Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:13:59,624Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:13:59,627Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567239627) {}
[INFO ] 2019-11-01T00:13:59,639Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:13:59,651Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567239627) {}
[INFO ] 2019-11-01T00:13:59,653Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567239627) {}
[INFO ] 2019-11-01T00:13:59,815Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:13:59,957Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:14:00,087Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:14:00,090Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:14:00,106Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:14:00,108Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:00,110Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:00,111Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:00,112Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:14:00,127Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 70744EB0D7AC718B06BC2EB9B714A9C2D4ECC5E5B8FA60344157042C330F61D0, not inserting the second time {}
[INFO ] 2019-11-01T00:14:00,137Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567236869) {}
[INFO ] 2019-11-01T00:14:00,140Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:00,155Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567236869) {}
[INFO ] 2019-11-01T00:14:00,156Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567239627) {}
[INFO ] 2019-11-01T00:14:00,159Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:00,168Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567239627) {}
[INFO ] 2019-11-01T00:14:00,170Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567238634) {}
[INFO ] 2019-11-01T00:14:00,174Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:00,193Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567238634) {}
[INFO ] 2019-11-01T00:14:00,201Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567239627) {}
[INFO ] 2019-11-01T00:14:00,205Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:00,226Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567239627) {}
[INFO ] 2019-11-01T00:14:00,228Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567239627) {}
[INFO ] 2019-11-01T00:14:00,233Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:00,235Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567239627) {}
[INFO ] 2019-11-01T00:14:00,238Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567239627) {}
[INFO ] 2019-11-01T00:14:00,239Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:00,240Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567239627) {}
[INFO ] 2019-11-01T00:14:01,414Z [Mock network] flow.[39fae4b6-3c8e-4da8-86fe-1a74528e4e7a].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=4302452624685014801). {}
[INFO ] 2019-11-01T00:14:01,630Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=4302452624685014801). {invocation_id=4ee0d91d-8946-4cbc-960f-a415b3d9ed01, invocation_timestamp=2019-11-01T00:14:01.605Z, session_id=4ee0d91d-8946-4cbc-960f-a415b3d9ed01, session_timestamp=2019-11-01T00:14:01.605Z}
[INFO ] 2019-11-01T00:14:02,058Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:14:02,060Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:14:02,074Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@52b6bec8 {}
[INFO ] 2019-11-01T00:14:02,099Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:14:02,103Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:02,105Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:02,365Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:02,384Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:14:02,386Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567242386) {}
[INFO ] 2019-11-01T00:14:02,392Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:02,412Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567242386) {}
[INFO ] 2019-11-01T00:14:02,414Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567242386) {}
[INFO ] 2019-11-01T00:14:02,577Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:14:02,710Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:14:02,800Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:14:02,803Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:14:02,814Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:14:02,819Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:14:02,821Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:02,823Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:02,824Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:02,826Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:14:02,839Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 69F0ED1B5E098E70221689A422E0FA3F03A55016592BEA0EA24C3876D64553F5, not inserting the second time {}
[INFO ] 2019-11-01T00:14:02,847Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567242386) {}
[INFO ] 2019-11-01T00:14:02,855Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:02,856Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567242386) {}
[INFO ] 2019-11-01T00:14:02,859Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567242386) {}
[INFO ] 2019-11-01T00:14:02,860Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:02,862Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567242386) {}
[INFO ] 2019-11-01T00:14:02,866Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:14:02,869Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:14:02,898Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:14:02,914Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@7b9e9ee7 {}
[INFO ] 2019-11-01T00:14:02,933Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:14:02,935Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:02,937Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:03,026Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:03,037Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:14:03,038Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567243038) {}
[INFO ] 2019-11-01T00:14:03,043Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:03,048Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567243038) {}
[INFO ] 2019-11-01T00:14:03,049Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567243038) {}
[INFO ] 2019-11-01T00:14:03,189Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:14:03,308Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:14:03,445Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:14:03,447Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:14:03,460Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:14:03,462Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:03,463Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:03,464Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:03,465Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:14:03,484Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 61AFE5602138C6539B10FDA97F7A1CD2D763F2AC8A1FB34E8DD0EAA41FD0CE5A, not inserting the second time {}
[INFO ] 2019-11-01T00:14:03,503Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567242386) {}
[INFO ] 2019-11-01T00:14:03,508Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:03,520Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567242386) {}
[INFO ] 2019-11-01T00:14:03,521Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567243038) {}
[INFO ] 2019-11-01T00:14:03,524Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:03,531Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567243038) {}
[INFO ] 2019-11-01T00:14:03,533Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567243038) {}
[INFO ] 2019-11-01T00:14:03,537Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:03,538Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567243038) {}
[INFO ] 2019-11-01T00:14:03,539Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567243038) {}
[INFO ] 2019-11-01T00:14:03,540Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:03,541Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567243038) {}
[INFO ] 2019-11-01T00:14:03,544Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:14:03,545Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:14:03,559Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:14:03,567Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@7fd45376 {}
[INFO ] 2019-11-01T00:14:03,578Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:14:03,579Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:03,580Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:03,678Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:03,697Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:14:03,699Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567243699) {}
[INFO ] 2019-11-01T00:14:03,705Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:03,714Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567243699) {}
[INFO ] 2019-11-01T00:14:03,716Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567243699) {}
[INFO ] 2019-11-01T00:14:03,864Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:14:03,978Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:14:04,075Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:14:04,077Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:14:04,091Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:14:04,093Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:04,094Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:04,095Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:04,096Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:14:04,109Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key E57A7B5DC0026787C6E48538E9102410DF602E4647550C36C00783D4EE4057AB, not inserting the second time {}
[INFO ] 2019-11-01T00:14:04,120Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567242386) {}
[INFO ] 2019-11-01T00:14:04,126Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:04,147Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567242386) {}
[INFO ] 2019-11-01T00:14:04,149Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567243699) {}
[INFO ] 2019-11-01T00:14:04,151Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:04,172Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567243699) {}
[INFO ] 2019-11-01T00:14:04,174Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567243038) {}
[INFO ] 2019-11-01T00:14:04,176Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:04,185Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567243038) {}
[INFO ] 2019-11-01T00:14:04,186Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567243699) {}
[INFO ] 2019-11-01T00:14:04,196Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:04,211Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567243699) {}
[INFO ] 2019-11-01T00:14:04,213Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567243699) {}
[INFO ] 2019-11-01T00:14:04,224Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:04,226Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567243699) {}
[INFO ] 2019-11-01T00:14:04,227Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567243699) {}
[INFO ] 2019-11-01T00:14:04,228Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:04,230Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567243699) {}
[INFO ] 2019-11-01T00:14:04,390Z [Mock network] flow.[0cabce53-b4b5-44fa-a3da-e29afe5de09b].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=1120760469535108508). {}
[INFO ] 2019-11-01T00:14:04,535Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=1120760469535108508). {invocation_id=b7ccc814-4bdf-4fc4-8972-e4aa38729a19, invocation_timestamp=2019-11-01T00:14:04.533Z, session_id=b7ccc814-4bdf-4fc4-8972-e4aa38729a19, session_timestamp=2019-11-01T00:14:04.533Z}
[INFO ] 2019-11-01T00:14:04,836Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:14:04,837Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:14:04,852Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@51f61e9d {}
[INFO ] 2019-11-01T00:14:04,869Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:14:04,870Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:04,871Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:05,060Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:05,074Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:14:05,075Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567245075) {}
[INFO ] 2019-11-01T00:14:05,082Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:05,095Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567245075) {}
[INFO ] 2019-11-01T00:14:05,096Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567245075) {}
[INFO ] 2019-11-01T00:14:05,237Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:14:05,358Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:14:05,456Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:14:05,458Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:14:05,468Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:14:05,474Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:14:05,475Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:05,477Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:05,478Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:05,478Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:14:05,491Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 1111424A76755BA9A7CBDF6C97BA84E3A50A4F4FAC7A87278AA16F1B112304AE, not inserting the second time {}
[INFO ] 2019-11-01T00:14:05,497Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567245075) {}
[INFO ] 2019-11-01T00:14:05,503Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:05,505Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567245075) {}
[INFO ] 2019-11-01T00:14:05,511Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567245075) {}
[INFO ] 2019-11-01T00:14:05,513Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:05,514Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567245075) {}
[INFO ] 2019-11-01T00:14:05,516Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:14:05,520Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:14:05,539Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:14:05,562Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6108c765 {}
[INFO ] 2019-11-01T00:14:05,588Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:14:05,590Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:05,591Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:05,692Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:05,699Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:14:05,700Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567245700) {}
[INFO ] 2019-11-01T00:14:05,703Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:05,707Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567245700) {}
[INFO ] 2019-11-01T00:14:05,707Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567245700) {}
[INFO ] 2019-11-01T00:14:05,894Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:14:06,007Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:14:06,106Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:14:06,109Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:14:06,123Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:14:06,125Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:06,126Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:06,126Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:06,127Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:14:06,139Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 1A1F3E0D871CCFB403A59962AD8DD5050C5AF61F0A7FFD43D8D6940EF3D1E783, not inserting the second time {}
[INFO ] 2019-11-01T00:14:06,149Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567245075) {}
[INFO ] 2019-11-01T00:14:06,152Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:06,168Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567245075) {}
[INFO ] 2019-11-01T00:14:06,169Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567245700) {}
[INFO ] 2019-11-01T00:14:06,172Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:06,186Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567245700) {}
[INFO ] 2019-11-01T00:14:06,187Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567245700) {}
[INFO ] 2019-11-01T00:14:06,195Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:06,196Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567245700) {}
[INFO ] 2019-11-01T00:14:06,197Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567245700) {}
[INFO ] 2019-11-01T00:14:06,198Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:06,198Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567245700) {}
[INFO ] 2019-11-01T00:14:06,202Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:14:06,203Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:14:06,229Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:14:06,238Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@36af367a {}
[INFO ] 2019-11-01T00:14:06,252Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:14:06,253Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:06,254Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:06,395Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:06,407Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:14:06,409Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567246409) {}
[INFO ] 2019-11-01T00:14:06,413Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:06,418Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567246409) {}
[INFO ] 2019-11-01T00:14:06,419Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567246409) {}
[INFO ] 2019-11-01T00:14:06,563Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:14:06,684Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:14:06,772Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:14:06,774Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:14:06,786Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:14:06,787Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:06,788Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:06,835Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:06,836Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:14:06,848Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 44B655884D9030933452A91987ED675BDB8E85FCACC200D456452EE2A968110A, not inserting the second time {}
[INFO ] 2019-11-01T00:14:06,860Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567245075) {}
[INFO ] 2019-11-01T00:14:06,864Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:06,872Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567245075) {}
[INFO ] 2019-11-01T00:14:06,873Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567246409) {}
[INFO ] 2019-11-01T00:14:06,875Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:06,882Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567246409) {}
[INFO ] 2019-11-01T00:14:06,883Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567245700) {}
[INFO ] 2019-11-01T00:14:06,884Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:06,891Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567245700) {}
[INFO ] 2019-11-01T00:14:06,892Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567246409) {}
[INFO ] 2019-11-01T00:14:06,894Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:06,901Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567246409) {}
[INFO ] 2019-11-01T00:14:06,902Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567246409) {}
[INFO ] 2019-11-01T00:14:06,905Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:06,907Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567246409) {}
[INFO ] 2019-11-01T00:14:06,908Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567246409) {}
[INFO ] 2019-11-01T00:14:06,917Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:06,918Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567246409) {}
[WARN ] 2019-11-01T00:14:07,000Z [Mock network] flow.[6cc580a8-007c-42dd-8261-f930cece74c0].run - Flow finished with exception {}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: A newly issued asset must have a positive amount., contract: com.qn7265.issue.AssetContract, transaction: D02D1298A3ED2A0CC589ECA329E4FBBB75ECB9E9BB3E670717FCDE177FE5FDB5
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:127) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:80) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:143) ~[corda-core-3.4-corda.jar:?]
	at com.qn7265.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:82) ~[main/:?]
	at com.qn7265.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:27) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.4-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_211]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.4-corda.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: A newly issued asset must have a positive amount.
	at com.qn7265.issue.AssetContract.verifyIssue(AssetContract.kt:80) ~[qn7265-contracts.jar:?]
	at com.qn7265.issue.AssetContract.verify(AssetContract.kt:29) ~[qn7265-contracts.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:125) ~[corda-core-3.4-corda.jar:?]
	... 17 more
[INFO ] 2019-11-01T00:14:07,137Z [Mock network] flow.[34573c36-d566-4b4b-b2c0-e0dada006a13].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=5970516392759417929). {}
[INFO ] 2019-11-01T00:14:07,220Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=5970516392759417929). {invocation_id=d0ee9098-0918-4933-b6d0-ec55a1832d97, invocation_timestamp=2019-11-01T00:14:07.219Z, session_id=d0ee9098-0918-4933-b6d0-ec55a1832d97, session_timestamp=2019-11-01T00:14:07.219Z}
[INFO ] 2019-11-01T00:14:07,464Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:14:07,469Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:14:07,483Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@2b48376f {}
[INFO ] 2019-11-01T00:14:07,498Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:14:07,499Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:07,500Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:07,582Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:07,589Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:14:07,590Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567247590) {}
[INFO ] 2019-11-01T00:14:07,593Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:07,599Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567247590) {}
[INFO ] 2019-11-01T00:14:07,600Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567247590) {}
[INFO ] 2019-11-01T00:14:07,791Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:14:07,912Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:14:07,996Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:14:07,998Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:14:08,007Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:14:08,013Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:14:08,014Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:08,015Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:08,019Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:08,020Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:14:08,032Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key C33518B64FDF5235EC3FBEA58D0F220112D6421D347041D6B04D4FDAEDBF07E1, not inserting the second time {}
[INFO ] 2019-11-01T00:14:08,045Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567247590) {}
[INFO ] 2019-11-01T00:14:08,049Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:08,050Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567247590) {}
[INFO ] 2019-11-01T00:14:08,051Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567247590) {}
[INFO ] 2019-11-01T00:14:08,060Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:08,061Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567247590) {}
[INFO ] 2019-11-01T00:14:08,064Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:14:08,065Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:14:08,093Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:14:08,102Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@422aa3ed {}
[INFO ] 2019-11-01T00:14:08,112Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:14:08,114Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:08,114Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:08,223Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:08,232Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:14:08,233Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567248233) {}
[INFO ] 2019-11-01T00:14:08,236Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:08,241Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567248233) {}
[INFO ] 2019-11-01T00:14:08,244Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567248233) {}
[INFO ] 2019-11-01T00:14:08,386Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:14:08,567Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:14:08,657Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:14:08,659Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:14:08,670Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:14:08,672Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:08,672Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:08,673Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:08,674Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:14:08,685Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key DD56DEEDF6F9C17C998B18437117744AE0233E1D924C2CB0AD322B84FE74331F, not inserting the second time {}
[INFO ] 2019-11-01T00:14:08,690Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567247590) {}
[INFO ] 2019-11-01T00:14:08,692Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:08,704Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567247590) {}
[INFO ] 2019-11-01T00:14:08,705Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567248233) {}
[INFO ] 2019-11-01T00:14:08,707Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:08,712Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567248233) {}
[INFO ] 2019-11-01T00:14:08,713Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567248233) {}
[INFO ] 2019-11-01T00:14:08,717Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:08,717Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567248233) {}
[INFO ] 2019-11-01T00:14:08,718Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567248233) {}
[INFO ] 2019-11-01T00:14:08,719Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:08,720Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567248233) {}
[INFO ] 2019-11-01T00:14:08,722Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:14:08,723Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:14:08,735Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:14:08,741Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@27fb37dc {}
[INFO ] 2019-11-01T00:14:08,749Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:14:08,750Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:08,750Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:08,821Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:08,832Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:14:08,834Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567248834) {}
[INFO ] 2019-11-01T00:14:08,837Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:08,841Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567248834) {}
[INFO ] 2019-11-01T00:14:08,842Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567248834) {}
[INFO ] 2019-11-01T00:14:08,980Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:14:09,113Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:14:09,273Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:14:09,276Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:14:09,287Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:14:09,288Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:09,289Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:09,291Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:09,292Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:14:09,303Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key C6A5D02EEB9154A460B86EFB1608A759E89B95761519F953ECA0D42E106C6748, not inserting the second time {}
[INFO ] 2019-11-01T00:14:09,309Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567247590) {}
[INFO ] 2019-11-01T00:14:09,312Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:09,319Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567247590) {}
[INFO ] 2019-11-01T00:14:09,322Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567248834) {}
[INFO ] 2019-11-01T00:14:09,324Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:09,330Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567248834) {}
[INFO ] 2019-11-01T00:14:09,331Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567248233) {}
[INFO ] 2019-11-01T00:14:09,333Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:09,340Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567248233) {}
[INFO ] 2019-11-01T00:14:09,341Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567248834) {}
[INFO ] 2019-11-01T00:14:09,343Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:09,349Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567248834) {}
[INFO ] 2019-11-01T00:14:09,350Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567248834) {}
[INFO ] 2019-11-01T00:14:09,353Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:09,354Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567248834) {}
[INFO ] 2019-11-01T00:14:09,355Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567248834) {}
[INFO ] 2019-11-01T00:14:09,356Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:09,357Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567248834) {}
[INFO ] 2019-11-01T00:14:09,360Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:14:09,361Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:14:09,373Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:14:09,380Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@76369572 {}
[INFO ] 2019-11-01T00:14:09,389Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:14:09,390Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:09,391Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:09,457Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:09,464Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:14:09,465Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567249465) {}
[INFO ] 2019-11-01T00:14:09,468Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:09,471Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567249465) {}
[INFO ] 2019-11-01T00:14:09,472Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567249465) {}
[INFO ] 2019-11-01T00:14:09,601Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:14:09,717Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:14:09,810Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:14:09,867Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:14:09,881Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:14:09,883Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:09,884Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:09,885Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:09,885Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:14:09,897Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 50067CC92BE61A2EF8B5D4DD35D276FFBB9962FEC73AD04FAD9BB69024E7E53F, not inserting the second time {}
[INFO ] 2019-11-01T00:14:09,902Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567247590) {}
[INFO ] 2019-11-01T00:14:09,904Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:09,912Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567247590) {}
[INFO ] 2019-11-01T00:14:09,913Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567249465) {}
[INFO ] 2019-11-01T00:14:09,919Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:09,931Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567249465) {}
[INFO ] 2019-11-01T00:14:09,932Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567248233) {}
[INFO ] 2019-11-01T00:14:09,939Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:09,947Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567248233) {}
[INFO ] 2019-11-01T00:14:09,948Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567249465) {}
[INFO ] 2019-11-01T00:14:09,951Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:09,963Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567249465) {}
[INFO ] 2019-11-01T00:14:09,964Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567248834) {}
[INFO ] 2019-11-01T00:14:09,965Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:09,974Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567248834) {}
[INFO ] 2019-11-01T00:14:09,975Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567249465) {}
[INFO ] 2019-11-01T00:14:09,977Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:09,990Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567249465) {}
[INFO ] 2019-11-01T00:14:09,991Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567249465) {}
[INFO ] 2019-11-01T00:14:09,998Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:09,999Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567249465) {}
[INFO ] 2019-11-01T00:14:10,000Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567249465) {}
[INFO ] 2019-11-01T00:14:10,001Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:10,002Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567249465) {}
[INFO ] 2019-11-01T00:14:10,005Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:14:10,006Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:14:10,018Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:14:10,027Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@57f5c3de {}
[INFO ] 2019-11-01T00:14:10,037Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:14:10,038Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:10,039Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:10,109Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:10,115Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:14:10,116Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567250116) {}
[INFO ] 2019-11-01T00:14:10,119Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:10,123Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567250116) {}
[INFO ] 2019-11-01T00:14:10,124Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567250116) {}
[INFO ] 2019-11-01T00:14:10,254Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:14:10,389Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:14:10,536Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:14:10,538Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:14:10,549Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:14:10,551Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:10,552Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:10,553Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:10,554Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:14:10,564Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 67F27C4ADFAD9499D212FAC78E7776DBE93AA6A1F650C009D62857C72F5F11E8, not inserting the second time {}
[INFO ] 2019-11-01T00:14:10,569Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567247590) {}
[INFO ] 2019-11-01T00:14:10,571Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:10,577Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567247590) {}
[INFO ] 2019-11-01T00:14:10,578Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567250116) {}
[INFO ] 2019-11-01T00:14:10,579Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:10,594Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567250116) {}
[INFO ] 2019-11-01T00:14:10,596Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567248233) {}
[INFO ] 2019-11-01T00:14:10,601Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:10,612Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567248233) {}
[INFO ] 2019-11-01T00:14:10,615Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567250116) {}
[INFO ] 2019-11-01T00:14:10,616Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:10,624Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567250116) {}
[INFO ] 2019-11-01T00:14:10,626Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567248834) {}
[INFO ] 2019-11-01T00:14:10,631Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:10,645Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567248834) {}
[INFO ] 2019-11-01T00:14:10,647Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567250116) {}
[INFO ] 2019-11-01T00:14:10,649Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:10,660Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567250116) {}
[INFO ] 2019-11-01T00:14:10,662Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567249465) {}
[INFO ] 2019-11-01T00:14:10,664Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:10,678Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567249465) {}
[INFO ] 2019-11-01T00:14:10,680Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567250116) {}
[INFO ] 2019-11-01T00:14:10,682Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:10,696Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567250116) {}
[INFO ] 2019-11-01T00:14:10,699Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567250116) {}
[INFO ] 2019-11-01T00:14:10,704Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:10,705Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567250116) {}
[INFO ] 2019-11-01T00:14:10,706Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567250116) {}
[INFO ] 2019-11-01T00:14:10,709Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:10,711Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567250116) {}
[INFO ] 2019-11-01T00:14:10,717Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:10,723Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:10,724Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:10,725Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:10,727Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:10,727Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:10,728Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:10,729Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:10,869Z [Mock network] flow.[a412dc13-fe1b-4680-a173-71e2951381c1].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-702737945857685004). {}
[INFO ] 2019-11-01T00:14:10,965Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-702737945857685004). {invocation_id=9c8a8909-e699-4782-8e63-efb1ee262cae, invocation_timestamp=2019-11-01T00:14:10.964Z, session_id=9c8a8909-e699-4782-8e63-efb1ee262cae, session_timestamp=2019-11-01T00:14:10.964Z}
[INFO ] 2019-11-01T00:14:11,206Z [Mock network] flow.[a412dc13-fe1b-4680-a173-71e2951381c1].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=744269251036596730). {}
[INFO ] 2019-11-01T00:14:11,224Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=744269251036596730). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=44e318dc-785d-4bff-9726-bc4a9c3bdc66, invocation_timestamp=2019-11-01T00:14:11.223Z, session_id=44e318dc-785d-4bff-9726-bc4a9c3bdc66, session_timestamp=2019-11-01T00:14:11.223Z}
[INFO ] 2019-11-01T00:14:11,303Z [Mock network] flow.[a412dc13-fe1b-4680-a173-71e2951381c1].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-5171841243901113056). {}
[INFO ] 2019-11-01T00:14:11,326Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-5171841243901113056). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=9f79d82e-2528-48d7-b90d-647413128c31, invocation_timestamp=2019-11-01T00:14:11.325Z, session_id=9f79d82e-2528-48d7-b90d-647413128c31, session_timestamp=2019-11-01T00:14:11.325Z}
[INFO ] 2019-11-01T00:14:11,444Z [Mock network] flow.[9fc72ded-1110-4410-84d8-73abdec83ea9].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=3540396222994861118). {}
[INFO ] 2019-11-01T00:14:11,477Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=3540396222994861118). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=c73b88c3-dc84-4d82-80d3-b14af9724481, invocation_timestamp=2019-11-01T00:14:11.476Z, session_id=c73b88c3-dc84-4d82-80d3-b14af9724481, session_timestamp=2019-11-01T00:14:11.476Z}
[INFO ] 2019-11-01T00:14:11,712Z [Mock network] flow.[597836bc-929e-4179-b1d6-48ca58f0d4ee].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=1528446019050631927). {}
[INFO ] 2019-11-01T00:14:11,765Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=1528446019050631927). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=747d54f9-06a8-45bc-9f6e-5373ef070bd3, invocation_timestamp=2019-11-01T00:14:11.763Z, session_id=747d54f9-06a8-45bc-9f6e-5373ef070bd3, session_timestamp=2019-11-01T00:14:11.763Z}
[INFO ] 2019-11-01T00:14:11,788Z [Mock network] flow.[af3c8cf1-c693-4eae-a4b0-d299d8d47aac].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:11,855Z [Mock network] flow.[af3c8cf1-c693-4eae-a4b0-d299d8d47aac].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:11,984Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:14:12,032Z [Mock network] flow.[4c910602-5e20-471b-936a-8d91e3ecc37c].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-257491225864560728). {}
[INFO ] 2019-11-01T00:14:12,057Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-257491225864560728). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=482409b6-0bd6-46d3-9073-9cb094eb88c5, invocation_timestamp=2019-11-01T00:14:12.056Z, session_id=482409b6-0bd6-46d3-9073-9cb094eb88c5, session_timestamp=2019-11-01T00:14:12.056Z}
[INFO ] 2019-11-01T00:14:12,073Z [Mock network] flow.[79e51e20-3129-46a0-a9b0-d586a7120ac4].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:12,115Z [Mock network] flow.[79e51e20-3129-46a0-a9b0-d586a7120ac4].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:12,156Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.qn7265.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:14:12,262Z [Mock network] flow.[4c910602-5e20-471b-936a-8d91e3ecc37c].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:12,292Z [Mock network] flow.[4c910602-5e20-471b-936a-8d91e3ecc37c].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:12,294Z [Mock network] flow.[4c910602-5e20-471b-936a-8d91e3ecc37c].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:12,326Z [Mock network] flow.[4c910602-5e20-471b-936a-8d91e3ecc37c].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:12,442Z [Mock network] flow.[79e51e20-3129-46a0-a9b0-d586a7120ac4].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=1881919127614816471). {}
[INFO ] 2019-11-01T00:14:12,493Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=1881919127614816471). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=0fb6a237-337e-4c57-b603-43dc7166ecc3, invocation_timestamp=2019-11-01T00:14:12.492Z, session_id=0fb6a237-337e-4c57-b603-43dc7166ecc3, session_timestamp=2019-11-01T00:14:12.492Z}
[INFO ] 2019-11-01T00:14:12,516Z [Mock network] flow.[b9a130c8-b5ac-4d74-b0c1-54ab98b1ab86].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:12,576Z [Mock network] flow.[b9a130c8-b5ac-4d74-b0c1-54ab98b1ab86].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:12,578Z [Mock network] flow.[b9a130c8-b5ac-4d74-b0c1-54ab98b1ab86].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:12,616Z [Mock network] flow.[b9a130c8-b5ac-4d74-b0c1-54ab98b1ab86].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:12,815Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:14:12,816Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:14:12,821Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6ce0fa67 {}
[INFO ] 2019-11-01T00:14:12,833Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:14:12,834Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:12,835Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:12,920Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:12,941Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:14:12,942Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567252942) {}
[INFO ] 2019-11-01T00:14:12,947Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:12,957Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567252942) {}
[INFO ] 2019-11-01T00:14:12,963Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567252942) {}
[INFO ] 2019-11-01T00:14:13,104Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:14:13,237Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:14:13,353Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:14:13,355Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:14:13,362Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:14:13,366Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:14:13,367Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:13,368Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:13,369Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:13,369Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:14:13,380Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key E8FD7B5F4F8CB270C6D0ED95215933F511C9B3F0592DBFACA625474E13E45EB4, not inserting the second time {}
[INFO ] 2019-11-01T00:14:13,385Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567252942) {}
[INFO ] 2019-11-01T00:14:13,388Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:13,389Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567252942) {}
[INFO ] 2019-11-01T00:14:13,390Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567252942) {}
[INFO ] 2019-11-01T00:14:13,391Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:13,391Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567252942) {}
[INFO ] 2019-11-01T00:14:13,393Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:14:13,394Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:14:13,417Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:14:13,429Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@1ae9d9d {}
[INFO ] 2019-11-01T00:14:13,438Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:14:13,439Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:13,439Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:13,519Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:13,527Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:14:13,528Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567253528) {}
[INFO ] 2019-11-01T00:14:13,531Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:13,533Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567253528) {}
[INFO ] 2019-11-01T00:14:13,534Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567253528) {}
[INFO ] 2019-11-01T00:14:13,653Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:14:13,761Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:14:13,871Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:14:13,873Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:14:13,883Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:14:13,884Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:13,885Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:13,886Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:13,886Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:14:13,897Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key DDB06C42B1BDBC771EF4295F4B40A02D2466DB64111E5451274DEFA70AED5277, not inserting the second time {}
[INFO ] 2019-11-01T00:14:13,905Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567252942) {}
[INFO ] 2019-11-01T00:14:13,906Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:13,917Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567252942) {}
[INFO ] 2019-11-01T00:14:13,928Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567253528) {}
[INFO ] 2019-11-01T00:14:13,930Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:13,942Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567253528) {}
[INFO ] 2019-11-01T00:14:13,944Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567253528) {}
[INFO ] 2019-11-01T00:14:13,948Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:13,952Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567253528) {}
[INFO ] 2019-11-01T00:14:13,952Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567253528) {}
[INFO ] 2019-11-01T00:14:13,954Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:13,956Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567253528) {}
[INFO ] 2019-11-01T00:14:13,958Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:14:13,960Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:14:13,979Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:14:13,992Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@35c706ae {}
[INFO ] 2019-11-01T00:14:14,008Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:14:14,011Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:14,012Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:14,072Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:14,077Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:14:14,078Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567254078) {}
[INFO ] 2019-11-01T00:14:14,081Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:14,083Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567254078) {}
[INFO ] 2019-11-01T00:14:14,084Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567254078) {}
[INFO ] 2019-11-01T00:14:14,223Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:14:14,338Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:14:14,432Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:14:14,433Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:14:14,468Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:14:14,469Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:14,470Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:14,471Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:14,471Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:14:14,481Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key B354E67CD70DAFCB6F9755B08415646EDA9F8361849538B23308913EAB6EAC75, not inserting the second time {}
[INFO ] 2019-11-01T00:14:14,488Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567252942) {}
[INFO ] 2019-11-01T00:14:14,489Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:14,500Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567252942) {}
[INFO ] 2019-11-01T00:14:14,502Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567254078) {}
[INFO ] 2019-11-01T00:14:14,503Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:14,508Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567254078) {}
[INFO ] 2019-11-01T00:14:14,509Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567253528) {}
[INFO ] 2019-11-01T00:14:14,511Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:14,515Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567253528) {}
[INFO ] 2019-11-01T00:14:14,516Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567254078) {}
[INFO ] 2019-11-01T00:14:14,517Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:14,522Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567254078) {}
[INFO ] 2019-11-01T00:14:14,523Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567254078) {}
[INFO ] 2019-11-01T00:14:14,526Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:14,527Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567254078) {}
[INFO ] 2019-11-01T00:14:14,528Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567254078) {}
[INFO ] 2019-11-01T00:14:14,529Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:14,530Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567254078) {}
[INFO ] 2019-11-01T00:14:14,532Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:14:14,533Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:14:14,543Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:14:14,549Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@476ea812 {}
[INFO ] 2019-11-01T00:14:14,556Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:14:14,557Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:14,558Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:14,615Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:14,623Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:14:14,624Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567254624) {}
[INFO ] 2019-11-01T00:14:14,628Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:14,632Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567254624) {}
[INFO ] 2019-11-01T00:14:14,633Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567254624) {}
[INFO ] 2019-11-01T00:14:14,773Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:14:14,888Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:14:14,972Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:14:14,976Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:14:14,999Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:14:15,001Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:15,002Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:15,003Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:15,003Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:14:15,017Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 94716FE3DED5F7623F5F020F98171B2571A474D1DCA29C0286B6498EA7DAFE4A, not inserting the second time {}
[INFO ] 2019-11-01T00:14:15,022Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567252942) {}
[INFO ] 2019-11-01T00:14:15,025Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:15,031Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567252942) {}
[INFO ] 2019-11-01T00:14:15,033Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567254624) {}
[INFO ] 2019-11-01T00:14:15,034Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:15,039Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567254624) {}
[INFO ] 2019-11-01T00:14:15,044Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567253528) {}
[INFO ] 2019-11-01T00:14:15,047Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:15,064Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567253528) {}
[INFO ] 2019-11-01T00:14:15,065Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567254624) {}
[INFO ] 2019-11-01T00:14:15,066Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:15,079Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567254624) {}
[INFO ] 2019-11-01T00:14:15,080Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567254078) {}
[INFO ] 2019-11-01T00:14:15,081Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:15,086Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567254078) {}
[INFO ] 2019-11-01T00:14:15,087Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567254624) {}
[INFO ] 2019-11-01T00:14:15,097Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:15,134Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567254624) {}
[INFO ] 2019-11-01T00:14:15,135Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567254624) {}
[INFO ] 2019-11-01T00:14:15,137Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:15,138Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567254624) {}
[INFO ] 2019-11-01T00:14:15,139Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567254624) {}
[INFO ] 2019-11-01T00:14:15,141Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:15,141Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567254624) {}
[INFO ] 2019-11-01T00:14:15,143Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:14:15,144Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:14:15,156Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:14:15,166Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@47ebff00 {}
[INFO ] 2019-11-01T00:14:15,173Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:14:15,173Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:15,174Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:15,273Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:15,279Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:14:15,280Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567255280) {}
[INFO ] 2019-11-01T00:14:15,288Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:15,293Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567255280) {}
[INFO ] 2019-11-01T00:14:15,294Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567255280) {}
[INFO ] 2019-11-01T00:14:15,410Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:14:15,538Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:14:15,628Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:14:15,629Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:14:15,640Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:14:15,641Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:15,642Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:15,643Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:15,644Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:14:15,654Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key D2D26E73E5173B025F0E4BD8AD081C64B17D3610A8DD5CFF9358DA497E1294D5, not inserting the second time {}
[INFO ] 2019-11-01T00:14:15,658Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567252942) {}
[INFO ] 2019-11-01T00:14:15,659Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:15,668Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567252942) {}
[INFO ] 2019-11-01T00:14:15,671Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567255280) {}
[INFO ] 2019-11-01T00:14:15,672Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:15,682Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567255280) {}
[INFO ] 2019-11-01T00:14:15,684Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567253528) {}
[INFO ] 2019-11-01T00:14:15,685Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:15,691Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567253528) {}
[INFO ] 2019-11-01T00:14:15,692Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567255280) {}
[INFO ] 2019-11-01T00:14:15,693Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:15,702Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567255280) {}
[INFO ] 2019-11-01T00:14:15,703Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567254078) {}
[INFO ] 2019-11-01T00:14:15,705Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:15,711Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567254078) {}
[INFO ] 2019-11-01T00:14:15,711Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567255280) {}
[INFO ] 2019-11-01T00:14:15,718Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:15,728Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567255280) {}
[INFO ] 2019-11-01T00:14:15,729Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567254624) {}
[INFO ] 2019-11-01T00:14:15,730Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:15,735Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567254624) {}
[INFO ] 2019-11-01T00:14:15,736Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567255280) {}
[INFO ] 2019-11-01T00:14:15,737Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:15,743Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567255280) {}
[INFO ] 2019-11-01T00:14:15,743Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567255280) {}
[INFO ] 2019-11-01T00:14:15,746Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:15,747Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567255280) {}
[INFO ] 2019-11-01T00:14:15,748Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567255280) {}
[INFO ] 2019-11-01T00:14:15,749Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:15,749Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567255280) {}
[INFO ] 2019-11-01T00:14:15,750Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:15,751Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:15,752Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:15,753Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:15,753Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:15,755Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:15,755Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:15,756Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:15,858Z [Mock network] flow.[b2803eb3-b5f7-41a7-8ccc-d872e8b925f2].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=7010638943466121151). {}
[INFO ] 2019-11-01T00:14:15,917Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=7010638943466121151). {invocation_id=d4ceb1a3-7847-45ad-913a-076259487995, invocation_timestamp=2019-11-01T00:14:15.916Z, session_id=d4ceb1a3-7847-45ad-913a-076259487995, session_timestamp=2019-11-01T00:14:15.916Z}
[INFO ] 2019-11-01T00:14:16,055Z [Mock network] flow.[b2803eb3-b5f7-41a7-8ccc-d872e8b925f2].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-8202341926853810834). {}
[INFO ] 2019-11-01T00:14:16,077Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-8202341926853810834). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=d576b863-7d13-4b66-99ed-ce45794865fd, invocation_timestamp=2019-11-01T00:14:16.075Z, session_id=d576b863-7d13-4b66-99ed-ce45794865fd, session_timestamp=2019-11-01T00:14:16.075Z}
[INFO ] 2019-11-01T00:14:16,136Z [Mock network] flow.[b2803eb3-b5f7-41a7-8ccc-d872e8b925f2].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=2874098922809542956). {}
[INFO ] 2019-11-01T00:14:16,168Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=2874098922809542956). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=8074c13f-918c-4787-b1ed-56aafffdf710, invocation_timestamp=2019-11-01T00:14:16.167Z, session_id=8074c13f-918c-4787-b1ed-56aafffdf710, session_timestamp=2019-11-01T00:14:16.167Z}
[INFO ] 2019-11-01T00:14:16,279Z [Mock network] flow.[7db0ea4b-e400-4b64-bdb7-09b6250b3254].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-1336458584194683152). {}
[INFO ] 2019-11-01T00:14:16,306Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-1336458584194683152). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=8fc9dee0-7249-4f2e-9940-66583046a754, invocation_timestamp=2019-11-01T00:14:16.305Z, session_id=8fc9dee0-7249-4f2e-9940-66583046a754, session_timestamp=2019-11-01T00:14:16.305Z}
[INFO ] 2019-11-01T00:14:16,389Z [Mock network] flow.[5c21c31b-e7b0-495e-b236-490a23d92bde].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=4914047829420455456). {}
[INFO ] 2019-11-01T00:14:16,433Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=4914047829420455456). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=e8a23f12-c9c1-46d2-b11b-6ee79533dab1, invocation_timestamp=2019-11-01T00:14:16.432Z, session_id=e8a23f12-c9c1-46d2-b11b-6ee79533dab1, session_timestamp=2019-11-01T00:14:16.432Z}
[INFO ] 2019-11-01T00:14:16,454Z [Mock network] flow.[0b123484-c932-46fb-9793-78cfce06c6de].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:16,511Z [Mock network] flow.[0b123484-c932-46fb-9793-78cfce06c6de].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:16,578Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:14:16,634Z [Mock network] flow.[d507e6e1-bbbb-4736-b047-6ff1d4333452].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-3487856129986192647). {}
[INFO ] 2019-11-01T00:14:16,646Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-3487856129986192647). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=a0610e2c-78a1-424b-b3dc-09d2121da86c, invocation_timestamp=2019-11-01T00:14:16.645Z, session_id=a0610e2c-78a1-424b-b3dc-09d2121da86c, session_timestamp=2019-11-01T00:14:16.645Z}
[INFO ] 2019-11-01T00:14:16,655Z [Mock network] flow.[dcc83612-45d9-4938-bc6e-3408d7c05165].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:16,688Z [Mock network] flow.[dcc83612-45d9-4938-bc6e-3408d7c05165].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:16,718Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.qn7265.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:14:16,766Z [Mock network] flow.[d507e6e1-bbbb-4736-b047-6ff1d4333452].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:16,792Z [Mock network] flow.[d507e6e1-bbbb-4736-b047-6ff1d4333452].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:16,794Z [Mock network] flow.[d507e6e1-bbbb-4736-b047-6ff1d4333452].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:16,817Z [Mock network] flow.[d507e6e1-bbbb-4736-b047-6ff1d4333452].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:16,915Z [Mock network] flow.[dcc83612-45d9-4938-bc6e-3408d7c05165].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=7910485296205684). {}
[INFO ] 2019-11-01T00:14:16,938Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=7910485296205684). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=00c64767-c48f-4f3d-b65a-70802815b230, invocation_timestamp=2019-11-01T00:14:16.937Z, session_id=00c64767-c48f-4f3d-b65a-70802815b230, session_timestamp=2019-11-01T00:14:16.937Z}
[INFO ] 2019-11-01T00:14:16,951Z [Mock network] flow.[10cbb4b8-0e5c-4537-b0cd-aaff3ca7b47a].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:17,002Z [Mock network] flow.[10cbb4b8-0e5c-4537-b0cd-aaff3ca7b47a].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:17,004Z [Mock network] flow.[10cbb4b8-0e5c-4537-b0cd-aaff3ca7b47a].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:17,032Z [Mock network] flow.[10cbb4b8-0e5c-4537-b0cd-aaff3ca7b47a].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:17,229Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:14:17,234Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:14:17,238Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@712628cb {}
[INFO ] 2019-11-01T00:14:17,251Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:14:17,252Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:17,252Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:17,327Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:17,334Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:14:17,335Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567257335) {}
[INFO ] 2019-11-01T00:14:17,338Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:17,343Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567257335) {}
[INFO ] 2019-11-01T00:14:17,344Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567257335) {}
[INFO ] 2019-11-01T00:14:17,476Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:14:17,599Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:14:17,690Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:14:17,691Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:14:17,699Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:14:17,702Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:14:17,703Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:17,704Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:17,705Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:17,705Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:14:17,715Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 5907CDB7A44586047C1A220EBBCB6D6CA50596F40748C4FE54FA9978E88EA44B, not inserting the second time {}
[INFO ] 2019-11-01T00:14:17,720Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567257335) {}
[INFO ] 2019-11-01T00:14:17,729Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:17,730Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567257335) {}
[INFO ] 2019-11-01T00:14:17,730Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567257335) {}
[INFO ] 2019-11-01T00:14:17,731Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:17,731Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567257335) {}
[INFO ] 2019-11-01T00:14:17,733Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:14:17,734Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:14:17,743Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:14:17,749Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@3b40cdb {}
[INFO ] 2019-11-01T00:14:17,756Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:14:17,757Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:17,758Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:17,844Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:17,850Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:14:17,851Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567257851) {}
[INFO ] 2019-11-01T00:14:17,854Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:17,857Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567257851) {}
[INFO ] 2019-11-01T00:14:17,857Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567257851) {}
[INFO ] 2019-11-01T00:14:17,994Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:14:18,108Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:14:18,198Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:14:18,199Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:14:18,209Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:14:18,210Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:18,211Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:18,212Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:18,212Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:14:18,222Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key A7F9C954FB007219F0228B240F05A5B5FFDA49A328A4E35DF9C2DBCF7572B60C, not inserting the second time {}
[INFO ] 2019-11-01T00:14:18,226Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567257335) {}
[INFO ] 2019-11-01T00:14:18,228Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:18,234Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567257335) {}
[INFO ] 2019-11-01T00:14:18,239Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567257851) {}
[INFO ] 2019-11-01T00:14:18,240Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:18,244Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567257851) {}
[INFO ] 2019-11-01T00:14:18,245Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567257851) {}
[INFO ] 2019-11-01T00:14:18,247Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:18,248Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567257851) {}
[INFO ] 2019-11-01T00:14:18,249Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567257851) {}
[INFO ] 2019-11-01T00:14:18,249Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:18,250Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567257851) {}
[INFO ] 2019-11-01T00:14:18,252Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:14:18,254Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:14:18,278Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:14:18,285Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@1f6c2546 {}
[INFO ] 2019-11-01T00:14:18,297Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:14:18,298Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:18,299Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:18,432Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:18,438Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:14:18,439Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567258439) {}
[INFO ] 2019-11-01T00:14:18,441Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:18,444Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567258439) {}
[INFO ] 2019-11-01T00:14:18,444Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567258439) {}
[INFO ] 2019-11-01T00:14:18,578Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:14:18,749Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:14:18,838Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:14:18,840Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:14:18,849Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:14:18,850Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:18,851Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:18,852Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:18,852Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:14:18,862Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 9AF5694A83B6604C213577CB02041447D1FCD1EDB2F07C13F265B6CD02231E05, not inserting the second time {}
[INFO ] 2019-11-01T00:14:18,865Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567257335) {}
[INFO ] 2019-11-01T00:14:18,867Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:18,873Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567257335) {}
[INFO ] 2019-11-01T00:14:18,874Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567258439) {}
[INFO ] 2019-11-01T00:14:18,875Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:18,879Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567258439) {}
[INFO ] 2019-11-01T00:14:18,880Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567257851) {}
[INFO ] 2019-11-01T00:14:18,881Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:18,893Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567257851) {}
[INFO ] 2019-11-01T00:14:18,894Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567258439) {}
[INFO ] 2019-11-01T00:14:18,895Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:18,899Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567258439) {}
[INFO ] 2019-11-01T00:14:18,900Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567258439) {}
[INFO ] 2019-11-01T00:14:18,902Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:18,903Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567258439) {}
[INFO ] 2019-11-01T00:14:18,904Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567258439) {}
[INFO ] 2019-11-01T00:14:18,904Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:18,905Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567258439) {}
[INFO ] 2019-11-01T00:14:18,906Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:14:18,907Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:14:18,917Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:14:18,923Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@70be74c {}
[INFO ] 2019-11-01T00:14:18,928Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:14:18,931Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:18,932Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:18,985Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:18,990Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:14:18,990Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567258990) {}
[INFO ] 2019-11-01T00:14:18,993Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:18,996Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567258990) {}
[INFO ] 2019-11-01T00:14:18,996Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567258990) {}
[INFO ] 2019-11-01T00:14:19,133Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:14:19,248Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:14:19,329Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:14:19,331Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:14:19,341Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:14:19,342Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:19,343Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:19,344Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:19,344Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:14:19,354Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key BB088660D58CB66C2BB359C9FF7FA27DEB245A8C8D507D60652B9EF1A7E6A169, not inserting the second time {}
[INFO ] 2019-11-01T00:14:19,358Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567257335) {}
[INFO ] 2019-11-01T00:14:19,364Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:19,369Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567257335) {}
[INFO ] 2019-11-01T00:14:19,369Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567258990) {}
[INFO ] 2019-11-01T00:14:19,370Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:19,374Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567258990) {}
[INFO ] 2019-11-01T00:14:19,375Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567257851) {}
[INFO ] 2019-11-01T00:14:19,376Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:19,380Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567257851) {}
[INFO ] 2019-11-01T00:14:19,381Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567258990) {}
[INFO ] 2019-11-01T00:14:19,382Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:19,386Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567258990) {}
[INFO ] 2019-11-01T00:14:19,386Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567258439) {}
[INFO ] 2019-11-01T00:14:19,388Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:19,391Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567258439) {}
[INFO ] 2019-11-01T00:14:19,392Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567258990) {}
[INFO ] 2019-11-01T00:14:19,393Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:19,396Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567258990) {}
[INFO ] 2019-11-01T00:14:19,397Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567258990) {}
[INFO ] 2019-11-01T00:14:19,399Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:19,400Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567258990) {}
[INFO ] 2019-11-01T00:14:19,401Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567258990) {}
[INFO ] 2019-11-01T00:14:19,401Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:19,402Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567258990) {}
[INFO ] 2019-11-01T00:14:19,404Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:14:19,405Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:14:19,415Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:14:19,469Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@386e7ce9 {}
[INFO ] 2019-11-01T00:14:19,482Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:14:19,483Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:19,484Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:19,569Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:19,575Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:14:19,576Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567259576) {}
[INFO ] 2019-11-01T00:14:19,579Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:19,582Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567259576) {}
[INFO ] 2019-11-01T00:14:19,582Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567259576) {}
[INFO ] 2019-11-01T00:14:19,705Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:14:19,820Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:14:19,910Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:14:19,912Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:14:19,922Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:14:19,923Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:19,924Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:19,925Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:19,926Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:14:19,935Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 6CCB347BFDA8F6CC06A76BF66D98341A2680F94FBB12C516142DE85CB5C012A7, not inserting the second time {}
[INFO ] 2019-11-01T00:14:19,939Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567257335) {}
[INFO ] 2019-11-01T00:14:19,942Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:19,947Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567257335) {}
[INFO ] 2019-11-01T00:14:19,948Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567259576) {}
[INFO ] 2019-11-01T00:14:19,949Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:19,953Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567259576) {}
[INFO ] 2019-11-01T00:14:19,953Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567257851) {}
[INFO ] 2019-11-01T00:14:19,954Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:19,958Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567257851) {}
[INFO ] 2019-11-01T00:14:19,959Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567259576) {}
[INFO ] 2019-11-01T00:14:19,960Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:19,964Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567259576) {}
[INFO ] 2019-11-01T00:14:19,965Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567258439) {}
[INFO ] 2019-11-01T00:14:19,966Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:19,969Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567258439) {}
[INFO ] 2019-11-01T00:14:19,970Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567259576) {}
[INFO ] 2019-11-01T00:14:19,971Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:19,975Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567259576) {}
[INFO ] 2019-11-01T00:14:19,975Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567258990) {}
[INFO ] 2019-11-01T00:14:19,976Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:19,980Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567258990) {}
[INFO ] 2019-11-01T00:14:19,981Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567259576) {}
[INFO ] 2019-11-01T00:14:19,982Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:19,986Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567259576) {}
[INFO ] 2019-11-01T00:14:19,986Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567259576) {}
[INFO ] 2019-11-01T00:14:19,989Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:19,990Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567259576) {}
[INFO ] 2019-11-01T00:14:19,990Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567259576) {}
[INFO ] 2019-11-01T00:14:19,991Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:19,991Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567259576) {}
[INFO ] 2019-11-01T00:14:19,992Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:19,993Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:19,993Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:19,994Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:19,994Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:19,995Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:19,996Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:19,996Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:20,056Z [Mock network] flow.[36945eae-4595-4b90-bd55-1e8987a854fb].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=2591761167186084645). {}
[INFO ] 2019-11-01T00:14:20,123Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=2591761167186084645). {invocation_id=dcf1e9b3-e2e0-4bb5-824c-a196af0b4bdd, invocation_timestamp=2019-11-01T00:14:20.115Z, session_id=dcf1e9b3-e2e0-4bb5-824c-a196af0b4bdd, session_timestamp=2019-11-01T00:14:20.115Z}
[INFO ] 2019-11-01T00:14:20,323Z [Mock network] flow.[36945eae-4595-4b90-bd55-1e8987a854fb].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-6524357802313367490). {}
[INFO ] 2019-11-01T00:14:20,338Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-6524357802313367490). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=b63b36db-5bf3-4688-a270-4c6903501726, invocation_timestamp=2019-11-01T00:14:20.338Z, session_id=b63b36db-5bf3-4688-a270-4c6903501726, session_timestamp=2019-11-01T00:14:20.338Z}
[INFO ] 2019-11-01T00:14:20,400Z [Mock network] flow.[36945eae-4595-4b90-bd55-1e8987a854fb].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=7165191137105330869). {}
[INFO ] 2019-11-01T00:14:20,420Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=7165191137105330869). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=5ff962db-33d6-4659-8320-733a7bdec539, invocation_timestamp=2019-11-01T00:14:20.419Z, session_id=5ff962db-33d6-4659-8320-733a7bdec539, session_timestamp=2019-11-01T00:14:20.419Z}
[INFO ] 2019-11-01T00:14:20,522Z [Mock network] flow.[6fe619a2-d5fe-49e0-8987-f51faa0246f7].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-5704314625569688967). {}
[INFO ] 2019-11-01T00:14:20,548Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-5704314625569688967). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=47afce36-6281-460b-a751-b948077e8906, invocation_timestamp=2019-11-01T00:14:20.547Z, session_id=47afce36-6281-460b-a751-b948077e8906, session_timestamp=2019-11-01T00:14:20.547Z}
[INFO ] 2019-11-01T00:14:20,658Z [Mock network] flow.[112ed956-14fb-4f27-9840-ebff47ac656a].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=-2243597817341912697). {}
[INFO ] 2019-11-01T00:14:20,693Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-2243597817341912697). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=8a355496-401e-468d-b3ba-8f8c479420e9, invocation_timestamp=2019-11-01T00:14:20.692Z, session_id=8a355496-401e-468d-b3ba-8f8c479420e9, session_timestamp=2019-11-01T00:14:20.692Z}
[INFO ] 2019-11-01T00:14:20,699Z [Mock network] flow.[c9bba806-4903-40df-b541-8394396e2323].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:20,741Z [Mock network] flow.[c9bba806-4903-40df-b541-8394396e2323].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:20,793Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:14:20,810Z [Mock network] flow.[40af0841-db2c-49f7-aae9-e751db4d482d].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=4154769784348087676). {}
[INFO ] 2019-11-01T00:14:20,824Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=4154769784348087676). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=f5894c9b-5df3-448d-9218-09f7cd0463a8, invocation_timestamp=2019-11-01T00:14:20.824Z, session_id=f5894c9b-5df3-448d-9218-09f7cd0463a8, session_timestamp=2019-11-01T00:14:20.824Z}
[INFO ] 2019-11-01T00:14:20,832Z [Mock network] flow.[56337684-8bb7-464e-bc03-d4fb6f32f049].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:20,870Z [Mock network] flow.[56337684-8bb7-464e-bc03-d4fb6f32f049].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:20,947Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.qn7265.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:14:21,021Z [Mock network] flow.[40af0841-db2c-49f7-aae9-e751db4d482d].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:21,045Z [Mock network] flow.[40af0841-db2c-49f7-aae9-e751db4d482d].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:21,047Z [Mock network] flow.[40af0841-db2c-49f7-aae9-e751db4d482d].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:21,073Z [Mock network] flow.[40af0841-db2c-49f7-aae9-e751db4d482d].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:21,139Z [Mock network] flow.[56337684-8bb7-464e-bc03-d4fb6f32f049].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-194902900036517019). {}
[INFO ] 2019-11-01T00:14:21,194Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-194902900036517019). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=6477662d-9b92-4bc3-99d5-81596176f1ce, invocation_timestamp=2019-11-01T00:14:21.193Z, session_id=6477662d-9b92-4bc3-99d5-81596176f1ce, session_timestamp=2019-11-01T00:14:21.193Z}
[INFO ] 2019-11-01T00:14:21,206Z [Mock network] flow.[bdc3d43e-e37b-4d06-b9f3-534122d8d96a].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:21,254Z [Mock network] flow.[bdc3d43e-e37b-4d06-b9f3-534122d8d96a].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:21,256Z [Mock network] flow.[bdc3d43e-e37b-4d06-b9f3-534122d8d96a].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:21,273Z [Mock network] flow.[bdc3d43e-e37b-4d06-b9f3-534122d8d96a].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:21,386Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:14:21,387Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:14:21,391Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@52a566cc {}
[INFO ] 2019-11-01T00:14:21,398Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:14:21,399Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:21,400Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:22,085Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:22,090Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:14:22,091Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567262090) {}
[INFO ] 2019-11-01T00:14:22,093Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:22,098Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567262090) {}
[INFO ] 2019-11-01T00:14:22,099Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567262090) {}
[INFO ] 2019-11-01T00:14:22,231Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:14:22,343Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:14:22,428Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:14:22,429Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:14:22,437Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:14:22,440Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:14:22,440Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:22,441Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:22,442Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:22,442Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:14:22,452Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 1C8CBD8FB133751408E7FA952F8DF9CC68840F3495E0CD55BED45DA1B610CA94, not inserting the second time {}
[INFO ] 2019-11-01T00:14:22,456Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567262090) {}
[INFO ] 2019-11-01T00:14:22,459Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:22,460Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567262090) {}
[INFO ] 2019-11-01T00:14:22,461Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567262090) {}
[INFO ] 2019-11-01T00:14:22,461Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:22,462Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567262090) {}
[INFO ] 2019-11-01T00:14:22,463Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:14:22,464Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:14:22,473Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:14:22,478Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@3e77444a {}
[INFO ] 2019-11-01T00:14:22,488Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:14:22,489Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:22,490Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:22,575Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:22,581Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:14:22,581Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567262581) {}
[INFO ] 2019-11-01T00:14:22,591Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:22,595Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567262581) {}
[INFO ] 2019-11-01T00:14:22,596Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567262581) {}
[INFO ] 2019-11-01T00:14:22,790Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:14:22,913Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:14:22,994Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:14:22,995Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:14:23,005Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:14:23,006Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:23,006Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:23,007Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:23,008Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:14:23,017Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 696792488CB95675FAFB8C5EE1B44BAF4889A5CFB459E79CE6B76C5A293F0B55, not inserting the second time {}
[INFO ] 2019-11-01T00:14:23,020Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567262090) {}
[INFO ] 2019-11-01T00:14:23,021Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:23,028Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567262090) {}
[INFO ] 2019-11-01T00:14:23,029Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567262581) {}
[INFO ] 2019-11-01T00:14:23,029Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:23,033Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567262581) {}
[INFO ] 2019-11-01T00:14:23,033Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567262581) {}
[INFO ] 2019-11-01T00:14:23,035Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:23,036Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567262581) {}
[INFO ] 2019-11-01T00:14:23,036Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567262581) {}
[INFO ] 2019-11-01T00:14:23,037Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:23,037Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567262581) {}
[INFO ] 2019-11-01T00:14:23,039Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:14:23,040Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:14:23,049Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:14:23,054Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@2acd7c6e {}
[INFO ] 2019-11-01T00:14:23,059Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:14:23,060Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:23,060Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:23,112Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:23,118Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:14:23,119Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567263119) {}
[INFO ] 2019-11-01T00:14:23,122Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:23,124Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567263119) {}
[INFO ] 2019-11-01T00:14:23,125Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567263119) {}
[INFO ] 2019-11-01T00:14:23,254Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:14:23,402Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:14:23,493Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:14:23,495Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:14:23,505Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:14:23,505Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:23,506Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:23,507Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:23,508Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:14:23,517Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key A1810277987205F94B25854F2F5CC4EB06943478D3E3E2F407F6136CCFC20C32, not inserting the second time {}
[INFO ] 2019-11-01T00:14:23,522Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567262090) {}
[INFO ] 2019-11-01T00:14:23,523Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:23,527Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567262090) {}
[INFO ] 2019-11-01T00:14:23,527Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567263119) {}
[INFO ] 2019-11-01T00:14:23,528Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:23,532Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567263119) {}
[INFO ] 2019-11-01T00:14:23,533Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567262581) {}
[INFO ] 2019-11-01T00:14:23,534Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:23,537Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567262581) {}
[INFO ] 2019-11-01T00:14:23,538Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567263119) {}
[INFO ] 2019-11-01T00:14:23,539Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:23,542Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567263119) {}
[INFO ] 2019-11-01T00:14:23,543Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567263119) {}
[INFO ] 2019-11-01T00:14:23,545Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:23,546Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567263119) {}
[INFO ] 2019-11-01T00:14:23,546Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567263119) {}
[INFO ] 2019-11-01T00:14:23,547Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:23,547Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567263119) {}
[INFO ] 2019-11-01T00:14:23,549Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:14:23,550Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:14:23,559Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:14:23,564Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@650f9c64 {}
[INFO ] 2019-11-01T00:14:23,572Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:14:23,573Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:23,574Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:23,633Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:23,638Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:14:23,640Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567263640) {}
[INFO ] 2019-11-01T00:14:23,644Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:23,646Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567263640) {}
[INFO ] 2019-11-01T00:14:23,647Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567263640) {}
[INFO ] 2019-11-01T00:14:23,763Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:14:23,875Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:14:23,964Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:14:23,965Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:14:23,974Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:14:23,975Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:23,976Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:23,976Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:23,977Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:14:24,018Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 90728D5D2368DD4D38654C6A43F0DE2EE93FB16421CD34AB0D95C966CE24EA62, not inserting the second time {}
[INFO ] 2019-11-01T00:14:24,021Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567262090) {}
[INFO ] 2019-11-01T00:14:24,028Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:24,034Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567262090) {}
[INFO ] 2019-11-01T00:14:24,035Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567263640) {}
[INFO ] 2019-11-01T00:14:24,036Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:24,047Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567263640) {}
[INFO ] 2019-11-01T00:14:24,048Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567262581) {}
[INFO ] 2019-11-01T00:14:24,049Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:24,053Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567262581) {}
[INFO ] 2019-11-01T00:14:24,053Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567263640) {}
[INFO ] 2019-11-01T00:14:24,064Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:24,069Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567263640) {}
[INFO ] 2019-11-01T00:14:24,069Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567263119) {}
[INFO ] 2019-11-01T00:14:24,070Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:24,081Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567263119) {}
[INFO ] 2019-11-01T00:14:24,082Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567263640) {}
[INFO ] 2019-11-01T00:14:24,083Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:24,086Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567263640) {}
[INFO ] 2019-11-01T00:14:24,087Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567263640) {}
[INFO ] 2019-11-01T00:14:24,089Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:24,090Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567263640) {}
[INFO ] 2019-11-01T00:14:24,090Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567263640) {}
[INFO ] 2019-11-01T00:14:24,091Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:24,091Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567263640) {}
[INFO ] 2019-11-01T00:14:24,095Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:14:24,096Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:14:24,105Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:14:24,113Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@4f34a7e1 {}
[INFO ] 2019-11-01T00:14:24,117Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:14:24,118Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:24,119Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:24,178Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:24,183Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:14:24,184Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567264184) {}
[INFO ] 2019-11-01T00:14:24,186Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:24,188Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567264184) {}
[INFO ] 2019-11-01T00:14:24,189Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567264184) {}
[INFO ] 2019-11-01T00:14:24,313Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:14:24,429Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:14:24,510Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:14:24,512Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:14:24,521Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:14:24,523Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:24,524Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:24,524Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:24,525Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:14:24,534Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 5A1DB753DA5DB81DB40634ED32988F09F8B1296F80D2D15137F2FEB5AF43A756, not inserting the second time {}
[INFO ] 2019-11-01T00:14:24,537Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567262090) {}
[INFO ] 2019-11-01T00:14:24,543Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:24,547Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567262090) {}
[INFO ] 2019-11-01T00:14:24,548Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567264184) {}
[INFO ] 2019-11-01T00:14:24,549Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:24,554Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567264184) {}
[INFO ] 2019-11-01T00:14:24,556Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567262581) {}
[INFO ] 2019-11-01T00:14:24,562Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:24,566Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567262581) {}
[INFO ] 2019-11-01T00:14:24,566Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567264184) {}
[INFO ] 2019-11-01T00:14:24,567Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:24,571Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567264184) {}
[INFO ] 2019-11-01T00:14:24,572Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567263119) {}
[INFO ] 2019-11-01T00:14:24,573Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:24,576Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567263119) {}
[INFO ] 2019-11-01T00:14:24,577Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567264184) {}
[INFO ] 2019-11-01T00:14:24,578Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:24,581Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567264184) {}
[INFO ] 2019-11-01T00:14:24,582Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567263640) {}
[INFO ] 2019-11-01T00:14:24,583Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:24,586Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567263640) {}
[INFO ] 2019-11-01T00:14:24,586Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567264184) {}
[INFO ] 2019-11-01T00:14:24,587Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:24,591Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567264184) {}
[INFO ] 2019-11-01T00:14:24,591Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567264184) {}
[INFO ] 2019-11-01T00:14:24,593Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:24,594Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567264184) {}
[INFO ] 2019-11-01T00:14:24,594Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567264184) {}
[INFO ] 2019-11-01T00:14:24,595Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:24,596Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567264184) {}
[INFO ] 2019-11-01T00:14:24,596Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:24,597Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:24,597Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:24,598Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:24,599Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:24,599Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:24,600Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:24,600Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:24,683Z [Mock network] flow.[dbd8c45d-25a8-45af-a0bb-c1ec1ba0e428].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-1976583775623895845). {}
[INFO ] 2019-11-01T00:14:24,728Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-1976583775623895845). {invocation_id=aaaacf66-18e3-44e2-956c-ac2c4d2c36a9, invocation_timestamp=2019-11-01T00:14:24.726Z, session_id=aaaacf66-18e3-44e2-956c-ac2c4d2c36a9, session_timestamp=2019-11-01T00:14:24.726Z}
[INFO ] 2019-11-01T00:14:24,848Z [Mock network] flow.[dbd8c45d-25a8-45af-a0bb-c1ec1ba0e428].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=4614726688607851459). {}
[INFO ] 2019-11-01T00:14:24,862Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=4614726688607851459). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=3b7b4df3-1e50-4eb0-a51d-818ba15b9ea1, invocation_timestamp=2019-11-01T00:14:24.861Z, session_id=3b7b4df3-1e50-4eb0-a51d-818ba15b9ea1, session_timestamp=2019-11-01T00:14:24.861Z}
[INFO ] 2019-11-01T00:14:24,887Z [Mock network] flow.[dbd8c45d-25a8-45af-a0bb-c1ec1ba0e428].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-8946856825593653593). {}
[INFO ] 2019-11-01T00:14:24,908Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-8946856825593653593). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=de271cb9-4f0c-4c5f-beef-d7f2c2218717, invocation_timestamp=2019-11-01T00:14:24.906Z, session_id=de271cb9-4f0c-4c5f-beef-d7f2c2218717, session_timestamp=2019-11-01T00:14:24.906Z}
[INFO ] 2019-11-01T00:14:25,023Z [Mock network] flow.[1f299eb2-7d70-4d7c-b48e-dae460c2f9e5].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-1880891686076877372). {}
[INFO ] 2019-11-01T00:14:25,046Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-1880891686076877372). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=4785c566-a895-4dad-ac03-bb60c7d2330e, invocation_timestamp=2019-11-01T00:14:25.045Z, session_id=4785c566-a895-4dad-ac03-bb60c7d2330e, session_timestamp=2019-11-01T00:14:25.045Z}
[INFO ] 2019-11-01T00:14:25,133Z [Mock network] flow.[bbb25122-d4a2-43aa-a0fd-0b226799389b].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=-5591786055979150252). {}
[INFO ] 2019-11-01T00:14:25,159Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-5591786055979150252). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=cc9c3187-5711-410b-b9a2-49a7e55bd2ea, invocation_timestamp=2019-11-01T00:14:25.158Z, session_id=cc9c3187-5711-410b-b9a2-49a7e55bd2ea, session_timestamp=2019-11-01T00:14:25.158Z}
[INFO ] 2019-11-01T00:14:25,168Z [Mock network] flow.[85b742d2-25ab-4e7e-a8e3-c861ad0d0fef].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:25,213Z [Mock network] flow.[85b742d2-25ab-4e7e-a8e3-c861ad0d0fef].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:25,266Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:14:25,285Z [Mock network] flow.[936f59a2-eb8a-4d7e-9a1b-2289a6af11b1].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-2020179121938745688). {}
[INFO ] 2019-11-01T00:14:25,333Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-2020179121938745688). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=865acdfb-f251-4909-a48a-bbfc2c35eb50, invocation_timestamp=2019-11-01T00:14:25.332Z, session_id=865acdfb-f251-4909-a48a-bbfc2c35eb50, session_timestamp=2019-11-01T00:14:25.332Z}
[INFO ] 2019-11-01T00:14:25,345Z [Mock network] flow.[75db9bd3-3ce2-46e6-9bb9-c27907943436].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:25,398Z [Mock network] flow.[75db9bd3-3ce2-46e6-9bb9-c27907943436].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:25,425Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.qn7265.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:14:25,471Z [Mock network] flow.[936f59a2-eb8a-4d7e-9a1b-2289a6af11b1].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:25,483Z [Mock network] flow.[936f59a2-eb8a-4d7e-9a1b-2289a6af11b1].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:25,485Z [Mock network] flow.[936f59a2-eb8a-4d7e-9a1b-2289a6af11b1].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:25,498Z [Mock network] flow.[936f59a2-eb8a-4d7e-9a1b-2289a6af11b1].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:25,588Z [Mock network] flow.[75db9bd3-3ce2-46e6-9bb9-c27907943436].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-5962184696171998483). {}
[INFO ] 2019-11-01T00:14:25,599Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-5962184696171998483). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=72619fd0-c7b1-4c58-9d38-d33102115f3e, invocation_timestamp=2019-11-01T00:14:25.598Z, session_id=72619fd0-c7b1-4c58-9d38-d33102115f3e, session_timestamp=2019-11-01T00:14:25.598Z}
[INFO ] 2019-11-01T00:14:25,609Z [Mock network] flow.[fe390a75-ac45-44dc-b24f-6d89407595a0].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:25,645Z [Mock network] flow.[fe390a75-ac45-44dc-b24f-6d89407595a0].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:25,646Z [Mock network] flow.[fe390a75-ac45-44dc-b24f-6d89407595a0].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:25,662Z [Mock network] flow.[fe390a75-ac45-44dc-b24f-6d89407595a0].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:25,849Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:14:25,850Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:14:25,854Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@2cedc072 {}
[INFO ] 2019-11-01T00:14:25,860Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:14:25,861Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:25,862Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:25,928Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:25,937Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:14:25,937Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567265937) {}
[INFO ] 2019-11-01T00:14:25,945Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:25,960Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567265937) {}
[INFO ] 2019-11-01T00:14:25,961Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567265937) {}
[INFO ] 2019-11-01T00:14:26,108Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:14:26,237Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:14:26,325Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:14:26,327Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:14:26,334Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:14:26,337Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:14:26,338Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:26,338Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:26,339Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:26,340Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:14:26,352Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key F546001481DF50D0E38A439C280C1806EE78048ABF28F0D771C1B0FFBE23C0CC, not inserting the second time {}
[INFO ] 2019-11-01T00:14:26,360Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567265937) {}
[INFO ] 2019-11-01T00:14:26,362Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:26,363Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567265937) {}
[INFO ] 2019-11-01T00:14:26,363Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567265937) {}
[INFO ] 2019-11-01T00:14:26,364Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:26,364Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567265937) {}
[INFO ] 2019-11-01T00:14:26,366Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:14:26,367Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:14:26,375Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:14:26,380Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@15e7fca {}
[INFO ] 2019-11-01T00:14:26,384Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:14:26,385Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:26,386Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:26,460Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:26,465Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:14:26,466Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567266466) {}
[INFO ] 2019-11-01T00:14:26,469Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:26,472Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567266466) {}
[INFO ] 2019-11-01T00:14:26,473Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567266466) {}
[INFO ] 2019-11-01T00:14:26,659Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:14:26,768Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:14:26,847Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:14:26,848Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:14:26,857Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:14:26,858Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:26,859Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:26,859Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:26,860Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:14:26,869Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key D285B51AD30D314F094E892A8D8E4CB97CB696BC64EB0983E901CEDC6D10B170, not inserting the second time {}
[INFO ] 2019-11-01T00:14:26,873Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567265937) {}
[INFO ] 2019-11-01T00:14:26,874Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:26,878Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567265937) {}
[INFO ] 2019-11-01T00:14:26,878Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567266466) {}
[INFO ] 2019-11-01T00:14:26,879Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:26,883Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567266466) {}
[INFO ] 2019-11-01T00:14:26,883Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567266466) {}
[INFO ] 2019-11-01T00:14:26,885Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:26,886Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567266466) {}
[INFO ] 2019-11-01T00:14:26,886Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567266466) {}
[INFO ] 2019-11-01T00:14:26,886Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:26,887Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567266466) {}
[INFO ] 2019-11-01T00:14:26,889Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:14:26,890Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:14:26,899Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:14:26,904Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@78b70dc2 {}
[INFO ] 2019-11-01T00:14:26,915Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:14:26,916Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:26,916Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:26,986Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:26,999Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:14:26,999Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567266999) {}
[INFO ] 2019-11-01T00:14:27,002Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:27,012Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567266999) {}
[INFO ] 2019-11-01T00:14:27,013Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567266999) {}
[INFO ] 2019-11-01T00:14:27,134Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:14:27,246Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:14:27,333Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:14:27,334Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:14:27,343Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:14:27,393Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:27,393Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:27,394Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:27,395Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:14:27,405Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 64E35E794D72C4F7C1CEA4ED02F1A4E58056B2668C5EE6A8023FAB4B4767CF2D, not inserting the second time {}
[INFO ] 2019-11-01T00:14:27,408Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567265937) {}
[INFO ] 2019-11-01T00:14:27,409Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:27,413Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567265937) {}
[INFO ] 2019-11-01T00:14:27,414Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567266999) {}
[INFO ] 2019-11-01T00:14:27,415Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:27,419Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567266999) {}
[INFO ] 2019-11-01T00:14:27,419Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567266466) {}
[INFO ] 2019-11-01T00:14:27,420Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:27,423Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567266466) {}
[INFO ] 2019-11-01T00:14:27,424Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567266999) {}
[INFO ] 2019-11-01T00:14:27,425Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:27,428Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567266999) {}
[INFO ] 2019-11-01T00:14:27,430Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567266999) {}
[INFO ] 2019-11-01T00:14:27,433Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:27,433Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567266999) {}
[INFO ] 2019-11-01T00:14:27,434Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567266999) {}
[INFO ] 2019-11-01T00:14:27,435Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:27,435Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567266999) {}
[INFO ] 2019-11-01T00:14:27,438Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:14:27,438Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:14:27,449Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:14:27,454Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@2b6e2f21 {}
[INFO ] 2019-11-01T00:14:27,460Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:14:27,461Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:27,462Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:27,526Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:27,532Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:14:27,533Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567267533) {}
[INFO ] 2019-11-01T00:14:27,537Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:27,541Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567267533) {}
[INFO ] 2019-11-01T00:14:27,542Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567267533) {}
[INFO ] 2019-11-01T00:14:27,681Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:14:27,796Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:14:27,884Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:14:27,885Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:14:27,894Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:14:27,896Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:27,897Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:27,897Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:27,898Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:14:27,907Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 983DD4A84676CD0545C719A25D21D039B4919A67FAF527FFFEDA91236473E665, not inserting the second time {}
[INFO ] 2019-11-01T00:14:27,911Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567265937) {}
[INFO ] 2019-11-01T00:14:27,911Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:27,916Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567265937) {}
[INFO ] 2019-11-01T00:14:27,917Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567267533) {}
[INFO ] 2019-11-01T00:14:27,918Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:27,923Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567267533) {}
[INFO ] 2019-11-01T00:14:27,924Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567266466) {}
[INFO ] 2019-11-01T00:14:27,925Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:27,931Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567266466) {}
[INFO ] 2019-11-01T00:14:27,935Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567267533) {}
[INFO ] 2019-11-01T00:14:27,937Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:27,941Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567267533) {}
[INFO ] 2019-11-01T00:14:27,941Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567266999) {}
[INFO ] 2019-11-01T00:14:27,943Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:27,946Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567266999) {}
[INFO ] 2019-11-01T00:14:27,947Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567267533) {}
[INFO ] 2019-11-01T00:14:27,948Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:27,953Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567267533) {}
[INFO ] 2019-11-01T00:14:27,954Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567267533) {}
[INFO ] 2019-11-01T00:14:27,957Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:27,957Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567267533) {}
[INFO ] 2019-11-01T00:14:27,958Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567267533) {}
[INFO ] 2019-11-01T00:14:27,958Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:27,959Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567267533) {}
[INFO ] 2019-11-01T00:14:27,961Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:14:27,962Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:14:27,974Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:14:27,978Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@1e2d16b7 {}
[INFO ] 2019-11-01T00:14:27,985Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:14:27,986Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:27,986Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:28,040Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:28,045Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:14:28,046Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567268046) {}
[INFO ] 2019-11-01T00:14:28,048Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:28,050Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567268046) {}
[INFO ] 2019-11-01T00:14:28,051Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567268046) {}
[INFO ] 2019-11-01T00:14:28,229Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:14:28,343Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:14:28,431Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:14:28,432Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:14:28,447Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:14:28,448Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:28,448Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:28,449Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:28,449Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:14:28,461Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 1870A4CD734482B274DBAD1DB4D11BC068FFC914C68BCED7F959AD661EEF02D7, not inserting the second time {}
[INFO ] 2019-11-01T00:14:28,469Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567265937) {}
[INFO ] 2019-11-01T00:14:28,470Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:28,473Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567265937) {}
[INFO ] 2019-11-01T00:14:28,474Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567268046) {}
[INFO ] 2019-11-01T00:14:28,475Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:28,478Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567268046) {}
[INFO ] 2019-11-01T00:14:28,479Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567266466) {}
[INFO ] 2019-11-01T00:14:28,479Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:28,482Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567266466) {}
[INFO ] 2019-11-01T00:14:28,483Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567268046) {}
[INFO ] 2019-11-01T00:14:28,484Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:28,487Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567268046) {}
[INFO ] 2019-11-01T00:14:28,487Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567266999) {}
[INFO ] 2019-11-01T00:14:28,488Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:28,491Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567266999) {}
[INFO ] 2019-11-01T00:14:28,492Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567268046) {}
[INFO ] 2019-11-01T00:14:28,493Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:28,495Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567268046) {}
[INFO ] 2019-11-01T00:14:28,496Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567267533) {}
[INFO ] 2019-11-01T00:14:28,497Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:28,500Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567267533) {}
[INFO ] 2019-11-01T00:14:28,501Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567268046) {}
[INFO ] 2019-11-01T00:14:28,501Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:28,505Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567268046) {}
[INFO ] 2019-11-01T00:14:28,505Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567268046) {}
[INFO ] 2019-11-01T00:14:28,507Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:28,508Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567268046) {}
[INFO ] 2019-11-01T00:14:28,508Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567268046) {}
[INFO ] 2019-11-01T00:14:28,509Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:28,509Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567268046) {}
[INFO ] 2019-11-01T00:14:28,510Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:28,510Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:28,511Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:28,511Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:28,512Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:28,512Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:28,513Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:28,513Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:28,582Z [Mock network] flow.[354a54ce-cd0d-48d4-91f6-02c5e873952e].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-3615515180394824071). {}
[INFO ] 2019-11-01T00:14:28,635Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-3615515180394824071). {invocation_id=a282a4ee-bbaf-4c92-8713-af4c8c4ec566, invocation_timestamp=2019-11-01T00:14:28.635Z, session_id=a282a4ee-bbaf-4c92-8713-af4c8c4ec566, session_timestamp=2019-11-01T00:14:28.635Z}
[INFO ] 2019-11-01T00:14:28,781Z [Mock network] flow.[354a54ce-cd0d-48d4-91f6-02c5e873952e].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=2383598616802584761). {}
[INFO ] 2019-11-01T00:14:28,789Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=2383598616802584761). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=194e7c86-4f25-455d-804e-869a38242a64, invocation_timestamp=2019-11-01T00:14:28.788Z, session_id=194e7c86-4f25-455d-804e-869a38242a64, session_timestamp=2019-11-01T00:14:28.788Z}
[INFO ] 2019-11-01T00:14:28,820Z [Mock network] flow.[354a54ce-cd0d-48d4-91f6-02c5e873952e].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=7779331347274761947). {}
[INFO ] 2019-11-01T00:14:28,833Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=7779331347274761947). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=2f9a9df9-d75a-49ee-b919-84b636cd48ef, invocation_timestamp=2019-11-01T00:14:28.830Z, session_id=2f9a9df9-d75a-49ee-b919-84b636cd48ef, session_timestamp=2019-11-01T00:14:28.830Z}
[INFO ] 2019-11-01T00:14:28,907Z [Mock network] flow.[07c8e7e5-6485-476f-b088-f070008a1593].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=4193869318316671376). {}
[INFO ] 2019-11-01T00:14:28,935Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=4193869318316671376). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=2ef6f558-d20d-40a7-b5eb-69ae0732a0f6, invocation_timestamp=2019-11-01T00:14:28.935Z, session_id=2ef6f558-d20d-40a7-b5eb-69ae0732a0f6, session_timestamp=2019-11-01T00:14:28.935Z}
[INFO ] 2019-11-01T00:14:28,983Z [Mock network] flow.[8b369308-a945-4434-8256-4d056cd6926e].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=-7953629911323902582). {}
[INFO ] 2019-11-01T00:14:29,011Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-7953629911323902582). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=9711c551-f9eb-40ca-a3de-a4c1a97c5fa6, invocation_timestamp=2019-11-01T00:14:29.010Z, session_id=9711c551-f9eb-40ca-a3de-a4c1a97c5fa6, session_timestamp=2019-11-01T00:14:29.010Z}
[INFO ] 2019-11-01T00:14:29,030Z [Mock network] flow.[da85ddd7-e753-4a4c-9006-211ad6fbefe0].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:29,061Z [Mock network] flow.[da85ddd7-e753-4a4c-9006-211ad6fbefe0].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:29,480Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:14:29,498Z [Mock network] flow.[2772b523-8d6a-4018-bb58-955a8b1dfb82].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-7410479235343300419). {}
[INFO ] 2019-11-01T00:14:29,509Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-7410479235343300419). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=86693d6f-c7ff-4b38-8c50-1ec5b968094d, invocation_timestamp=2019-11-01T00:14:29.509Z, session_id=86693d6f-c7ff-4b38-8c50-1ec5b968094d, session_timestamp=2019-11-01T00:14:29.509Z}
[INFO ] 2019-11-01T00:14:29,516Z [Mock network] flow.[cd7e6b6f-09d5-4252-897c-5dede78ac3b4].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:29,553Z [Mock network] flow.[cd7e6b6f-09d5-4252-897c-5dede78ac3b4].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:29,578Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.qn7265.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:14:29,618Z [Mock network] flow.[2772b523-8d6a-4018-bb58-955a8b1dfb82].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:29,642Z [Mock network] flow.[2772b523-8d6a-4018-bb58-955a8b1dfb82].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:29,643Z [Mock network] flow.[2772b523-8d6a-4018-bb58-955a8b1dfb82].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:29,676Z [Mock network] flow.[2772b523-8d6a-4018-bb58-955a8b1dfb82].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:29,740Z [Mock network] flow.[cd7e6b6f-09d5-4252-897c-5dede78ac3b4].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-7178750802282366918). {}
[INFO ] 2019-11-01T00:14:29,759Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-7178750802282366918). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=89aff764-5a47-41d0-9a00-e636668c5e5b, invocation_timestamp=2019-11-01T00:14:29.758Z, session_id=89aff764-5a47-41d0-9a00-e636668c5e5b, session_timestamp=2019-11-01T00:14:29.758Z}
[INFO ] 2019-11-01T00:14:29,768Z [Mock network] flow.[9962e0f4-db3b-4815-a50f-ff8b172d0785].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:29,813Z [Mock network] flow.[9962e0f4-db3b-4815-a50f-ff8b172d0785].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:29,815Z [Mock network] flow.[9962e0f4-db3b-4815-a50f-ff8b172d0785].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:29,832Z [Mock network] flow.[9962e0f4-db3b-4815-a50f-ff8b172d0785].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:29,938Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:14:29,939Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:14:29,942Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@8d3455d {}
[INFO ] 2019-11-01T00:14:29,953Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:14:29,954Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:29,955Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:30,008Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:30,014Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:14:30,014Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567270014) {}
[INFO ] 2019-11-01T00:14:30,017Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:30,022Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567270014) {}
[INFO ] 2019-11-01T00:14:30,022Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567270014) {}
[INFO ] 2019-11-01T00:14:30,149Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:14:30,263Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:14:30,344Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:14:30,345Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:14:30,357Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:14:30,360Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:14:30,376Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:30,377Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:30,377Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:30,378Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:14:30,387Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key D84E7636E090F0BF80C42B21B0DD4384EA34C374BA1B0F1C99B12B0730C067C9, not inserting the second time {}
[INFO ] 2019-11-01T00:14:30,391Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567270014) {}
[INFO ] 2019-11-01T00:14:30,396Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:30,397Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567270014) {}
[INFO ] 2019-11-01T00:14:30,398Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567270014) {}
[INFO ] 2019-11-01T00:14:30,398Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:30,399Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567270014) {}
[INFO ] 2019-11-01T00:14:30,401Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:14:30,401Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:14:30,410Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:14:30,414Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@67fbff78 {}
[INFO ] 2019-11-01T00:14:30,420Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:14:30,421Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:30,422Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:30,467Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:30,472Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:14:30,473Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567270473) {}
[INFO ] 2019-11-01T00:14:30,475Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:30,477Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567270473) {}
[INFO ] 2019-11-01T00:14:30,478Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567270473) {}
[INFO ] 2019-11-01T00:14:30,599Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:14:30,717Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:14:30,809Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:14:30,810Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:14:30,821Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:14:30,822Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:30,823Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:30,823Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:30,824Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:14:30,833Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key CAFFF88E9BBD2CA43E11ABC4B40A3536829A3159994227325E5C92F06D651DED, not inserting the second time {}
[INFO ] 2019-11-01T00:14:30,836Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567270014) {}
[INFO ] 2019-11-01T00:14:30,837Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:30,841Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567270014) {}
[INFO ] 2019-11-01T00:14:30,841Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567270473) {}
[INFO ] 2019-11-01T00:14:30,842Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:30,845Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567270473) {}
[INFO ] 2019-11-01T00:14:30,846Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567270473) {}
[INFO ] 2019-11-01T00:14:30,848Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:30,848Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567270473) {}
[INFO ] 2019-11-01T00:14:30,849Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567270473) {}
[INFO ] 2019-11-01T00:14:30,849Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:30,850Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567270473) {}
[INFO ] 2019-11-01T00:14:30,852Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:14:30,852Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:14:30,860Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:14:30,865Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6d6561cb {}
[INFO ] 2019-11-01T00:14:30,873Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:14:30,874Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:30,875Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:30,922Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:30,957Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:14:30,958Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567270958) {}
[INFO ] 2019-11-01T00:14:30,965Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:30,967Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567270958) {}
[INFO ] 2019-11-01T00:14:30,967Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567270958) {}
[INFO ] 2019-11-01T00:14:31,101Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:14:31,214Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:14:31,303Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:14:31,304Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:14:31,318Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:14:31,319Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:31,320Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:31,320Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:31,321Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:14:31,330Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 39E64619A65BC73CAE2E1CC8C436484B7904C6AD34CA319B8E1C43EF76037B0B, not inserting the second time {}
[INFO ] 2019-11-01T00:14:31,334Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567270014) {}
[INFO ] 2019-11-01T00:14:31,335Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:31,339Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567270014) {}
[INFO ] 2019-11-01T00:14:31,340Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567270958) {}
[INFO ] 2019-11-01T00:14:31,341Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:31,346Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567270958) {}
[INFO ] 2019-11-01T00:14:31,346Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567270473) {}
[INFO ] 2019-11-01T00:14:31,347Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:31,350Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567270473) {}
[INFO ] 2019-11-01T00:14:31,351Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567270958) {}
[INFO ] 2019-11-01T00:14:31,352Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:31,357Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567270958) {}
[INFO ] 2019-11-01T00:14:31,357Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567270958) {}
[INFO ] 2019-11-01T00:14:31,361Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:31,361Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567270958) {}
[INFO ] 2019-11-01T00:14:31,362Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567270958) {}
[INFO ] 2019-11-01T00:14:31,363Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:31,363Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567270958) {}
[INFO ] 2019-11-01T00:14:31,365Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:14:31,366Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:14:31,374Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:14:31,379Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@2fef9d82 {}
[INFO ] 2019-11-01T00:14:31,384Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:14:31,385Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:31,386Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:31,441Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:31,446Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:14:31,447Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567271447) {}
[INFO ] 2019-11-01T00:14:31,450Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:31,452Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567271447) {}
[INFO ] 2019-11-01T00:14:31,452Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567271447) {}
[INFO ] 2019-11-01T00:14:31,564Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:14:31,703Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:14:31,793Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:14:31,794Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:14:31,803Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:14:31,804Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:31,805Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:31,805Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:31,806Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:14:31,815Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key E818E856D1C2AAB5694C0D725031E255ACDBF16CA3CE25A3FF60C8ED870C91FA, not inserting the second time {}
[INFO ] 2019-11-01T00:14:31,818Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567270014) {}
[INFO ] 2019-11-01T00:14:31,823Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:31,830Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567270014) {}
[INFO ] 2019-11-01T00:14:31,831Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567271447) {}
[INFO ] 2019-11-01T00:14:31,832Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:31,835Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567271447) {}
[INFO ] 2019-11-01T00:14:31,839Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567270473) {}
[INFO ] 2019-11-01T00:14:31,840Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:31,845Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567270473) {}
[INFO ] 2019-11-01T00:14:31,846Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567271447) {}
[INFO ] 2019-11-01T00:14:31,847Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:31,851Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567271447) {}
[INFO ] 2019-11-01T00:14:31,852Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567270958) {}
[INFO ] 2019-11-01T00:14:31,853Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:31,856Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567270958) {}
[INFO ] 2019-11-01T00:14:31,857Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567271447) {}
[INFO ] 2019-11-01T00:14:31,858Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:31,860Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567271447) {}
[INFO ] 2019-11-01T00:14:31,861Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567271447) {}
[INFO ] 2019-11-01T00:14:31,863Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:31,864Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567271447) {}
[INFO ] 2019-11-01T00:14:31,864Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567271447) {}
[INFO ] 2019-11-01T00:14:31,865Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:31,866Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567271447) {}
[INFO ] 2019-11-01T00:14:31,868Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:14:31,868Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:14:31,877Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:14:31,881Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@745c5f30 {}
[INFO ] 2019-11-01T00:14:31,887Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:14:31,888Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:31,888Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:31,936Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:31,941Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:14:31,942Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567271942) {}
[INFO ] 2019-11-01T00:14:31,944Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:31,946Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567271942) {}
[INFO ] 2019-11-01T00:14:31,947Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567271942) {}
[INFO ] 2019-11-01T00:14:32,081Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:14:32,189Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:14:32,277Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:14:32,279Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:14:32,287Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:14:32,288Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:32,289Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:32,289Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:32,290Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:14:32,320Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key B738435B6C1CB0F119C54492582DFF119CE13F388AB634EAF5EC2C2088686259, not inserting the second time {}
[INFO ] 2019-11-01T00:14:32,328Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567270014) {}
[INFO ] 2019-11-01T00:14:32,330Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:32,342Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567270014) {}
[INFO ] 2019-11-01T00:14:32,342Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567271942) {}
[INFO ] 2019-11-01T00:14:32,343Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:32,346Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567271942) {}
[INFO ] 2019-11-01T00:14:32,347Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567270473) {}
[INFO ] 2019-11-01T00:14:32,348Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:32,351Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567270473) {}
[INFO ] 2019-11-01T00:14:32,351Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567271942) {}
[INFO ] 2019-11-01T00:14:32,352Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:32,355Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567271942) {}
[INFO ] 2019-11-01T00:14:32,356Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567270958) {}
[INFO ] 2019-11-01T00:14:32,357Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:32,359Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567270958) {}
[INFO ] 2019-11-01T00:14:32,360Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567271942) {}
[INFO ] 2019-11-01T00:14:32,361Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:32,364Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567271942) {}
[INFO ] 2019-11-01T00:14:32,364Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567271447) {}
[INFO ] 2019-11-01T00:14:32,365Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:32,368Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567271447) {}
[INFO ] 2019-11-01T00:14:32,368Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567271942) {}
[INFO ] 2019-11-01T00:14:32,369Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:32,380Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567271942) {}
[INFO ] 2019-11-01T00:14:32,381Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567271942) {}
[INFO ] 2019-11-01T00:14:32,383Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:32,383Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567271942) {}
[INFO ] 2019-11-01T00:14:32,384Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567271942) {}
[INFO ] 2019-11-01T00:14:32,384Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:32,385Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567271942) {}
[INFO ] 2019-11-01T00:14:32,386Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:32,386Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:32,387Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:32,389Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:32,389Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:32,390Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:32,390Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:32,391Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:32,442Z [Mock network] flow.[e6fab825-c069-4695-8f19-a7447490baeb].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=2960301276389837977). {}
[INFO ] 2019-11-01T00:14:32,497Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=2960301276389837977). {invocation_id=055e7810-c538-4898-9770-83cda917aebd, invocation_timestamp=2019-11-01T00:14:32.497Z, session_id=055e7810-c538-4898-9770-83cda917aebd, session_timestamp=2019-11-01T00:14:32.497Z}
[INFO ] 2019-11-01T00:14:32,643Z [Mock network] flow.[e6fab825-c069-4695-8f19-a7447490baeb].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-3531040869950150234). {}
[INFO ] 2019-11-01T00:14:32,668Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-3531040869950150234). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=ef40c670-82fb-4cca-bc03-68446685b597, invocation_timestamp=2019-11-01T00:14:32.667Z, session_id=ef40c670-82fb-4cca-bc03-68446685b597, session_timestamp=2019-11-01T00:14:32.667Z}
[INFO ] 2019-11-01T00:14:32,713Z [Mock network] flow.[e6fab825-c069-4695-8f19-a7447490baeb].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-2649026960928914459). {}
[INFO ] 2019-11-01T00:14:32,732Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-2649026960928914459). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=359bfbf3-f36c-4947-974a-d36e2712fd96, invocation_timestamp=2019-11-01T00:14:32.731Z, session_id=359bfbf3-f36c-4947-974a-d36e2712fd96, session_timestamp=2019-11-01T00:14:32.731Z}
[INFO ] 2019-11-01T00:14:32,833Z [Mock network] flow.[bfb0b36f-c994-436f-a1bc-434ebeeddd69].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-899371885938772293). {}
[INFO ] 2019-11-01T00:14:32,865Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-899371885938772293). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=42fa06a7-1750-4fa7-b839-701bc567a463, invocation_timestamp=2019-11-01T00:14:32.864Z, session_id=42fa06a7-1750-4fa7-b839-701bc567a463, session_timestamp=2019-11-01T00:14:32.864Z}
[INFO ] 2019-11-01T00:14:32,931Z [Mock network] flow.[b2aa96bd-2b6c-4a13-b506-52b93468ab30].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=-8301081126036473959). {}
[INFO ] 2019-11-01T00:14:32,973Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-8301081126036473959). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=ff006209-37e1-487d-a414-3caa0b70ee5d, invocation_timestamp=2019-11-01T00:14:32.972Z, session_id=ff006209-37e1-487d-a414-3caa0b70ee5d, session_timestamp=2019-11-01T00:14:32.972Z}
[INFO ] 2019-11-01T00:14:32,984Z [Mock network] flow.[e1209cb0-674b-4270-a95b-e000928f49d4].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:33,019Z [Mock network] flow.[e1209cb0-674b-4270-a95b-e000928f49d4].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:33,056Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:14:33,083Z [Mock network] flow.[0498f537-6892-4935-aec9-31f5b6980cab].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=7236032230377605098). {}
[INFO ] 2019-11-01T00:14:33,092Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=7236032230377605098). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=12de405a-1185-466b-adbd-2c2b434871d1, invocation_timestamp=2019-11-01T00:14:33.091Z, session_id=12de405a-1185-466b-adbd-2c2b434871d1, session_timestamp=2019-11-01T00:14:33.091Z}
[INFO ] 2019-11-01T00:14:33,098Z [Mock network] flow.[6b3a309b-d8f0-4c93-8afa-6a5c2b919d6d].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:33,125Z [Mock network] flow.[6b3a309b-d8f0-4c93-8afa-6a5c2b919d6d].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:33,145Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.qn7265.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:14:33,179Z [Mock network] flow.[0498f537-6892-4935-aec9-31f5b6980cab].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:33,191Z [Mock network] flow.[0498f537-6892-4935-aec9-31f5b6980cab].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:33,193Z [Mock network] flow.[0498f537-6892-4935-aec9-31f5b6980cab].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:33,215Z [Mock network] flow.[0498f537-6892-4935-aec9-31f5b6980cab].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:33,292Z [Mock network] flow.[6b3a309b-d8f0-4c93-8afa-6a5c2b919d6d].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=830752730667571410). {}
[INFO ] 2019-11-01T00:14:33,309Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=830752730667571410). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=a4b28354-7f85-48cf-aca6-ece1bf1d4b70, invocation_timestamp=2019-11-01T00:14:33.308Z, session_id=a4b28354-7f85-48cf-aca6-ece1bf1d4b70, session_timestamp=2019-11-01T00:14:33.308Z}
[INFO ] 2019-11-01T00:14:33,318Z [Mock network] flow.[c731eb16-d666-4370-a2c8-a94d59b6d713].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:33,358Z [Mock network] flow.[c731eb16-d666-4370-a2c8-a94d59b6d713].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:33,360Z [Mock network] flow.[c731eb16-d666-4370-a2c8-a94d59b6d713].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:33,380Z [Mock network] flow.[c731eb16-d666-4370-a2c8-a94d59b6d713].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:33,495Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:14:33,496Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:14:33,500Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@153cc418 {}
[INFO ] 2019-11-01T00:14:33,507Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:14:33,507Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:33,508Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:33,580Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:33,585Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:14:33,589Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567273586) {}
[INFO ] 2019-11-01T00:14:33,592Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:33,598Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567273586) {}
[INFO ] 2019-11-01T00:14:33,598Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567273586) {}
[INFO ] 2019-11-01T00:14:33,737Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:14:33,867Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:14:33,956Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:14:33,957Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:14:33,964Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:14:33,968Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:14:33,968Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:33,969Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:33,970Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:33,970Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:14:33,979Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 03D770C19FF1113E21B8E6F615D1D8485D9D54EFE7B30B40301259C8386B07C2, not inserting the second time {}
[INFO ] 2019-11-01T00:14:33,984Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567273586) {}
[INFO ] 2019-11-01T00:14:33,986Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:33,987Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567273586) {}
[INFO ] 2019-11-01T00:14:33,987Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567273586) {}
[INFO ] 2019-11-01T00:14:33,988Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:33,988Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567273586) {}
[INFO ] 2019-11-01T00:14:33,990Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:14:33,991Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:14:33,999Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:14:34,004Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@39e77c48 {}
[INFO ] 2019-11-01T00:14:34,012Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:14:34,013Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:34,014Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:34,069Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:34,074Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:14:34,075Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567274075) {}
[INFO ] 2019-11-01T00:14:34,079Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:34,081Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567274075) {}
[INFO ] 2019-11-01T00:14:34,082Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567274075) {}
[INFO ] 2019-11-01T00:14:34,198Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:14:34,334Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:14:34,425Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:14:34,426Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:14:34,441Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:14:34,442Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:34,443Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:34,443Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:34,444Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:14:34,453Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 4C9B75E761D2FD24FA87B06FFC09F7C126B34507408E9F840537CF037C03AAFA, not inserting the second time {}
[INFO ] 2019-11-01T00:14:34,456Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567273586) {}
[INFO ] 2019-11-01T00:14:34,457Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:34,460Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567273586) {}
[INFO ] 2019-11-01T00:14:34,461Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567274075) {}
[INFO ] 2019-11-01T00:14:34,462Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:34,465Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567274075) {}
[INFO ] 2019-11-01T00:14:34,465Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567274075) {}
[INFO ] 2019-11-01T00:14:34,467Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:34,468Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567274075) {}
[INFO ] 2019-11-01T00:14:34,468Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567274075) {}
[INFO ] 2019-11-01T00:14:34,469Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:34,469Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567274075) {}
[INFO ] 2019-11-01T00:14:34,471Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:14:34,472Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:14:34,480Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:14:34,484Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@5ad03f48 {}
[INFO ] 2019-11-01T00:14:34,492Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:14:34,493Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:34,493Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:34,538Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:34,544Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:14:34,544Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567274544) {}
[INFO ] 2019-11-01T00:14:34,547Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:34,548Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567274544) {}
[INFO ] 2019-11-01T00:14:34,549Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567274544) {}
[INFO ] 2019-11-01T00:14:34,661Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:14:34,775Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:14:34,864Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:14:34,865Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:14:34,875Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:14:34,876Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:34,876Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:34,885Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:34,885Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:14:34,896Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key D780B6B5A88D5EC6B7D75ED8E3B6DA0E37E639555B2B68C9CB91E55C6ADAEC76, not inserting the second time {}
[INFO ] 2019-11-01T00:14:34,899Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567273586) {}
[INFO ] 2019-11-01T00:14:34,900Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:34,903Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567273586) {}
[INFO ] 2019-11-01T00:14:34,904Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567274544) {}
[INFO ] 2019-11-01T00:14:34,905Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:34,908Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567274544) {}
[INFO ] 2019-11-01T00:14:34,908Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567274075) {}
[INFO ] 2019-11-01T00:14:34,909Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:34,913Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567274075) {}
[INFO ] 2019-11-01T00:14:34,913Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567274544) {}
[INFO ] 2019-11-01T00:14:34,914Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:34,917Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567274544) {}
[INFO ] 2019-11-01T00:14:34,918Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567274544) {}
[INFO ] 2019-11-01T00:14:34,919Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:34,921Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567274544) {}
[INFO ] 2019-11-01T00:14:34,922Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567274544) {}
[INFO ] 2019-11-01T00:14:34,922Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:34,923Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567274544) {}
[INFO ] 2019-11-01T00:14:34,926Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:14:34,927Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:14:34,942Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:14:34,954Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@abbe74e {}
[INFO ] 2019-11-01T00:14:34,975Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:14:34,976Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:34,976Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:35,110Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:35,115Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:14:35,115Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567275115) {}
[INFO ] 2019-11-01T00:14:35,118Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:35,120Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567275115) {}
[INFO ] 2019-11-01T00:14:35,120Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567275115) {}
[INFO ] 2019-11-01T00:14:35,248Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:14:35,361Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:14:35,449Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:14:35,450Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:14:35,460Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:14:35,461Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:35,462Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:35,462Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:35,466Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:14:35,476Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 621228D0C5921E236044EE6D1465826F7A9DF1F449BCD428D34A2463BDF6382B, not inserting the second time {}
[INFO ] 2019-11-01T00:14:35,479Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567273586) {}
[INFO ] 2019-11-01T00:14:35,480Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:35,483Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567273586) {}
[INFO ] 2019-11-01T00:14:35,484Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567275115) {}
[INFO ] 2019-11-01T00:14:35,485Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:35,488Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567275115) {}
[INFO ] 2019-11-01T00:14:35,489Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567274075) {}
[INFO ] 2019-11-01T00:14:35,489Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:35,492Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567274075) {}
[INFO ] 2019-11-01T00:14:35,495Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567275115) {}
[INFO ] 2019-11-01T00:14:35,496Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:35,501Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567275115) {}
[INFO ] 2019-11-01T00:14:35,502Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567274544) {}
[INFO ] 2019-11-01T00:14:35,503Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:35,508Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567274544) {}
[INFO ] 2019-11-01T00:14:35,508Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567275115) {}
[INFO ] 2019-11-01T00:14:35,509Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:35,512Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567275115) {}
[INFO ] 2019-11-01T00:14:35,513Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567275115) {}
[INFO ] 2019-11-01T00:14:35,515Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:35,515Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567275115) {}
[INFO ] 2019-11-01T00:14:35,519Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567275115) {}
[INFO ] 2019-11-01T00:14:35,519Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:35,520Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567275115) {}
[INFO ] 2019-11-01T00:14:35,524Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:14:35,525Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:14:35,533Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:14:35,537Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6f3a510e {}
[INFO ] 2019-11-01T00:14:35,544Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:14:35,545Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:35,545Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:35,592Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:14:35,597Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:14:35,598Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567275598) {}
[INFO ] 2019-11-01T00:14:35,602Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:35,603Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567275598) {}
[INFO ] 2019-11-01T00:14:35,604Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567275598) {}
[INFO ] 2019-11-01T00:14:35,712Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:14:35,860Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:14:35,951Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:14:35,952Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:14:35,961Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:14:35,962Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:35,962Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:35,963Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:35,970Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:14:35,979Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 9C9EC5872B4152147B3ED240DAC481BE0688D0C138174D67995A6345653C468D, not inserting the second time {}
[INFO ] 2019-11-01T00:14:35,983Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567273586) {}
[INFO ] 2019-11-01T00:14:35,984Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:35,987Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567273586) {}
[INFO ] 2019-11-01T00:14:35,987Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567275598) {}
[INFO ] 2019-11-01T00:14:35,988Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:35,991Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567275598) {}
[INFO ] 2019-11-01T00:14:35,991Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567274075) {}
[INFO ] 2019-11-01T00:14:35,992Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:35,995Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567274075) {}
[INFO ] 2019-11-01T00:14:35,996Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567275598) {}
[INFO ] 2019-11-01T00:14:35,997Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:36,000Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567275598) {}
[INFO ] 2019-11-01T00:14:36,000Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567274544) {}
[INFO ] 2019-11-01T00:14:36,001Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:36,005Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567274544) {}
[INFO ] 2019-11-01T00:14:36,005Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567275598) {}
[INFO ] 2019-11-01T00:14:36,006Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:36,009Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567275598) {}
[INFO ] 2019-11-01T00:14:36,010Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567275115) {}
[INFO ] 2019-11-01T00:14:36,011Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:36,014Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567275115) {}
[INFO ] 2019-11-01T00:14:36,015Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567275598) {}
[INFO ] 2019-11-01T00:14:36,016Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:14:36,019Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567275598) {}
[INFO ] 2019-11-01T00:14:36,020Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567275598) {}
[INFO ] 2019-11-01T00:14:36,022Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:36,023Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567275598) {}
[INFO ] 2019-11-01T00:14:36,024Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567275598) {}
[INFO ] 2019-11-01T00:14:36,024Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:14:36,025Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567275598) {}
[INFO ] 2019-11-01T00:14:36,025Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:36,026Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:36,027Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:36,027Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:36,028Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:36,029Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:36,029Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:14:36,030Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:14:36,071Z [Mock network] flow.[23cbc493-c526-42ca-a55b-f48d34efcd6d].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-3086651422696747416). {}
[INFO ] 2019-11-01T00:14:36,131Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-3086651422696747416). {invocation_id=42872c05-3a2d-4fd0-84f9-4ca53c028c94, invocation_timestamp=2019-11-01T00:14:36.130Z, session_id=42872c05-3a2d-4fd0-84f9-4ca53c028c94, session_timestamp=2019-11-01T00:14:36.130Z}
[INFO ] 2019-11-01T00:14:36,234Z [Mock network] flow.[23cbc493-c526-42ca-a55b-f48d34efcd6d].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=585021305267569422). {}
[INFO ] 2019-11-01T00:14:36,242Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=585021305267569422). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=3ba499bf-fbfc-40f6-ba50-76dbd88376af, invocation_timestamp=2019-11-01T00:14:36.241Z, session_id=3ba499bf-fbfc-40f6-ba50-76dbd88376af, session_timestamp=2019-11-01T00:14:36.241Z}
[INFO ] 2019-11-01T00:14:36,296Z [Mock network] flow.[23cbc493-c526-42ca-a55b-f48d34efcd6d].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-6558314374751560352). {}
[INFO ] 2019-11-01T00:14:36,311Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-6558314374751560352). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=152a8844-9440-4485-857d-d5e9f1eb4ccc, invocation_timestamp=2019-11-01T00:14:36.310Z, session_id=152a8844-9440-4485-857d-d5e9f1eb4ccc, session_timestamp=2019-11-01T00:14:36.310Z}
[INFO ] 2019-11-01T00:14:36,377Z [Mock network] flow.[91004398-6254-4088-afe8-82efeab7b644].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=6530505088673904434). {}
[INFO ] 2019-11-01T00:14:36,406Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=6530505088673904434). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=5e6af870-d6d5-46fe-9a14-cddfdb82d2db, invocation_timestamp=2019-11-01T00:14:36.405Z, session_id=5e6af870-d6d5-46fe-9a14-cddfdb82d2db, session_timestamp=2019-11-01T00:14:36.405Z}
[INFO ] 2019-11-01T00:14:36,469Z [Mock network] flow.[9cde0e99-e745-4a96-88b6-7468900c14f1].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=6963741540069178523). {}
[INFO ] 2019-11-01T00:14:36,503Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=6963741540069178523). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=ec37fb11-f396-4f1c-bae5-215310e9472a, invocation_timestamp=2019-11-01T00:14:36.503Z, session_id=ec37fb11-f396-4f1c-bae5-215310e9472a, session_timestamp=2019-11-01T00:14:36.503Z}
[INFO ] 2019-11-01T00:14:36,515Z [Mock network] flow.[7765fb1f-e146-495b-9280-ae52c0d7f145].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:36,562Z [Mock network] flow.[7765fb1f-e146-495b-9280-ae52c0d7f145].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:36,636Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:14:36,651Z [Mock network] flow.[aa09a7ed-dde4-42cf-9ca2-e471935da9a1].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-3616439952715010936). {}
[INFO ] 2019-11-01T00:14:36,659Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-3616439952715010936). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=37f95cf2-e87e-4b1f-aa28-91f21929a307, invocation_timestamp=2019-11-01T00:14:36.658Z, session_id=37f95cf2-e87e-4b1f-aa28-91f21929a307, session_timestamp=2019-11-01T00:14:36.658Z}
[INFO ] 2019-11-01T00:14:36,666Z [Mock network] flow.[b8c718d6-af75-4d2a-9ca0-ed75dca8d3ef].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:36,695Z [Mock network] flow.[b8c718d6-af75-4d2a-9ca0-ed75dca8d3ef].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:36,722Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.qn7265.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:14:36,764Z [Mock network] flow.[aa09a7ed-dde4-42cf-9ca2-e471935da9a1].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:36,788Z [Mock network] flow.[aa09a7ed-dde4-42cf-9ca2-e471935da9a1].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:36,789Z [Mock network] flow.[aa09a7ed-dde4-42cf-9ca2-e471935da9a1].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:36,839Z [Mock network] flow.[aa09a7ed-dde4-42cf-9ca2-e471935da9a1].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:36,897Z [Mock network] flow.[b8c718d6-af75-4d2a-9ca0-ed75dca8d3ef].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-6869827495361751369). {}
[INFO ] 2019-11-01T00:14:36,908Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-6869827495361751369). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=fdbd065f-29c0-4db0-bcab-2e82342873a9, invocation_timestamp=2019-11-01T00:14:36.907Z, session_id=fdbd065f-29c0-4db0-bcab-2e82342873a9, session_timestamp=2019-11-01T00:14:36.907Z}
[INFO ] 2019-11-01T00:14:36,919Z [Mock network] flow.[0cd817a7-2e3a-46b9-bed4-715dec518af0].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:36,952Z [Mock network] flow.[0cd817a7-2e3a-46b9-bed4-715dec518af0].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:36,954Z [Mock network] flow.[0cd817a7-2e3a-46b9-bed4-715dec518af0].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:14:37,004Z [Mock network] flow.[0cd817a7-2e3a-46b9-bed4-715dec518af0].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:16:07,519Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.qn7265 in file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/classes/kotlin/test/com/qn7265: build/tmp/generated-test-cordapps/com.qn7265-4afcd96b-ebbc-4b19-a371-914e92501aa9.jar {}
[INFO ] 2019-11-01T00:16:07,541Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.qn7265 in file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/classes/kotlin/main/com/qn7265: build/tmp/generated-test-cordapps/com.qn7265-aa53251c-fdad-472a-b691-7cb547729d71.jar {}
[INFO ] 2019-11-01T00:16:07,585Z [Test worker] cordapp.CordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/tmp/generated-test-cordapps/com.qn7265-4afcd96b-ebbc-4b19-a371-914e92501aa9.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/tmp/generated-test-cordapps/com.qn7265-aa53251c-fdad-472a-b691-7cb547729d71.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/qn7265-contracts-new/build/libs/qn7265-contracts-new.jar, rootPackageName=com.qn7265), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/qn7265-contracts/build/libs/qn7265-contracts.jar, rootPackageName=com.qn7265), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/libs/prides.jar, rootPackageName=com.twig) {}
[INFO ] 2019-11-01T00:16:07,627Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:16:07,632Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:16:07,648Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/tmp/generated-test-cordapps/com.qn7265-4afcd96b-ebbc-4b19-a371-914e92501aa9.jar {}
[INFO ] 2019-11-01T00:16:07,670Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/tmp/generated-test-cordapps/com.qn7265-aa53251c-fdad-472a-b691-7cb547729d71.jar {}
[INFO ] 2019-11-01T00:16:07,706Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/qn7265-contracts-new/build/libs/qn7265-contracts-new.jar {}
[INFO ] 2019-11-01T00:16:07,766Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/qn7265-contracts/build/libs/qn7265-contracts.jar {}
[INFO ] 2019-11-01T00:16:07,815Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/libs/prides.jar {}
[INFO ] 2019-11-01T00:16:08,008Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@5849e9e3 {}
[INFO ] 2019-11-01T00:16:08,814Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:16:08,866Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:08,870Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:11,384Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:12,009Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:16:12,012Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567372012) {}
[INFO ] 2019-11-01T00:16:12,024Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:12,132Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567372012) {}
[INFO ] 2019-11-01T00:16:12,135Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567372012) {}
[INFO ] 2019-11-01T00:16:12,439Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:16:12,581Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:16:12,681Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:16:12,689Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:16:12,787Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:16:12,926Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:16:12,931Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:16:12,934Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:16:12,937Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:16:12,940Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:16:12,993Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 84E10B686466EC777BC45BBD29A4028348EAF454E169B57E9130E85A561C059F, not inserting the second time {}
[INFO ] 2019-11-01T00:16:13,077Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567372012) {}
[INFO ] 2019-11-01T00:16:13,129Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:16:13,134Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567372012) {}
[INFO ] 2019-11-01T00:16:13,138Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567372012) {}
[INFO ] 2019-11-01T00:16:13,143Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:16:13,144Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567372012) {}
[INFO ] 2019-11-01T00:16:13,154Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:16:13,163Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:16:13,208Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:16:13,239Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@35c64e2d {}
[INFO ] 2019-11-01T00:16:13,258Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:16:13,262Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:13,264Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:13,444Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:13,468Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:16:13,475Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567373475) {}
[INFO ] 2019-11-01T00:16:13,487Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:13,501Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567373475) {}
[INFO ] 2019-11-01T00:16:13,505Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567373475) {}
[INFO ] 2019-11-01T00:16:13,672Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:16:13,802Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:16:13,899Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:16:13,901Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:16:13,928Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:16:13,932Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:16:13,935Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:16:13,938Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:16:13,940Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:16:13,968Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key D86BB68C1BD149BD245BF9E3493808D6C7647879CEBF8F6543C980B109B15642, not inserting the second time {}
[INFO ] 2019-11-01T00:16:13,977Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567372012) {}
[INFO ] 2019-11-01T00:16:13,984Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:14,001Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567372012) {}
[INFO ] 2019-11-01T00:16:14,006Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567373475) {}
[INFO ] 2019-11-01T00:16:14,013Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:14,026Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567373475) {}
[INFO ] 2019-11-01T00:16:14,027Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567373475) {}
[INFO ] 2019-11-01T00:16:14,033Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:16:14,034Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567373475) {}
[INFO ] 2019-11-01T00:16:14,036Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567373475) {}
[INFO ] 2019-11-01T00:16:14,038Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:16:14,041Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567373475) {}
[INFO ] 2019-11-01T00:16:14,047Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:16:14,051Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:16:14,086Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:16:14,105Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@4863b60a {}
[INFO ] 2019-11-01T00:16:14,134Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:16:14,143Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:14,147Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:14,294Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:14,308Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:16:14,310Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567374310) {}
[INFO ] 2019-11-01T00:16:14,315Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:14,322Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567374310) {}
[INFO ] 2019-11-01T00:16:14,325Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567374310) {}
[INFO ] 2019-11-01T00:16:14,490Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:16:14,621Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:16:14,714Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:16:14,717Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:16:14,731Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:16:14,732Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:16:14,734Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:16:14,737Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:16:14,738Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:16:14,789Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key F24D5AC7753844A8EB180CD41CF499346390477D2DB78C60A50E6FB3337F6C48, not inserting the second time {}
[INFO ] 2019-11-01T00:16:14,796Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567372012) {}
[INFO ] 2019-11-01T00:16:14,799Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:14,811Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567372012) {}
[INFO ] 2019-11-01T00:16:14,814Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567374310) {}
[INFO ] 2019-11-01T00:16:14,819Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:14,843Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567374310) {}
[INFO ] 2019-11-01T00:16:14,845Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567373475) {}
[INFO ] 2019-11-01T00:16:14,853Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:14,875Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567373475) {}
[INFO ] 2019-11-01T00:16:14,891Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567374310) {}
[INFO ] 2019-11-01T00:16:14,900Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:14,916Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567374310) {}
[INFO ] 2019-11-01T00:16:14,921Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567374310) {}
[INFO ] 2019-11-01T00:16:14,929Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:16:14,930Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567374310) {}
[INFO ] 2019-11-01T00:16:14,935Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567374310) {}
[INFO ] 2019-11-01T00:16:14,937Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:16:14,938Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567374310) {}
[INFO ] 2019-11-01T00:16:14,943Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:16:14,946Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:16:14,982Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:16:14,998Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@41f0452 {}
[INFO ] 2019-11-01T00:16:15,018Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:16:15,026Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:15,028Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:15,236Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:15,251Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:16:15,256Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567375256) {}
[INFO ] 2019-11-01T00:16:15,261Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:15,267Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567375256) {}
[INFO ] 2019-11-01T00:16:15,269Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567375256) {}
[INFO ] 2019-11-01T00:16:15,393Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:16:15,510Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:16:15,608Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:16:15,610Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:16:15,629Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:16:15,632Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:16:15,633Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:16:15,634Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:16:15,635Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:16:15,648Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 5DFEB425BE4F32492297E44D05727F151861194C054AAB389FEC6DA5910E6FDA, not inserting the second time {}
[INFO ] 2019-11-01T00:16:15,657Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567372012) {}
[INFO ] 2019-11-01T00:16:15,660Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:15,668Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567372012) {}
[INFO ] 2019-11-01T00:16:15,669Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567375256) {}
[INFO ] 2019-11-01T00:16:15,676Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:15,693Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567375256) {}
[INFO ] 2019-11-01T00:16:15,698Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567373475) {}
[INFO ] 2019-11-01T00:16:15,702Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:15,725Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567373475) {}
[INFO ] 2019-11-01T00:16:15,726Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567375256) {}
[INFO ] 2019-11-01T00:16:15,732Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:15,744Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567375256) {}
[INFO ] 2019-11-01T00:16:15,754Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567374310) {}
[INFO ] 2019-11-01T00:16:15,759Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:15,771Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567374310) {}
[INFO ] 2019-11-01T00:16:15,772Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567375256) {}
[INFO ] 2019-11-01T00:16:15,774Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:15,786Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567375256) {}
[INFO ] 2019-11-01T00:16:15,787Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567375256) {}
[INFO ] 2019-11-01T00:16:15,797Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:16:15,801Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567375256) {}
[INFO ] 2019-11-01T00:16:15,802Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567375256) {}
[INFO ] 2019-11-01T00:16:15,804Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:16:15,805Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567375256) {}
[INFO ] 2019-11-01T00:16:15,810Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:16:15,812Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:16:15,842Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:16:15,862Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@33d86f82 {}
[INFO ] 2019-11-01T00:16:15,883Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:16:15,888Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:15,889Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:16,019Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:16,027Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:16:16,028Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567376028) {}
[INFO ] 2019-11-01T00:16:16,032Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:16,037Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567376028) {}
[INFO ] 2019-11-01T00:16:16,038Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567376028) {}
[INFO ] 2019-11-01T00:16:16,169Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:16:16,321Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:16:16,416Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:16:16,418Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:16:16,431Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:16:16,433Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:16:16,434Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:16:16,436Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:16:16,437Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:16:16,449Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 1234BEF7501252EED582D5E732AC4D528E000B2420146D6E3B15DF4688D60CFC, not inserting the second time {}
[INFO ] 2019-11-01T00:16:16,455Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567372012) {}
[INFO ] 2019-11-01T00:16:16,457Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:16,481Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567372012) {}
[INFO ] 2019-11-01T00:16:16,485Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567376028) {}
[INFO ] 2019-11-01T00:16:16,491Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:16,504Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567376028) {}
[INFO ] 2019-11-01T00:16:16,508Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567373475) {}
[INFO ] 2019-11-01T00:16:16,511Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:16,529Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567373475) {}
[INFO ] 2019-11-01T00:16:16,531Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567376028) {}
[INFO ] 2019-11-01T00:16:16,534Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:16,543Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567376028) {}
[INFO ] 2019-11-01T00:16:16,544Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567374310) {}
[INFO ] 2019-11-01T00:16:16,549Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:16,559Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567374310) {}
[INFO ] 2019-11-01T00:16:16,560Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567376028) {}
[INFO ] 2019-11-01T00:16:16,562Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:16,570Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567376028) {}
[INFO ] 2019-11-01T00:16:16,571Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567375256) {}
[INFO ] 2019-11-01T00:16:16,573Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:16,581Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567375256) {}
[INFO ] 2019-11-01T00:16:16,582Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567376028) {}
[INFO ] 2019-11-01T00:16:16,584Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:16,592Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567376028) {}
[INFO ] 2019-11-01T00:16:16,593Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567376028) {}
[INFO ] 2019-11-01T00:16:16,597Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:16:16,598Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567376028) {}
[INFO ] 2019-11-01T00:16:16,599Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567376028) {}
[INFO ] 2019-11-01T00:16:16,600Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:16:16,601Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567376028) {}
[INFO ] 2019-11-01T00:16:16,608Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:16:16,610Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:16:16,611Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:16:16,612Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:16:16,612Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:16:16,614Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:16:16,614Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:16:16,615Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:16:17,597Z [Mock network] flow.[e076bb9e-996e-4266-9230-6ee2259f40a4].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=6492567343357375896). {}
[INFO ] 2019-11-01T00:16:17,774Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=6492567343357375896). {invocation_id=d03ec125-e178-403b-89dc-06ac8e2fa795, invocation_timestamp=2019-11-01T00:16:17.758Z, session_id=d03ec125-e178-403b-89dc-06ac8e2fa795, session_timestamp=2019-11-01T00:16:17.758Z}
[INFO ] 2019-11-01T00:16:18,210Z [Mock network] flow.[e076bb9e-996e-4266-9230-6ee2259f40a4].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=4862601650690009399). {}
[INFO ] 2019-11-01T00:16:18,250Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=4862601650690009399). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=efd53025-f610-482f-8ecc-fba326854d71, invocation_timestamp=2019-11-01T00:16:18.248Z, session_id=efd53025-f610-482f-8ecc-fba326854d71, session_timestamp=2019-11-01T00:16:18.248Z}
[INFO ] 2019-11-01T00:16:18,396Z [Mock network] flow.[e076bb9e-996e-4266-9230-6ee2259f40a4].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=2368908714675592666). {}
[INFO ] 2019-11-01T00:16:18,445Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=2368908714675592666). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=8ac92d05-3f6a-4b79-846f-cd401bc55e46, invocation_timestamp=2019-11-01T00:16:18.444Z, session_id=8ac92d05-3f6a-4b79-846f-cd401bc55e46, session_timestamp=2019-11-01T00:16:18.444Z}
[INFO ] 2019-11-01T00:16:18,588Z [Mock network] flow.[074500f8-64c7-4b4e-bf1d-f5aba0a7d4ef].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-3495765762999255478). {}
[INFO ] 2019-11-01T00:16:18,629Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-3495765762999255478). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=54dfe378-4fbf-4651-afa3-ecad66307044, invocation_timestamp=2019-11-01T00:16:18.628Z, session_id=54dfe378-4fbf-4651-afa3-ecad66307044, session_timestamp=2019-11-01T00:16:18.628Z}
[INFO ] 2019-11-01T00:16:18,772Z [Mock network] flow.[c7c0a2c1-dce0-453d-a40b-6ae1ae431cc3].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=-234580407262731941). {}
[INFO ] 2019-11-01T00:16:18,818Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-234580407262731941). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=d724f480-1fa4-49c6-92b7-bba9c585da69, invocation_timestamp=2019-11-01T00:16:18.817Z, session_id=d724f480-1fa4-49c6-92b7-bba9c585da69, session_timestamp=2019-11-01T00:16:18.817Z}
[INFO ] 2019-11-01T00:16:18,840Z [Mock network] flow.[2484fd73-bf13-467c-8687-0053e795f9d1].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:16:18,988Z [Mock network] flow.[2484fd73-bf13-467c-8687-0053e795f9d1].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:16:19,128Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:16:19,198Z [Mock network] flow.[fc3f40a3-63f3-4401-8ca0-a97021f21544].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-7667100374227821875). {}
[INFO ] 2019-11-01T00:16:19,249Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-7667100374227821875). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=c193e140-3d02-4a03-ad98-afd5979fe91e, invocation_timestamp=2019-11-01T00:16:19.248Z, session_id=c193e140-3d02-4a03-ad98-afd5979fe91e, session_timestamp=2019-11-01T00:16:19.248Z}
[INFO ] 2019-11-01T00:16:19,280Z [Mock network] flow.[ab7e5091-033d-4531-b12e-79a1d2b6a9d5].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:16:19,357Z [Mock network] flow.[ab7e5091-033d-4531-b12e-79a1d2b6a9d5].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:16:19,431Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.qn7265.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:16:19,564Z [Mock network] flow.[fc3f40a3-63f3-4401-8ca0-a97021f21544].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:16:19,620Z [Mock network] flow.[fc3f40a3-63f3-4401-8ca0-a97021f21544].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:16:19,622Z [Mock network] flow.[fc3f40a3-63f3-4401-8ca0-a97021f21544].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:16:19,705Z [Mock network] flow.[fc3f40a3-63f3-4401-8ca0-a97021f21544].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:16:19,834Z [Mock network] flow.[ab7e5091-033d-4531-b12e-79a1d2b6a9d5].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=2914910440325076825). {}
[INFO ] 2019-11-01T00:16:19,860Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=2914910440325076825). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=f2f428f2-36be-4463-bc28-cbca3d075f81, invocation_timestamp=2019-11-01T00:16:19.859Z, session_id=f2f428f2-36be-4463-bc28-cbca3d075f81, session_timestamp=2019-11-01T00:16:19.859Z}
[INFO ] 2019-11-01T00:16:19,876Z [Mock network] flow.[9ca011fd-a397-4d16-a6ee-3cc70ae27504].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:16:19,942Z [Mock network] flow.[9ca011fd-a397-4d16-a6ee-3cc70ae27504].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:16:19,944Z [Mock network] flow.[9ca011fd-a397-4d16-a6ee-3cc70ae27504].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:16:19,980Z [Mock network] flow.[9ca011fd-a397-4d16-a6ee-3cc70ae27504].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:16:20,208Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:16:20,209Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:16:20,214Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@202a0db7 {}
[INFO ] 2019-11-01T00:16:20,226Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:16:20,227Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:20,228Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:20,379Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:20,386Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:16:20,387Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567380387) {}
[INFO ] 2019-11-01T00:16:20,390Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:20,398Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567380387) {}
[INFO ] 2019-11-01T00:16:20,399Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567380387) {}
[INFO ] 2019-11-01T00:16:20,540Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:16:20,672Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:16:20,766Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:16:20,767Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:16:20,782Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:16:20,787Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:16:20,790Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:16:20,791Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:16:20,794Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:16:20,795Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:16:20,811Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 8F995BCFF1A60BD9431CFAEF6158F8D8F83BD4BF7995A34FA0822A4CD4827193, not inserting the second time {}
[INFO ] 2019-11-01T00:16:20,817Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567380387) {}
[INFO ] 2019-11-01T00:16:20,825Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:16:20,826Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567380387) {}
[INFO ] 2019-11-01T00:16:20,827Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567380387) {}
[INFO ] 2019-11-01T00:16:20,828Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:16:20,829Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567380387) {}
[INFO ] 2019-11-01T00:16:20,839Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:16:20,846Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:16:20,866Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:16:20,881Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@502b18b3 {}
[INFO ] 2019-11-01T00:16:20,891Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:16:20,893Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:20,894Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:21,106Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:21,115Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:16:21,116Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567381116) {}
[INFO ] 2019-11-01T00:16:21,120Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:21,123Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567381116) {}
[INFO ] 2019-11-01T00:16:21,124Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567381116) {}
[INFO ] 2019-11-01T00:16:21,268Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:16:21,409Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:16:21,506Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:16:21,508Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:16:21,521Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:16:21,522Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:16:21,523Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:16:21,524Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:16:21,525Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:16:21,536Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 641C37AF2845D2A4BFA439F77B1496964AD572F3EF2827B96BD2FA9DFF3B17A3, not inserting the second time {}
[INFO ] 2019-11-01T00:16:21,541Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567380387) {}
[INFO ] 2019-11-01T00:16:21,547Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:21,555Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567380387) {}
[INFO ] 2019-11-01T00:16:21,556Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567381116) {}
[INFO ] 2019-11-01T00:16:21,558Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:21,565Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567381116) {}
[INFO ] 2019-11-01T00:16:21,566Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567381116) {}
[INFO ] 2019-11-01T00:16:21,569Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:16:21,570Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567381116) {}
[INFO ] 2019-11-01T00:16:21,571Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567381116) {}
[INFO ] 2019-11-01T00:16:21,572Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:16:21,573Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567381116) {}
[INFO ] 2019-11-01T00:16:21,576Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:16:21,577Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:16:21,598Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:16:21,610Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@7e544a94 {}
[INFO ] 2019-11-01T00:16:21,625Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:16:21,626Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:21,627Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:21,773Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:21,791Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:16:21,792Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567381792) {}
[INFO ] 2019-11-01T00:16:21,799Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:21,803Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567381792) {}
[INFO ] 2019-11-01T00:16:21,804Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567381792) {}
[INFO ] 2019-11-01T00:16:21,948Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:16:22,113Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:16:22,204Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:16:22,206Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:16:22,218Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:16:22,219Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:16:22,220Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:16:22,221Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:16:22,222Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:16:22,233Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 84CA8E85B09677D4FB6CA42F6A7F48F4772F3B5F48DE6DCD79764A6DBC7A0185, not inserting the second time {}
[INFO ] 2019-11-01T00:16:22,239Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567380387) {}
[INFO ] 2019-11-01T00:16:22,241Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:22,251Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567380387) {}
[INFO ] 2019-11-01T00:16:22,255Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567381792) {}
[INFO ] 2019-11-01T00:16:22,256Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:22,264Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567381792) {}
[INFO ] 2019-11-01T00:16:22,265Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567381116) {}
[INFO ] 2019-11-01T00:16:22,266Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:22,276Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567381116) {}
[INFO ] 2019-11-01T00:16:22,277Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567381792) {}
[INFO ] 2019-11-01T00:16:22,279Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:22,288Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567381792) {}
[INFO ] 2019-11-01T00:16:22,290Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567381792) {}
[INFO ] 2019-11-01T00:16:22,295Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:16:22,296Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567381792) {}
[INFO ] 2019-11-01T00:16:22,297Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567381792) {}
[INFO ] 2019-11-01T00:16:22,299Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:16:22,300Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567381792) {}
[INFO ] 2019-11-01T00:16:22,302Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:16:22,303Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:16:22,325Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:16:22,333Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6fa63ba3 {}
[INFO ] 2019-11-01T00:16:22,345Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:16:22,352Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:22,353Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:22,481Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:22,489Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:16:22,491Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567382491) {}
[INFO ] 2019-11-01T00:16:22,497Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:22,500Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567382491) {}
[INFO ] 2019-11-01T00:16:22,502Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567382491) {}
[INFO ] 2019-11-01T00:16:22,631Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:16:22,751Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:16:22,843Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:16:22,849Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:16:22,862Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:16:22,863Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:16:22,864Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:16:22,865Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:16:22,866Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:16:22,925Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key E45373463AF133CC7D01ECDE56F7D6654AD852AA12CF6ACD735827C8C1AE9D8A, not inserting the second time {}
[INFO ] 2019-11-01T00:16:22,933Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567380387) {}
[INFO ] 2019-11-01T00:16:22,935Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:22,944Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567380387) {}
[INFO ] 2019-11-01T00:16:22,945Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567382491) {}
[INFO ] 2019-11-01T00:16:22,946Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:22,952Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567382491) {}
[INFO ] 2019-11-01T00:16:22,953Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567381116) {}
[INFO ] 2019-11-01T00:16:22,959Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:22,968Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567381116) {}
[INFO ] 2019-11-01T00:16:22,969Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567382491) {}
[INFO ] 2019-11-01T00:16:22,971Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:22,981Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567382491) {}
[INFO ] 2019-11-01T00:16:22,982Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567381792) {}
[INFO ] 2019-11-01T00:16:22,987Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:22,997Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567381792) {}
[INFO ] 2019-11-01T00:16:22,998Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567382491) {}
[INFO ] 2019-11-01T00:16:23,000Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:23,008Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567382491) {}
[INFO ] 2019-11-01T00:16:23,012Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567382491) {}
[INFO ] 2019-11-01T00:16:23,015Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:16:23,016Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567382491) {}
[INFO ] 2019-11-01T00:16:23,017Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567382491) {}
[INFO ] 2019-11-01T00:16:23,018Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:16:23,019Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567382491) {}
[INFO ] 2019-11-01T00:16:23,022Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:16:23,023Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:16:23,045Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:16:23,062Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@171e257 {}
[INFO ] 2019-11-01T00:16:23,075Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:16:23,077Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:23,078Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:23,200Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:23,208Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:16:23,209Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567383209) {}
[INFO ] 2019-11-01T00:16:23,213Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:23,216Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567383209) {}
[INFO ] 2019-11-01T00:16:23,217Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567383209) {}
[INFO ] 2019-11-01T00:16:23,353Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:16:23,460Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:16:23,553Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:16:23,555Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:16:23,566Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:16:23,568Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:16:23,569Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:16:23,570Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:16:23,572Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:16:23,587Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 25A8AD41C3BA9BCFDA8ABAD4D221A7D04BA214C79DA40CB5C99A5ED3DD838C41, not inserting the second time {}
[INFO ] 2019-11-01T00:16:23,593Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567380387) {}
[INFO ] 2019-11-01T00:16:23,594Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:23,649Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567380387) {}
[INFO ] 2019-11-01T00:16:23,650Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567383209) {}
[INFO ] 2019-11-01T00:16:23,652Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:23,662Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567383209) {}
[INFO ] 2019-11-01T00:16:23,663Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567381116) {}
[INFO ] 2019-11-01T00:16:23,664Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:23,669Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567381116) {}
[INFO ] 2019-11-01T00:16:23,670Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567383209) {}
[INFO ] 2019-11-01T00:16:23,671Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:23,676Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567383209) {}
[INFO ] 2019-11-01T00:16:23,677Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567381792) {}
[INFO ] 2019-11-01T00:16:23,678Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:23,682Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567381792) {}
[INFO ] 2019-11-01T00:16:23,683Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567383209) {}
[INFO ] 2019-11-01T00:16:23,685Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:23,689Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567383209) {}
[INFO ] 2019-11-01T00:16:23,690Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567382491) {}
[INFO ] 2019-11-01T00:16:23,691Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:23,696Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567382491) {}
[INFO ] 2019-11-01T00:16:23,697Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567383209) {}
[INFO ] 2019-11-01T00:16:23,698Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:23,703Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567383209) {}
[INFO ] 2019-11-01T00:16:23,703Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567383209) {}
[INFO ] 2019-11-01T00:16:23,706Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:16:23,707Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567383209) {}
[INFO ] 2019-11-01T00:16:23,707Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567383209) {}
[INFO ] 2019-11-01T00:16:23,708Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:16:23,709Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567383209) {}
[INFO ] 2019-11-01T00:16:23,710Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:16:23,710Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:16:23,711Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:16:23,712Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:16:23,713Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:16:23,713Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:16:23,714Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:16:23,715Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:16:23,778Z [Mock network] flow.[f9b88fc3-e810-4ec3-9980-22d089670c3f].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=1146429816723268933). {}
[INFO ] 2019-11-01T00:16:23,876Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=1146429816723268933). {invocation_id=a657fce8-4eca-4607-81ac-d60bdf298e22, invocation_timestamp=2019-11-01T00:16:23.875Z, session_id=a657fce8-4eca-4607-81ac-d60bdf298e22, session_timestamp=2019-11-01T00:16:23.875Z}
[INFO ] 2019-11-01T00:16:24,006Z [Mock network] flow.[f9b88fc3-e810-4ec3-9980-22d089670c3f].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-4709095481678415302). {}
[INFO ] 2019-11-01T00:16:24,026Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-4709095481678415302). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=5f83ee1f-1e44-48ce-bf02-6fa924652717, invocation_timestamp=2019-11-01T00:16:24.025Z, session_id=5f83ee1f-1e44-48ce-bf02-6fa924652717, session_timestamp=2019-11-01T00:16:24.025Z}
[INFO ] 2019-11-01T00:16:24,149Z [Mock network] flow.[f9b88fc3-e810-4ec3-9980-22d089670c3f].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=3940289349619145985). {}
[INFO ] 2019-11-01T00:16:24,181Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=3940289349619145985). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=539f054b-8bd0-4476-b5bf-94f0012a56e1, invocation_timestamp=2019-11-01T00:16:24.180Z, session_id=539f054b-8bd0-4476-b5bf-94f0012a56e1, session_timestamp=2019-11-01T00:16:24.180Z}
[INFO ] 2019-11-01T00:16:24,275Z [Mock network] flow.[7e9f6838-310e-4af7-8412-22e8850fe382].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=5652839079212102789). {}
[INFO ] 2019-11-01T00:16:24,305Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=5652839079212102789). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=a0615c04-3c09-4f92-a4c0-0a168fee9fbe, invocation_timestamp=2019-11-01T00:16:24.304Z, session_id=a0615c04-3c09-4f92-a4c0-0a168fee9fbe, session_timestamp=2019-11-01T00:16:24.304Z}
[INFO ] 2019-11-01T00:16:24,386Z [Mock network] flow.[b7b679aa-ddac-4714-bfcf-72d7832047b2].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=880465305528611194). {}
[INFO ] 2019-11-01T00:16:24,459Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=880465305528611194). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=eeaaee8b-3cda-49ef-a74a-cfe8a42f6d18, invocation_timestamp=2019-11-01T00:16:24.459Z, session_id=eeaaee8b-3cda-49ef-a74a-cfe8a42f6d18, session_timestamp=2019-11-01T00:16:24.459Z}
[INFO ] 2019-11-01T00:16:24,477Z [Mock network] flow.[0845d68e-26f7-48d9-986d-7c0dfba4592e].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:16:24,537Z [Mock network] flow.[0845d68e-26f7-48d9-986d-7c0dfba4592e].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:16:24,598Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:16:24,626Z [Mock network] flow.[bc46d4b7-86ad-4b15-8576-260507c4dd97].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=9010146419349864125). {}
[INFO ] 2019-11-01T00:16:24,640Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=9010146419349864125). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=819c7979-d6d9-4163-8570-4e67d963a7d6, invocation_timestamp=2019-11-01T00:16:24.639Z, session_id=819c7979-d6d9-4163-8570-4e67d963a7d6, session_timestamp=2019-11-01T00:16:24.639Z}
[INFO ] 2019-11-01T00:16:24,650Z [Mock network] flow.[3a2646c1-85cd-41b5-9607-7c3c99063aa8].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:16:24,700Z [Mock network] flow.[3a2646c1-85cd-41b5-9607-7c3c99063aa8].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:16:24,772Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.qn7265.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:16:24,845Z [Mock network] flow.[bc46d4b7-86ad-4b15-8576-260507c4dd97].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:16:24,875Z [Mock network] flow.[bc46d4b7-86ad-4b15-8576-260507c4dd97].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:16:24,882Z [Mock network] flow.[bc46d4b7-86ad-4b15-8576-260507c4dd97].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:16:24,914Z [Mock network] flow.[bc46d4b7-86ad-4b15-8576-260507c4dd97].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:16:25,053Z [Mock network] flow.[3a2646c1-85cd-41b5-9607-7c3c99063aa8].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=446088953770456879). {}
[INFO ] 2019-11-01T00:16:25,079Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=446088953770456879). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=0202df1c-9d0a-41db-9b0e-6e0ad8318fe9, invocation_timestamp=2019-11-01T00:16:25.078Z, session_id=0202df1c-9d0a-41db-9b0e-6e0ad8318fe9, session_timestamp=2019-11-01T00:16:25.078Z}
[INFO ] 2019-11-01T00:16:25,095Z [Mock network] flow.[dccb8cc5-396e-4fd8-a656-5bb85b912077].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:16:25,148Z [Mock network] flow.[dccb8cc5-396e-4fd8-a656-5bb85b912077].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:16:25,150Z [Mock network] flow.[dccb8cc5-396e-4fd8-a656-5bb85b912077].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:16:25,206Z [Mock network] flow.[dccb8cc5-396e-4fd8-a656-5bb85b912077].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:16:25,363Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:16:25,365Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:16:25,369Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@65726771 {}
[INFO ] 2019-11-01T00:16:25,376Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:16:25,377Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:25,378Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:25,468Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:25,476Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:16:25,477Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567385477) {}
[INFO ] 2019-11-01T00:16:25,484Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:25,493Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567385477) {}
[INFO ] 2019-11-01T00:16:25,494Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567385477) {}
[INFO ] 2019-11-01T00:16:25,640Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:16:25,758Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:16:25,851Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:16:25,853Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:16:25,860Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:16:25,864Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:16:25,865Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:16:25,866Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:16:25,867Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:16:25,868Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:16:25,878Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 4DD3C009DB37005D21A3060116C1DCA76A68A7B215AC83D7C92C37B592F04652, not inserting the second time {}
[INFO ] 2019-11-01T00:16:25,883Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567385477) {}
[INFO ] 2019-11-01T00:16:25,886Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:16:25,891Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567385477) {}
[INFO ] 2019-11-01T00:16:25,892Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567385477) {}
[INFO ] 2019-11-01T00:16:25,893Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:16:25,894Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567385477) {}
[INFO ] 2019-11-01T00:16:25,896Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:16:25,897Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:16:25,916Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:16:25,927Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@7ea7a8dd {}
[INFO ] 2019-11-01T00:16:25,935Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:16:25,936Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:25,936Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:26,048Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:26,063Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:16:26,068Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567386068) {}
[INFO ] 2019-11-01T00:16:26,076Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:26,081Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567386068) {}
[INFO ] 2019-11-01T00:16:26,086Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567386068) {}
[INFO ] 2019-11-01T00:16:26,262Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:16:26,394Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:16:26,485Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:16:26,487Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:16:26,497Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:16:26,498Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:16:26,498Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:16:26,499Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:16:26,500Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:16:26,510Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 53163E5BFDAE15B73923DFFCAD225755A7F351DE270E71C68E158A0CA8C7D7C9, not inserting the second time {}
[INFO ] 2019-11-01T00:16:26,514Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567385477) {}
[INFO ] 2019-11-01T00:16:26,516Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:26,529Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567385477) {}
[INFO ] 2019-11-01T00:16:26,531Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567386068) {}
[INFO ] 2019-11-01T00:16:26,532Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:26,538Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567386068) {}
[INFO ] 2019-11-01T00:16:26,539Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567386068) {}
[INFO ] 2019-11-01T00:16:26,541Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:16:26,542Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567386068) {}
[INFO ] 2019-11-01T00:16:26,543Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567386068) {}
[INFO ] 2019-11-01T00:16:26,544Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:16:26,545Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567386068) {}
[INFO ] 2019-11-01T00:16:26,547Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:16:26,548Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:16:26,559Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:16:26,565Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@2aefcfda {}
[INFO ] 2019-11-01T00:16:26,572Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:16:26,573Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:26,574Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:26,651Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:26,661Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:16:26,662Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567386662) {}
[INFO ] 2019-11-01T00:16:26,666Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:26,671Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567386662) {}
[INFO ] 2019-11-01T00:16:26,672Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567386662) {}
[INFO ] 2019-11-01T00:16:26,825Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:16:26,955Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:16:27,049Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:16:27,052Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:16:27,066Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:16:27,067Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:16:27,068Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:16:27,069Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:16:27,070Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:16:27,081Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 18AD3CABC396B23FBDDE733673410EC5B458046942EB190536B3B6AA98BEADA2, not inserting the second time {}
[INFO ] 2019-11-01T00:16:27,085Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567385477) {}
[INFO ] 2019-11-01T00:16:27,088Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:27,096Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567385477) {}
[INFO ] 2019-11-01T00:16:27,097Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567386662) {}
[INFO ] 2019-11-01T00:16:27,098Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:27,102Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567386662) {}
[INFO ] 2019-11-01T00:16:27,103Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567386068) {}
[INFO ] 2019-11-01T00:16:27,105Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:27,109Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567386068) {}
[INFO ] 2019-11-01T00:16:27,110Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567386662) {}
[INFO ] 2019-11-01T00:16:27,111Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:27,116Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567386662) {}
[INFO ] 2019-11-01T00:16:27,118Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567386662) {}
[INFO ] 2019-11-01T00:16:27,123Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:16:27,124Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567386662) {}
[INFO ] 2019-11-01T00:16:27,124Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567386662) {}
[INFO ] 2019-11-01T00:16:27,125Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:16:27,126Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567386662) {}
[INFO ] 2019-11-01T00:16:27,212Z [Mock network] flow.[d5c34758-ffed-45a1-824d-284d9d5c84ad].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-1086147805573444539). {}
[INFO ] 2019-11-01T00:16:27,275Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-1086147805573444539). {invocation_id=2a726fda-33e3-4024-ab1e-6a81097b9740, invocation_timestamp=2019-11-01T00:16:27.274Z, session_id=2a726fda-33e3-4024-ab1e-6a81097b9740, session_timestamp=2019-11-01T00:16:27.274Z}
[INFO ] 2019-11-01T00:16:27,495Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:16:27,496Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:16:27,500Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@15499015 {}
[INFO ] 2019-11-01T00:16:27,507Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:16:27,508Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:27,509Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:27,577Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:27,583Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:16:27,584Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567387584) {}
[INFO ] 2019-11-01T00:16:27,587Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:27,592Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567387584) {}
[INFO ] 2019-11-01T00:16:27,593Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567387584) {}
[INFO ] 2019-11-01T00:16:27,732Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:16:27,851Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:16:27,946Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:16:27,947Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:16:27,961Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:16:27,966Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:16:27,968Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:16:27,969Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:16:27,969Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:16:27,970Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:16:27,980Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 1D325CC178F0B6B8DB3E64E661FFE27D91DC08C164A2BA68A310D1C8A18F7F19, not inserting the second time {}
[INFO ] 2019-11-01T00:16:27,984Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567387584) {}
[INFO ] 2019-11-01T00:16:27,989Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:16:27,991Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567387584) {}
[INFO ] 2019-11-01T00:16:27,992Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567387584) {}
[INFO ] 2019-11-01T00:16:27,992Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:16:27,993Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567387584) {}
[INFO ] 2019-11-01T00:16:27,995Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:16:27,996Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:16:28,039Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:16:28,046Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@75bde249 {}
[INFO ] 2019-11-01T00:16:28,053Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:16:28,053Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:28,054Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:28,113Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:28,124Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:16:28,129Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567388129) {}
[INFO ] 2019-11-01T00:16:28,132Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:28,134Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567388129) {}
[INFO ] 2019-11-01T00:16:28,135Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567388129) {}
[INFO ] 2019-11-01T00:16:28,258Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:16:28,368Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:16:28,462Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:16:28,466Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:16:28,480Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:16:28,481Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:16:28,482Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:16:28,482Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:16:28,483Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:16:28,504Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 72373C3FB74BCFB3D7995277E7D009037E232FAFC894366835DDAAC3D5F513EB, not inserting the second time {}
[INFO ] 2019-11-01T00:16:28,509Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567387584) {}
[INFO ] 2019-11-01T00:16:28,517Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:28,525Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567387584) {}
[INFO ] 2019-11-01T00:16:28,526Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567388129) {}
[INFO ] 2019-11-01T00:16:28,527Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:28,535Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567388129) {}
[INFO ] 2019-11-01T00:16:28,536Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567388129) {}
[INFO ] 2019-11-01T00:16:28,539Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:16:28,540Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567388129) {}
[INFO ] 2019-11-01T00:16:28,540Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567388129) {}
[INFO ] 2019-11-01T00:16:28,541Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:16:28,542Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567388129) {}
[INFO ] 2019-11-01T00:16:28,545Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:16:28,546Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:16:28,574Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:16:28,582Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@46c6083a {}
[INFO ] 2019-11-01T00:16:28,597Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:16:28,598Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:28,598Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:28,722Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:28,729Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:16:28,729Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567388729) {}
[INFO ] 2019-11-01T00:16:28,732Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:28,736Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567388729) {}
[INFO ] 2019-11-01T00:16:28,737Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567388729) {}
[INFO ] 2019-11-01T00:16:28,854Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:16:28,984Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:16:29,072Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:16:29,073Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:16:29,085Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:16:29,086Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:16:29,087Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:16:29,087Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:16:29,088Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:16:29,100Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key C00FDECA7B5994AA171047288C482235086C49F8F9BF8CBB4BCBA80D6BDB37C4, not inserting the second time {}
[INFO ] 2019-11-01T00:16:29,106Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567387584) {}
[INFO ] 2019-11-01T00:16:29,107Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:29,114Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567387584) {}
[INFO ] 2019-11-01T00:16:29,115Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567388729) {}
[INFO ] 2019-11-01T00:16:29,116Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:29,121Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567388729) {}
[INFO ] 2019-11-01T00:16:29,121Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567388129) {}
[INFO ] 2019-11-01T00:16:29,123Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:29,127Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567388129) {}
[INFO ] 2019-11-01T00:16:29,128Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567388729) {}
[INFO ] 2019-11-01T00:16:29,129Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:29,133Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567388729) {}
[INFO ] 2019-11-01T00:16:29,133Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567388729) {}
[INFO ] 2019-11-01T00:16:29,137Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:16:29,138Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567388729) {}
[INFO ] 2019-11-01T00:16:29,138Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567388729) {}
[INFO ] 2019-11-01T00:16:29,139Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:16:29,139Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567388729) {}
[INFO ] 2019-11-01T00:16:29,208Z [Mock network] flow.[4d0ccc5d-af2d-4caf-92d0-89afb6130a19].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-8293985013630389888). {}
[INFO ] 2019-11-01T00:16:29,267Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-8293985013630389888). {invocation_id=d082d4d4-e2ac-464b-8ff3-5f717138d3e5, invocation_timestamp=2019-11-01T00:16:29.267Z, session_id=d082d4d4-e2ac-464b-8ff3-5f717138d3e5, session_timestamp=2019-11-01T00:16:29.267Z}
[INFO ] 2019-11-01T00:16:29,480Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:16:29,481Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:16:29,487Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@3d873f83 {}
[INFO ] 2019-11-01T00:16:29,500Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:16:29,501Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:29,502Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:29,579Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:29,585Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:16:29,585Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567389585) {}
[INFO ] 2019-11-01T00:16:29,594Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:29,605Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567389585) {}
[INFO ] 2019-11-01T00:16:29,606Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567389585) {}
[INFO ] 2019-11-01T00:16:29,725Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:16:29,834Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:16:29,922Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:16:29,924Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:16:29,931Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:16:29,934Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:16:29,935Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:16:29,936Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:16:29,936Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:16:29,937Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:16:29,947Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key EDF366ED66B29D60B761DDE7B1F2992BC886C77C4CDDF2CD79419B38300B746F, not inserting the second time {}
[INFO ] 2019-11-01T00:16:29,952Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567389585) {}
[INFO ] 2019-11-01T00:16:29,954Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:16:29,955Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567389585) {}
[INFO ] 2019-11-01T00:16:29,957Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567389585) {}
[INFO ] 2019-11-01T00:16:29,957Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:16:29,958Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567389585) {}
[INFO ] 2019-11-01T00:16:29,960Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:16:29,960Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:16:29,971Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:16:29,977Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@68932918 {}
[INFO ] 2019-11-01T00:16:29,988Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:16:29,990Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:29,990Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:30,099Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:30,105Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:16:30,105Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567390105) {}
[INFO ] 2019-11-01T00:16:30,108Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:30,110Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567390105) {}
[INFO ] 2019-11-01T00:16:30,111Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567390105) {}
[INFO ] 2019-11-01T00:16:30,245Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:16:30,364Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:16:30,452Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:16:30,453Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:16:30,465Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:16:30,466Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:16:30,467Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:16:30,467Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:16:30,468Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:16:30,478Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 66EC357A431377BA252FA72658D1ADD548CF7B83C26713196F90B58493B46C4E, not inserting the second time {}
[INFO ] 2019-11-01T00:16:30,482Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567389585) {}
[INFO ] 2019-11-01T00:16:30,483Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:30,487Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567389585) {}
[INFO ] 2019-11-01T00:16:30,488Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567390105) {}
[INFO ] 2019-11-01T00:16:30,491Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:30,495Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567390105) {}
[INFO ] 2019-11-01T00:16:30,496Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567390105) {}
[INFO ] 2019-11-01T00:16:30,500Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:16:30,501Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567390105) {}
[INFO ] 2019-11-01T00:16:30,502Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567390105) {}
[INFO ] 2019-11-01T00:16:30,509Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:16:30,509Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567390105) {}
[INFO ] 2019-11-01T00:16:30,511Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:16:30,512Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:16:30,533Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:16:30,543Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@390becf7 {}
[INFO ] 2019-11-01T00:16:30,554Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:16:30,555Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:30,556Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:30,639Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:16:30,644Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:16:30,645Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567390645) {}
[INFO ] 2019-11-01T00:16:30,652Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:30,656Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567390645) {}
[INFO ] 2019-11-01T00:16:30,656Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567390645) {}
[INFO ] 2019-11-01T00:16:30,795Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:16:30,964Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:16:31,055Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:16:31,057Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:16:31,068Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:16:31,069Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:16:31,070Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:16:31,070Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:16:31,071Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:16:31,081Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key E38BCE1AEF41ABA43835BB153EE2915A18CDF86785AACE0DE887AA2D11179F6B, not inserting the second time {}
[INFO ] 2019-11-01T00:16:31,085Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567389585) {}
[INFO ] 2019-11-01T00:16:31,087Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:31,092Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567389585) {}
[INFO ] 2019-11-01T00:16:31,093Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567390645) {}
[INFO ] 2019-11-01T00:16:31,094Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:31,098Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567390645) {}
[INFO ] 2019-11-01T00:16:31,099Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567390105) {}
[INFO ] 2019-11-01T00:16:31,100Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:31,104Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567390105) {}
[INFO ] 2019-11-01T00:16:31,105Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567390645) {}
[INFO ] 2019-11-01T00:16:31,106Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:16:31,110Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567390645) {}
[INFO ] 2019-11-01T00:16:31,111Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567390645) {}
[INFO ] 2019-11-01T00:16:31,114Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:16:31,115Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567390645) {}
[INFO ] 2019-11-01T00:16:31,115Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567390645) {}
[INFO ] 2019-11-01T00:16:31,116Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:16:31,117Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567390645) {}
[WARN ] 2019-11-01T00:16:31,154Z [Mock network] flow.[40e5af43-cd50-412c-9f3d-4f27024aa6a3].run - Flow finished with exception {}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: A newly issued asset must have a positive amount., contract: com.qn7265.issue.AssetContract, transaction: 4EEAB3656DCDFF15E774250DAC77006B35902CFDE1A727FC2F92A70B0001A431
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:127) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:80) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:143) ~[corda-core-3.4-corda.jar:?]
	at com.qn7265.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:82) ~[main/:?]
	at com.qn7265.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:27) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.4-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_211]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.4-corda.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: A newly issued asset must have a positive amount.
	at com.qn7265.issue.AssetContract.verifyIssue(AssetContract.kt:80) ~[qn7265-contracts.jar:?]
	at com.qn7265.issue.AssetContract.verify(AssetContract.kt:29) ~[qn7265-contracts.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:125) ~[corda-core-3.4-corda.jar:?]
	... 17 more
[INFO ] 2019-11-01T00:16:31,207Z [Mock network] flow.[7d2d7f4b-77c1-444e-8cfb-65c7e650104d].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-2286604880167695651). {}
[INFO ] 2019-11-01T00:16:31,269Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-2286604880167695651). {invocation_id=b6a8c65e-f14f-49aa-b39f-2428fd282903, invocation_timestamp=2019-11-01T00:16:31.256Z, session_id=b6a8c65e-f14f-49aa-b39f-2428fd282903, session_timestamp=2019-11-01T00:16:31.256Z}
[INFO ] 2019-11-01T00:20:27,875Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.qn7265 in file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/classes/kotlin/test/com/qn7265: build/tmp/generated-test-cordapps/com.qn7265-dbd9296f-9954-473a-9a2e-ef069ff6dc12.jar {}
[INFO ] 2019-11-01T00:20:27,895Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.qn7265 in file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/classes/kotlin/main/com/qn7265: build/tmp/generated-test-cordapps/com.qn7265-dba51530-29a4-4a9a-b6c0-0d97a086f442.jar {}
[INFO ] 2019-11-01T00:20:27,937Z [Test worker] cordapp.CordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/tmp/generated-test-cordapps/com.qn7265-dbd9296f-9954-473a-9a2e-ef069ff6dc12.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/tmp/generated-test-cordapps/com.qn7265-dba51530-29a4-4a9a-b6c0-0d97a086f442.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/qn7265-contracts-new/build/libs/qn7265-contracts-new.jar, rootPackageName=com.qn7265), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/qn7265-contracts/build/libs/qn7265-contracts.jar, rootPackageName=com.qn7265), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/libs/prides.jar, rootPackageName=com.twig) {}
[INFO ] 2019-11-01T00:20:27,974Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:20:27,978Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:20:27,993Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/tmp/generated-test-cordapps/com.qn7265-dbd9296f-9954-473a-9a2e-ef069ff6dc12.jar {}
[INFO ] 2019-11-01T00:20:28,019Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/tmp/generated-test-cordapps/com.qn7265-dba51530-29a4-4a9a-b6c0-0d97a086f442.jar {}
[INFO ] 2019-11-01T00:20:28,054Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/qn7265-contracts-new/build/libs/qn7265-contracts-new.jar {}
[INFO ] 2019-11-01T00:20:28,115Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/qn7265-contracts/build/libs/qn7265-contracts.jar {}
[INFO ] 2019-11-01T00:20:28,172Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/libs/prides.jar {}
[INFO ] 2019-11-01T00:20:28,341Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@48ccf21a {}
[INFO ] 2019-11-01T00:20:29,105Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:20:29,157Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:20:29,161Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:20:31,636Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:20:32,292Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:20:32,295Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567632295) {}
[INFO ] 2019-11-01T00:20:32,308Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:20:32,442Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567632295) {}
[INFO ] 2019-11-01T00:20:32,445Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567632295) {}
[INFO ] 2019-11-01T00:20:32,759Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:20:32,946Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:20:33,084Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:20:33,096Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:20:33,211Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:20:33,362Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:20:33,371Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:20:33,378Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:20:33,381Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:20:33,385Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:20:33,454Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 4D49EBC4403136D898F04966091F5D801712EA8A72102ADCC1AB8828F6730F1F, not inserting the second time {}
[INFO ] 2019-11-01T00:20:33,552Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567632295) {}
[INFO ] 2019-11-01T00:20:33,589Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:20:33,592Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567632295) {}
[INFO ] 2019-11-01T00:20:33,594Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567632295) {}
[INFO ] 2019-11-01T00:20:33,596Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:20:33,598Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567632295) {}
[INFO ] 2019-11-01T00:20:33,604Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:20:33,606Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:20:33,627Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:20:33,641Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@70b694 {}
[INFO ] 2019-11-01T00:20:33,655Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:20:33,658Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:20:33,660Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:20:33,811Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:20:33,836Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:20:33,843Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567633843) {}
[INFO ] 2019-11-01T00:20:33,854Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:20:33,870Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567633843) {}
[INFO ] 2019-11-01T00:20:33,872Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567633843) {}
[INFO ] 2019-11-01T00:20:34,073Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:20:34,243Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:20:34,356Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:20:34,363Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:20:34,390Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:20:34,394Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:20:34,397Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:20:34,401Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:20:34,404Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:20:34,433Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 11EDBBFC2108F8B11FBEBA11AFFE160768294EC6CA32A088DE0610854B28351C, not inserting the second time {}
[INFO ] 2019-11-01T00:20:34,446Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567632295) {}
[INFO ] 2019-11-01T00:20:34,454Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:20:34,480Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567632295) {}
[INFO ] 2019-11-01T00:20:34,485Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567633843) {}
[INFO ] 2019-11-01T00:20:34,492Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:20:34,515Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567633843) {}
[INFO ] 2019-11-01T00:20:34,517Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567633843) {}
[INFO ] 2019-11-01T00:20:34,533Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:20:34,537Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567633843) {}
[INFO ] 2019-11-01T00:20:34,539Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567633843) {}
[INFO ] 2019-11-01T00:20:34,544Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:20:34,546Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567633843) {}
[INFO ] 2019-11-01T00:20:34,552Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:20:34,554Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:20:34,600Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:20:34,623Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@28b25f48 {}
[INFO ] 2019-11-01T00:20:34,648Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:20:34,653Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:20:34,656Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:20:34,845Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:20:34,868Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:20:34,871Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567634871) {}
[INFO ] 2019-11-01T00:20:34,879Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:20:34,890Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567634871) {}
[INFO ] 2019-11-01T00:20:34,892Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567634871) {}
[INFO ] 2019-11-01T00:20:35,070Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:20:35,204Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:20:35,304Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:20:35,308Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:20:35,323Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:20:35,325Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:20:35,326Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:20:35,327Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:20:35,329Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:20:35,342Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 4ABDAF52795440CBC5334B34160EC14119A6BEDFF81BDFB25687595C7DC0705B, not inserting the second time {}
[INFO ] 2019-11-01T00:20:35,354Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567632295) {}
[INFO ] 2019-11-01T00:20:35,357Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:20:35,366Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567632295) {}
[INFO ] 2019-11-01T00:20:35,368Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567634871) {}
[INFO ] 2019-11-01T00:20:35,371Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:20:35,380Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567634871) {}
[INFO ] 2019-11-01T00:20:35,382Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567633843) {}
[INFO ] 2019-11-01T00:20:35,384Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:20:35,394Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567633843) {}
[INFO ] 2019-11-01T00:20:35,402Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567634871) {}
[INFO ] 2019-11-01T00:20:35,406Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:20:35,417Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567634871) {}
[INFO ] 2019-11-01T00:20:35,419Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567634871) {}
[INFO ] 2019-11-01T00:20:35,424Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:20:35,426Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567634871) {}
[INFO ] 2019-11-01T00:20:35,427Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567634871) {}
[INFO ] 2019-11-01T00:20:35,429Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:20:35,430Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567634871) {}
[INFO ] 2019-11-01T00:20:35,434Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:20:35,435Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:20:35,451Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:20:35,461Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@337dce25 {}
[INFO ] 2019-11-01T00:20:35,474Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:20:35,476Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:20:35,478Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:20:35,673Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:20:35,685Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:20:35,687Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567635687) {}
[INFO ] 2019-11-01T00:20:35,693Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:20:35,707Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567635687) {}
[INFO ] 2019-11-01T00:20:35,708Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567635687) {}
[INFO ] 2019-11-01T00:20:35,852Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:20:35,992Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:20:36,092Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:20:36,094Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:20:36,112Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:20:36,116Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:20:36,117Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:20:36,118Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:20:36,120Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:20:36,141Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 8049FDE6C90673C685D007A16DF9FFB70692FC5166BB546933A3BA22C5DFB108, not inserting the second time {}
[INFO ] 2019-11-01T00:20:36,151Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567632295) {}
[INFO ] 2019-11-01T00:20:36,157Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:20:36,175Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567632295) {}
[INFO ] 2019-11-01T00:20:36,178Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567635687) {}
[INFO ] 2019-11-01T00:20:36,182Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:20:36,202Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567635687) {}
[INFO ] 2019-11-01T00:20:36,204Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567633843) {}
[INFO ] 2019-11-01T00:20:36,209Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:20:36,230Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567633843) {}
[INFO ] 2019-11-01T00:20:36,234Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567635687) {}
[INFO ] 2019-11-01T00:20:36,237Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:20:36,254Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567635687) {}
[INFO ] 2019-11-01T00:20:36,257Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567634871) {}
[INFO ] 2019-11-01T00:20:36,259Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:20:36,277Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567634871) {}
[INFO ] 2019-11-01T00:20:36,280Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567635687) {}
[INFO ] 2019-11-01T00:20:36,284Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:20:36,301Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567635687) {}
[INFO ] 2019-11-01T00:20:36,303Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567635687) {}
[INFO ] 2019-11-01T00:20:36,311Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:20:36,313Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567635687) {}
[INFO ] 2019-11-01T00:20:36,314Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567635687) {}
[INFO ] 2019-11-01T00:20:36,316Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:20:36,318Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567635687) {}
[INFO ] 2019-11-01T00:20:36,326Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:20:36,328Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:20:36,357Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:20:36,378Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6544c24e {}
[INFO ] 2019-11-01T00:20:36,402Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:20:36,406Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:20:36,407Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:20:36,580Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:20:36,591Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:20:36,593Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567636593) {}
[INFO ] 2019-11-01T00:20:36,600Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:20:36,607Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567636593) {}
[INFO ] 2019-11-01T00:20:36,609Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567636593) {}
[INFO ] 2019-11-01T00:20:36,770Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:20:36,910Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:20:37,078Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:20:37,081Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:20:37,095Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:20:37,097Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:20:37,100Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:20:37,104Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:20:37,106Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:20:37,124Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key A5061923F8C6B3A871E49BA883DE3B186D134C5B9C7B84BD21249423B5227336, not inserting the second time {}
[INFO ] 2019-11-01T00:20:37,131Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567632295) {}
[INFO ] 2019-11-01T00:20:37,136Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:20:37,152Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567632295) {}
[INFO ] 2019-11-01T00:20:37,154Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567636593) {}
[INFO ] 2019-11-01T00:20:37,158Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:20:37,176Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567636593) {}
[INFO ] 2019-11-01T00:20:37,178Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567633843) {}
[INFO ] 2019-11-01T00:20:37,182Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:20:37,196Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567633843) {}
[INFO ] 2019-11-01T00:20:37,200Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567636593) {}
[INFO ] 2019-11-01T00:20:37,203Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:20:37,217Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567636593) {}
[INFO ] 2019-11-01T00:20:37,219Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567634871) {}
[INFO ] 2019-11-01T00:20:37,221Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:20:37,234Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572567634871) {}
[INFO ] 2019-11-01T00:20:37,236Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567636593) {}
[INFO ] 2019-11-01T00:20:37,239Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:20:37,254Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567636593) {}
[INFO ] 2019-11-01T00:20:37,256Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567635687) {}
[INFO ] 2019-11-01T00:20:37,258Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:20:37,276Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572567635687) {}
[INFO ] 2019-11-01T00:20:37,282Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567636593) {}
[INFO ] 2019-11-01T00:20:37,285Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:20:37,297Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567636593) {}
[INFO ] 2019-11-01T00:20:37,304Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567636593) {}
[INFO ] 2019-11-01T00:20:37,314Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:20:37,320Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567636593) {}
[INFO ] 2019-11-01T00:20:37,322Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567636593) {}
[INFO ] 2019-11-01T00:20:37,323Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:20:37,324Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567636593) {}
[INFO ] 2019-11-01T00:20:37,332Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:20:37,335Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:20:37,337Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:20:37,338Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:20:37,340Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:20:37,342Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:20:37,344Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:20:37,354Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:20:38,498Z [Mock network] flow.[f24cc13b-a1ce-43df-9461-63b11b5c14f9].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-3139165153867793996). {}
[INFO ] 2019-11-01T00:20:38,734Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-3139165153867793996). {invocation_id=4fe88edf-91c1-4969-a60c-662e58b94318, invocation_timestamp=2019-11-01T00:20:38.726Z, session_id=4fe88edf-91c1-4969-a60c-662e58b94318, session_timestamp=2019-11-01T00:20:38.726Z}
[INFO ] 2019-11-01T00:20:39,127Z [Mock network] flow.[f24cc13b-a1ce-43df-9461-63b11b5c14f9].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=5264449173453203146). {}
[INFO ] 2019-11-01T00:20:39,164Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=5264449173453203146). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=41ed143e-3970-47a4-b71f-2ee874e9f0b9, invocation_timestamp=2019-11-01T00:20:39.162Z, session_id=41ed143e-3970-47a4-b71f-2ee874e9f0b9, session_timestamp=2019-11-01T00:20:39.162Z}
[INFO ] 2019-11-01T00:20:39,298Z [Mock network] flow.[f24cc13b-a1ce-43df-9461-63b11b5c14f9].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=8209093164173698647). {}
[INFO ] 2019-11-01T00:20:39,345Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=8209093164173698647). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=d3c7d943-60c8-471b-bb19-c3f1c9c332ad, invocation_timestamp=2019-11-01T00:20:39.343Z, session_id=d3c7d943-60c8-471b-bb19-c3f1c9c332ad, session_timestamp=2019-11-01T00:20:39.343Z}
[INFO ] 2019-11-01T00:20:39,532Z [Mock network] flow.[f5bc3e0b-abc7-4d95-ad46-8da0a8aa9226].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=4697507644470068623). {}
[INFO ] 2019-11-01T00:20:39,584Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=4697507644470068623). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=cad7ff04-9d2a-4c07-bfd1-b49a4cc52864, invocation_timestamp=2019-11-01T00:20:39.582Z, session_id=cad7ff04-9d2a-4c07-bfd1-b49a4cc52864, session_timestamp=2019-11-01T00:20:39.582Z}
[INFO ] 2019-11-01T00:20:39,734Z [Mock network] flow.[fa7be7b1-5fad-488d-87cb-10a8513b171b].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=7513191057398814890). {}
[INFO ] 2019-11-01T00:20:39,779Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=7513191057398814890). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=bf41ff0e-12da-4455-9411-de728bd056fa, invocation_timestamp=2019-11-01T00:20:39.778Z, session_id=bf41ff0e-12da-4455-9411-de728bd056fa, session_timestamp=2019-11-01T00:20:39.778Z}
[INFO ] 2019-11-01T00:20:39,800Z [Mock network] flow.[27803211-9569-4c4c-a51a-a731d39a821f].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:20:39,955Z [Mock network] flow.[27803211-9569-4c4c-a51a-a731d39a821f].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:20:40,052Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:20:40,125Z [Mock network] flow.[2dcd92b7-c755-42ea-9b19-4d8be2f7b306].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-7852874814028810654). {}
[INFO ] 2019-11-01T00:20:40,172Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-7852874814028810654). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=5f4cd4bc-70ed-4c7c-80ce-46706e36e5e9, invocation_timestamp=2019-11-01T00:20:40.171Z, session_id=5f4cd4bc-70ed-4c7c-80ce-46706e36e5e9, session_timestamp=2019-11-01T00:20:40.171Z}
[INFO ] 2019-11-01T00:20:40,201Z [Mock network] flow.[ed6a7363-8a54-40a3-883e-b1b108fb5228].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:20:40,264Z [Mock network] flow.[ed6a7363-8a54-40a3-883e-b1b108fb5228].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T00:20:40,308Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.qn7265.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T00:20:40,416Z [Mock network] flow.[2dcd92b7-c755-42ea-9b19-4d8be2f7b306].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:20:40,498Z [Mock network] flow.[2dcd92b7-c755-42ea-9b19-4d8be2f7b306].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:20:40,501Z [Mock network] flow.[2dcd92b7-c755-42ea-9b19-4d8be2f7b306].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:20:40,541Z [Mock network] flow.[2dcd92b7-c755-42ea-9b19-4d8be2f7b306].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:20:40,647Z [Mock network] flow.[ed6a7363-8a54-40a3-883e-b1b108fb5228].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-2463796970303509240). {}
[INFO ] 2019-11-01T00:20:40,674Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-2463796970303509240). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=e38bf6d1-4cb5-498b-85e2-4da8e8b3ff1f, invocation_timestamp=2019-11-01T00:20:40.673Z, session_id=e38bf6d1-4cb5-498b-85e2-4da8e8b3ff1f, session_timestamp=2019-11-01T00:20:40.673Z}
[INFO ] 2019-11-01T00:20:40,694Z [Mock network] flow.[f027ba9e-85ed-4431-a552-efe42f9bf2af].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:20:40,757Z [Mock network] flow.[f027ba9e-85ed-4431-a552-efe42f9bf2af].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:20:40,761Z [Mock network] flow.[f027ba9e-85ed-4431-a552-efe42f9bf2af].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:20:40,784Z [Mock network] flow.[f027ba9e-85ed-4431-a552-efe42f9bf2af].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T00:20:41,044Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:20:41,045Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:20:41,052Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@50d588b8 {}
[INFO ] 2019-11-01T00:20:41,064Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:20:41,065Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:20:41,066Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:20:41,229Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:20:41,238Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:20:41,239Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567641239) {}
[INFO ] 2019-11-01T00:20:41,243Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:20:41,255Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567641239) {}
[INFO ] 2019-11-01T00:20:41,257Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567641239) {}
[INFO ] 2019-11-01T00:20:41,416Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:20:41,605Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:20:41,701Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:20:41,704Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:20:41,712Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:20:41,716Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:20:41,717Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:20:41,718Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:20:41,719Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:20:41,720Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:20:41,730Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key A110A5A1C391872E450EA4B1480F04BCC912910DD7EB6D4BABCB5CAFD923BFD3, not inserting the second time {}
[INFO ] 2019-11-01T00:20:41,735Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567641239) {}
[INFO ] 2019-11-01T00:20:41,739Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:20:41,741Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567641239) {}
[INFO ] 2019-11-01T00:20:41,743Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567641239) {}
[INFO ] 2019-11-01T00:20:41,744Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:20:41,746Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567641239) {}
[INFO ] 2019-11-01T00:20:41,755Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:20:41,756Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:20:41,784Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:20:41,797Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@24b5347 {}
[INFO ] 2019-11-01T00:20:41,805Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:20:41,806Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:20:41,807Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:20:41,929Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:20:41,935Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:20:41,936Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567641936) {}
[INFO ] 2019-11-01T00:20:41,939Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:20:41,942Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567641936) {}
[INFO ] 2019-11-01T00:20:41,942Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567641936) {}
[INFO ] 2019-11-01T00:20:42,086Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:20:42,215Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:20:42,314Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:20:42,316Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:20:42,328Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:20:42,333Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:20:42,334Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:20:42,335Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:20:42,336Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:20:42,426Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 96C0B57B6DEA3EF926D890D5685344A00BF66E55A7407CF06090AAFA48900A82, not inserting the second time {}
[INFO ] 2019-11-01T00:20:42,432Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567641239) {}
[INFO ] 2019-11-01T00:20:42,439Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:20:42,451Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567641239) {}
[INFO ] 2019-11-01T00:20:42,455Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567641936) {}
[INFO ] 2019-11-01T00:20:42,456Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:20:42,466Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567641936) {}
[INFO ] 2019-11-01T00:20:42,468Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567641936) {}
[INFO ] 2019-11-01T00:20:42,472Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:20:42,473Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567641936) {}
[INFO ] 2019-11-01T00:20:42,474Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567641936) {}
[INFO ] 2019-11-01T00:20:42,475Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:20:42,475Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567641936) {}
[INFO ] 2019-11-01T00:20:42,478Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:20:42,479Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:20:42,491Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:20:42,498Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@5d682da1 {}
[INFO ] 2019-11-01T00:20:42,512Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:20:42,518Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:20:42,519Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:20:42,650Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:20:42,668Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:20:42,672Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567642672) {}
[INFO ] 2019-11-01T00:20:42,678Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:20:42,681Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567642672) {}
[INFO ] 2019-11-01T00:20:42,682Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567642672) {}
[INFO ] 2019-11-01T00:20:42,830Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:20:42,975Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:20:43,077Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:20:43,080Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:20:43,092Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:20:43,094Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:20:43,095Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:20:43,095Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:20:43,096Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:20:43,108Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key BCFD0C2C1B709F361D0C08CBDE1068DE20356D6F61EBE314D4DF703606DEB681, not inserting the second time {}
[INFO ] 2019-11-01T00:20:43,114Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567641239) {}
[INFO ] 2019-11-01T00:20:43,116Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:20:43,131Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567641239) {}
[INFO ] 2019-11-01T00:20:43,132Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567642672) {}
[INFO ] 2019-11-01T00:20:43,134Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:20:43,143Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567642672) {}
[INFO ] 2019-11-01T00:20:43,144Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567641936) {}
[INFO ] 2019-11-01T00:20:43,222Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:20:43,227Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567641936) {}
[INFO ] 2019-11-01T00:20:43,228Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567642672) {}
[INFO ] 2019-11-01T00:20:43,230Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:20:43,235Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567642672) {}
[INFO ] 2019-11-01T00:20:43,239Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567642672) {}
[INFO ] 2019-11-01T00:20:43,245Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:20:43,246Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567642672) {}
[INFO ] 2019-11-01T00:20:43,247Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567642672) {}
[INFO ] 2019-11-01T00:20:43,248Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:20:43,249Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567642672) {}
[INFO ] 2019-11-01T00:20:43,362Z [Mock network] flow.[e736c88d-d2db-46b5-9f93-87a9e39113b8].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-3842268873862021782). {}
[INFO ] 2019-11-01T00:20:43,460Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-3842268873862021782). {invocation_id=088c1490-4585-4740-ae17-55d1a8cb9c21, invocation_timestamp=2019-11-01T00:20:43.457Z, session_id=088c1490-4585-4740-ae17-55d1a8cb9c21, session_timestamp=2019-11-01T00:20:43.457Z}
[INFO ] 2019-11-01T00:20:43,676Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:20:43,678Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:20:43,684Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@510f7a26 {}
[INFO ] 2019-11-01T00:20:43,697Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:20:43,698Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:20:43,699Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:20:43,862Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:20:43,875Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:20:43,876Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567643876) {}
[INFO ] 2019-11-01T00:20:43,880Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:20:43,887Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567643876) {}
[INFO ] 2019-11-01T00:20:43,888Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567643876) {}
[INFO ] 2019-11-01T00:20:44,022Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:20:44,155Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:20:44,247Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:20:44,249Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:20:44,257Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:20:44,261Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:20:44,262Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:20:44,263Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:20:44,264Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:20:44,265Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:20:44,275Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 33ADEA1EDAC3AFBB4C8754340EE25E612C8B8D873190995E542A64EA7B5447E2, not inserting the second time {}
[INFO ] 2019-11-01T00:20:44,280Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567643876) {}
[INFO ] 2019-11-01T00:20:44,286Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:20:44,287Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567643876) {}
[INFO ] 2019-11-01T00:20:44,288Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567643876) {}
[INFO ] 2019-11-01T00:20:44,289Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:20:44,289Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567643876) {}
[INFO ] 2019-11-01T00:20:44,292Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:20:44,293Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:20:44,304Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:20:44,310Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@7067f5e6 {}
[INFO ] 2019-11-01T00:20:44,321Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:20:44,321Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:20:44,322Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:20:44,506Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:20:44,512Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:20:44,513Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567644513) {}
[INFO ] 2019-11-01T00:20:44,519Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:20:44,523Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567644513) {}
[INFO ] 2019-11-01T00:20:44,523Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567644513) {}
[INFO ] 2019-11-01T00:20:44,659Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:20:44,778Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:20:44,873Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:20:44,875Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:20:44,885Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:20:44,886Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:20:44,887Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:20:44,888Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:20:44,889Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:20:44,899Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 50165B458FE352B3BC1D1F0F5715AECDA397F38B392D041CEC3A2B665C283B0C, not inserting the second time {}
[INFO ] 2019-11-01T00:20:44,904Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567643876) {}
[INFO ] 2019-11-01T00:20:44,905Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:20:44,916Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567643876) {}
[INFO ] 2019-11-01T00:20:44,917Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567644513) {}
[INFO ] 2019-11-01T00:20:44,920Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:20:44,929Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567644513) {}
[INFO ] 2019-11-01T00:20:44,930Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567644513) {}
[INFO ] 2019-11-01T00:20:44,936Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:20:44,937Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567644513) {}
[INFO ] 2019-11-01T00:20:44,938Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567644513) {}
[INFO ] 2019-11-01T00:20:44,939Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:20:44,945Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567644513) {}
[INFO ] 2019-11-01T00:20:44,947Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:20:44,951Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:20:44,970Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:20:44,985Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@667b8518 {}
[INFO ] 2019-11-01T00:20:44,991Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:20:44,992Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:20:44,992Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:20:45,145Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:20:45,151Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:20:45,152Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567645152) {}
[INFO ] 2019-11-01T00:20:45,154Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:20:45,157Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567645152) {}
[INFO ] 2019-11-01T00:20:45,157Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567645152) {}
[INFO ] 2019-11-01T00:20:45,278Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:20:45,407Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:20:45,499Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:20:45,501Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:20:45,511Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:20:45,512Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:20:45,513Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:20:45,514Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:20:45,515Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:20:45,525Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key C16ED67A75F6DAFDF5A651236E0F80E535F97C60F7853E3F1BD90F02116E5ED1, not inserting the second time {}
[INFO ] 2019-11-01T00:20:45,529Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567643876) {}
[INFO ] 2019-11-01T00:20:45,530Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:20:45,538Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567643876) {}
[INFO ] 2019-11-01T00:20:45,539Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567645152) {}
[INFO ] 2019-11-01T00:20:45,540Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:20:45,545Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567645152) {}
[INFO ] 2019-11-01T00:20:45,546Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567644513) {}
[INFO ] 2019-11-01T00:20:45,547Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:20:45,552Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567644513) {}
[INFO ] 2019-11-01T00:20:45,553Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567645152) {}
[INFO ] 2019-11-01T00:20:45,554Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:20:45,559Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567645152) {}
[INFO ] 2019-11-01T00:20:45,560Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567645152) {}
[INFO ] 2019-11-01T00:20:45,562Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:20:45,564Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567645152) {}
[INFO ] 2019-11-01T00:20:45,565Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567645152) {}
[INFO ] 2019-11-01T00:20:45,565Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:20:45,566Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567645152) {}
[INFO ] 2019-11-01T00:20:45,724Z [Mock network] flow.[6e08c0e6-44d4-435c-8b8b-04deb8fe5e65].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=8734192911838450985). {}
[INFO ] 2019-11-01T00:20:45,810Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=8734192911838450985). {invocation_id=e07c610f-5ce7-43ed-b360-67ca2d0b5625, invocation_timestamp=2019-11-01T00:20:45.805Z, session_id=e07c610f-5ce7-43ed-b360-67ca2d0b5625, session_timestamp=2019-11-01T00:20:45.805Z}
[INFO ] 2019-11-01T00:20:45,988Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:20:45,989Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:20:45,993Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@2e4d5f13 {}
[INFO ] 2019-11-01T00:20:46,008Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:20:46,009Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:20:46,010Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:20:46,121Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:20:46,138Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:20:46,139Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567646139) {}
[INFO ] 2019-11-01T00:20:46,142Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:20:46,148Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567646139) {}
[INFO ] 2019-11-01T00:20:46,149Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567646139) {}
[INFO ] 2019-11-01T00:20:46,324Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:20:46,449Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:20:46,542Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:20:46,544Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:20:46,552Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T00:20:46,557Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:20:46,558Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:20:46,559Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:20:46,560Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:20:46,561Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:20:46,572Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 22D3EC8FF25849D560EE2ED40216635BA97FCF18B288FE94B1BA7B9BA3DF6B6E, not inserting the second time {}
[INFO ] 2019-11-01T00:20:46,577Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567646139) {}
[INFO ] 2019-11-01T00:20:46,585Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:20:46,586Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567646139) {}
[INFO ] 2019-11-01T00:20:46,586Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567646139) {}
[INFO ] 2019-11-01T00:20:46,587Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:20:46,588Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567646139) {}
[INFO ] 2019-11-01T00:20:46,590Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:20:46,592Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:20:46,604Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:20:46,615Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@69c751bf {}
[INFO ] 2019-11-01T00:20:46,625Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:20:46,627Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:20:46,627Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:20:46,738Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:20:46,746Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:20:46,747Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567646747) {}
[INFO ] 2019-11-01T00:20:46,752Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:20:46,754Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567646747) {}
[INFO ] 2019-11-01T00:20:46,755Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567646747) {}
[INFO ] 2019-11-01T00:20:46,956Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:20:47,090Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:20:47,183Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:20:47,184Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:20:47,195Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:20:47,196Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:20:47,197Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:20:47,198Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:20:47,202Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:20:47,213Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key BF304E8531BFF7F94EB1610A2263C8BD294218793B23E7C97BE033BCD2E84B4E, not inserting the second time {}
[INFO ] 2019-11-01T00:20:47,218Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567646139) {}
[INFO ] 2019-11-01T00:20:47,221Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:20:47,228Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567646139) {}
[INFO ] 2019-11-01T00:20:47,229Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567646747) {}
[INFO ] 2019-11-01T00:20:47,230Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:20:47,243Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567646747) {}
[INFO ] 2019-11-01T00:20:47,249Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567646747) {}
[INFO ] 2019-11-01T00:20:47,254Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:20:47,255Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567646747) {}
[INFO ] 2019-11-01T00:20:47,260Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567646747) {}
[INFO ] 2019-11-01T00:20:47,261Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:20:47,261Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567646747) {}
[INFO ] 2019-11-01T00:20:47,266Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T00:20:47,269Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T00:20:47,292Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T00:20:47,298Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@10b55169 {}
[INFO ] 2019-11-01T00:20:47,315Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T00:20:47,316Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:20:47,317Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:20:47,409Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T00:20:47,417Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T00:20:47,418Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567647418) {}
[INFO ] 2019-11-01T00:20:47,429Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:20:47,434Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567647418) {}
[INFO ] 2019-11-01T00:20:47,435Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567647418) {}
[INFO ] 2019-11-01T00:20:47,601Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T00:20:47,720Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T00:20:47,811Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T00:20:47,813Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T00:20:47,824Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T00:20:47,825Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T00:20:47,826Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:20:47,827Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T00:20:47,828Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T00:20:47,838Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key B4E7DC6ACE7780DEC2FD44EC23BE8623ECE8123B4351EC6AEE28D6C2328D1797, not inserting the second time {}
[INFO ] 2019-11-01T00:20:47,845Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567646139) {}
[INFO ] 2019-11-01T00:20:47,847Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:20:47,858Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572567646139) {}
[INFO ] 2019-11-01T00:20:47,859Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567647418) {}
[INFO ] 2019-11-01T00:20:47,860Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:20:47,866Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567647418) {}
[INFO ] 2019-11-01T00:20:47,867Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567646747) {}
[INFO ] 2019-11-01T00:20:47,869Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:20:47,873Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572567646747) {}
[INFO ] 2019-11-01T00:20:47,874Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567647418) {}
[INFO ] 2019-11-01T00:20:47,875Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T00:20:47,880Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567647418) {}
[INFO ] 2019-11-01T00:20:47,881Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567647418) {}
[INFO ] 2019-11-01T00:20:47,884Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:20:47,885Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567647418) {}
[INFO ] 2019-11-01T00:20:47,885Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567647418) {}
[INFO ] 2019-11-01T00:20:47,886Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T00:20:47,887Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572567647418) {}
[WARN ] 2019-11-01T00:20:47,934Z [Mock network] flow.[a42e2a21-f44a-404e-bc88-e54d8741f6a6].run - Flow finished with exception {}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: A newly issued asset must have a positive amount., contract: com.qn7265.issue.AssetContract, transaction: 8A61BBD7421BD78228E3D0D610CBFF539E9FE10DE046E24BB624A4AF58528F09
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:127) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:80) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:143) ~[corda-core-3.4-corda.jar:?]
	at com.qn7265.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:82) ~[main/:?]
	at com.qn7265.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:27) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.4-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_211]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.4-corda.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: A newly issued asset must have a positive amount.
	at com.qn7265.issue.AssetContract.verifyIssue(AssetContract.kt:80) ~[qn7265-contracts.jar:?]
	at com.qn7265.issue.AssetContract.verify(AssetContract.kt:29) ~[qn7265-contracts.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:125) ~[corda-core-3.4-corda.jar:?]
	... 17 more
[INFO ] 2019-11-01T00:20:48,033Z [Mock network] flow.[fca95723-b323-4ba5-b888-b5e7ff1be4ff].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-8455026361316781662). {}
[INFO ] 2019-11-01T00:20:48,104Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-8455026361316781662). {invocation_id=10371341-52cf-44de-a2f3-4545f38d5964, invocation_timestamp=2019-11-01T00:20:48.098Z, session_id=10371341-52cf-44de-a2f3-4545f38d5964, session_timestamp=2019-11-01T00:20:48.098Z}
[INFO ] 2019-11-01T01:11:02,309Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.qn7265 in file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/classes/kotlin/test/com/qn7265: build/tmp/generated-test-cordapps/com.qn7265-f9c97ce2-96b7-446a-a2c1-d0c5f320ee74.jar {}
[INFO ] 2019-11-01T01:11:02,349Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.qn7265 in file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/classes/kotlin/main/com/qn7265: build/tmp/generated-test-cordapps/com.qn7265-04943bff-60c8-4f43-8814-50224d644dbe.jar {}
[INFO ] 2019-11-01T01:11:02,398Z [Test worker] cordapp.CordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/tmp/generated-test-cordapps/com.qn7265-f9c97ce2-96b7-446a-a2c1-d0c5f320ee74.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/tmp/generated-test-cordapps/com.qn7265-04943bff-60c8-4f43-8814-50224d644dbe.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/qn7265-contracts-new/build/libs/qn7265-contracts-new.jar, rootPackageName=com.qn7265), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/qn7265-contracts/build/libs/qn7265-contracts.jar, rootPackageName=com.qn7265), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/libs/prides.jar, rootPackageName=com.twig) {}
[INFO ] 2019-11-01T01:11:02,437Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T01:11:02,442Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T01:11:02,458Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/tmp/generated-test-cordapps/com.qn7265-f9c97ce2-96b7-446a-a2c1-d0c5f320ee74.jar {}
[INFO ] 2019-11-01T01:11:02,478Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/tmp/generated-test-cordapps/com.qn7265-04943bff-60c8-4f43-8814-50224d644dbe.jar {}
[INFO ] 2019-11-01T01:11:02,533Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/qn7265-contracts-new/build/libs/qn7265-contracts-new.jar {}
[INFO ] 2019-11-01T01:11:02,598Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/qn7265-contracts/build/libs/qn7265-contracts.jar {}
[INFO ] 2019-11-01T01:11:02,658Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/libs/prides.jar {}
[INFO ] 2019-11-01T01:11:02,814Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@1683f70e {}
[INFO ] 2019-11-01T01:11:03,683Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T01:11:03,748Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:11:03,753Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:11:06,113Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:11:06,769Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T01:11:06,772Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570666772) {}
[INFO ] 2019-11-01T01:11:06,784Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:11:06,924Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570666772) {}
[INFO ] 2019-11-01T01:11:06,927Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570666772) {}
[INFO ] 2019-11-01T01:11:07,427Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T01:11:07,566Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T01:11:07,670Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T01:11:07,677Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T01:11:07,788Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T01:11:07,929Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T01:11:07,935Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:11:07,938Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:11:07,943Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:11:07,948Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T01:11:08,025Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 0E34CC0CFFAEE2403F996C4342074E1C6BA9729729887C641D48D929DC5BE0BB, not inserting the second time {}
[INFO ] 2019-11-01T01:11:08,136Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570666772) {}
[INFO ] 2019-11-01T01:11:08,183Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:11:08,186Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570666772) {}
[INFO ] 2019-11-01T01:11:08,190Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570666772) {}
[INFO ] 2019-11-01T01:11:08,198Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:11:08,200Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570666772) {}
[INFO ] 2019-11-01T01:11:08,206Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T01:11:08,208Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T01:11:08,255Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T01:11:08,285Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@60e0eb {}
[INFO ] 2019-11-01T01:11:08,312Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T01:11:08,315Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:11:08,322Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:11:08,504Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:11:08,529Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T01:11:08,535Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570668534) {}
[INFO ] 2019-11-01T01:11:08,546Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:11:08,561Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570668534) {}
[INFO ] 2019-11-01T01:11:08,564Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570668534) {}
[INFO ] 2019-11-01T01:11:08,741Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T01:11:08,855Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T01:11:08,952Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T01:11:08,955Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T01:11:08,981Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T01:11:08,984Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:11:08,986Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:11:08,989Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:11:08,990Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T01:11:09,005Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 5E057DB7696BC7B4280CFC8BD519E974E4EFDB1E622D2DD16B6F1E73C1E706ED, not inserting the second time {}
[INFO ] 2019-11-01T01:11:09,014Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570666772) {}
[INFO ] 2019-11-01T01:11:09,018Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:11:09,037Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570666772) {}
[INFO ] 2019-11-01T01:11:09,039Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570668534) {}
[INFO ] 2019-11-01T01:11:09,047Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:11:09,058Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570668534) {}
[INFO ] 2019-11-01T01:11:09,060Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570668534) {}
[INFO ] 2019-11-01T01:11:09,066Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:11:09,068Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570668534) {}
[INFO ] 2019-11-01T01:11:09,069Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570668534) {}
[INFO ] 2019-11-01T01:11:09,070Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:11:09,072Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570668534) {}
[INFO ] 2019-11-01T01:11:09,075Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T01:11:09,076Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T01:11:09,095Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T01:11:09,105Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@3ad95be5 {}
[INFO ] 2019-11-01T01:11:09,119Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T01:11:09,121Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:11:09,122Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:11:09,281Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:11:09,291Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T01:11:09,293Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570669293) {}
[INFO ] 2019-11-01T01:11:09,297Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:11:09,303Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570669293) {}
[INFO ] 2019-11-01T01:11:09,304Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570669293) {}
[INFO ] 2019-11-01T01:11:09,435Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T01:11:09,599Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T01:11:09,691Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T01:11:09,693Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T01:11:09,710Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T01:11:09,712Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:11:09,713Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:11:09,714Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:11:09,715Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T01:11:09,733Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key F19FEBF779CA21B0ED2154855AD28A81A5F9135F4B202EC412FBCC6DF5D83ACE, not inserting the second time {}
[INFO ] 2019-11-01T01:11:09,741Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570666772) {}
[INFO ] 2019-11-01T01:11:09,744Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:11:09,764Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570666772) {}
[INFO ] 2019-11-01T01:11:09,766Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570669293) {}
[INFO ] 2019-11-01T01:11:09,768Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:11:09,778Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570669293) {}
[INFO ] 2019-11-01T01:11:09,779Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570668534) {}
[INFO ] 2019-11-01T01:11:09,782Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:11:09,796Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570668534) {}
[INFO ] 2019-11-01T01:11:09,811Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570669293) {}
[INFO ] 2019-11-01T01:11:09,819Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:11:09,842Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570669293) {}
[INFO ] 2019-11-01T01:11:09,843Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570669293) {}
[INFO ] 2019-11-01T01:11:09,848Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:11:09,849Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570669293) {}
[INFO ] 2019-11-01T01:11:09,851Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570669293) {}
[INFO ] 2019-11-01T01:11:09,852Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:11:09,853Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570669293) {}
[INFO ] 2019-11-01T01:11:10,840Z [Mock network] flow.[b607c2a0-3236-4ae6-a3c7-59472a1faa4b].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-8634079694262866623). {}
[INFO ] 2019-11-01T01:11:11,050Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-8634079694262866623). {invocation_id=7142164c-90fa-432b-987e-11cf7e6b7953, invocation_timestamp=2019-11-01T01:11:11.041Z, session_id=7142164c-90fa-432b-987e-11cf7e6b7953, session_timestamp=2019-11-01T01:11:11.041Z}
[INFO ] 2019-11-01T01:11:11,392Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T01:11:11,394Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T01:11:11,401Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@7c22190b {}
[INFO ] 2019-11-01T01:11:11,414Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T01:11:11,416Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:11:11,417Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:11:11,601Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:11:11,612Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T01:11:11,613Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570671613) {}
[INFO ] 2019-11-01T01:11:11,620Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:11:11,640Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570671613) {}
[INFO ] 2019-11-01T01:11:11,641Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570671613) {}
[INFO ] 2019-11-01T01:11:11,790Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T01:11:11,914Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T01:11:11,999Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T01:11:12,002Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T01:11:12,013Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T01:11:12,018Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T01:11:12,020Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:11:12,021Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:11:12,022Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:11:12,024Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T01:11:12,036Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key D0E3394F36DC7DC494C00EDD8B63D4189DA9EB7EAC128F8D483A4111B3D3E90D, not inserting the second time {}
[INFO ] 2019-11-01T01:11:12,043Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570671613) {}
[INFO ] 2019-11-01T01:11:12,050Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:11:12,054Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570671613) {}
[INFO ] 2019-11-01T01:11:12,056Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570671613) {}
[INFO ] 2019-11-01T01:11:12,057Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:11:12,058Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570671613) {}
[INFO ] 2019-11-01T01:11:12,062Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T01:11:12,063Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T01:11:12,080Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T01:11:12,089Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@1255fc63 {}
[INFO ] 2019-11-01T01:11:12,101Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T01:11:12,105Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:11:12,109Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:11:12,232Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:11:12,243Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T01:11:12,245Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570672245) {}
[INFO ] 2019-11-01T01:11:12,250Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:11:12,258Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570672245) {}
[INFO ] 2019-11-01T01:11:12,260Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570672245) {}
[INFO ] 2019-11-01T01:11:12,402Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T01:11:12,516Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T01:11:12,608Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T01:11:12,611Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T01:11:12,637Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T01:11:12,640Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:11:12,642Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:11:12,643Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:11:12,644Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T01:11:12,667Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 688727B2C17EDAB99CC100411148353609E98EFE6B27EB03F31AE3A9AB51FC26, not inserting the second time {}
[INFO ] 2019-11-01T01:11:12,676Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570671613) {}
[INFO ] 2019-11-01T01:11:12,683Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:11:12,697Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570671613) {}
[INFO ] 2019-11-01T01:11:12,699Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570672245) {}
[INFO ] 2019-11-01T01:11:12,701Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:11:12,712Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570672245) {}
[INFO ] 2019-11-01T01:11:12,720Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570672245) {}
[INFO ] 2019-11-01T01:11:12,764Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:11:12,769Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570672245) {}
[INFO ] 2019-11-01T01:11:12,773Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570672245) {}
[INFO ] 2019-11-01T01:11:12,774Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:11:12,775Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570672245) {}
[INFO ] 2019-11-01T01:11:12,781Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T01:11:12,782Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T01:11:12,797Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T01:11:12,805Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@76550a81 {}
[INFO ] 2019-11-01T01:11:12,814Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T01:11:12,816Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:11:12,817Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:11:12,939Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:11:12,948Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T01:11:12,949Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570672949) {}
[INFO ] 2019-11-01T01:11:12,952Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:11:12,960Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570672949) {}
[INFO ] 2019-11-01T01:11:12,961Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570672949) {}
[INFO ] 2019-11-01T01:11:13,097Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T01:11:13,228Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T01:11:13,319Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T01:11:13,321Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T01:11:13,334Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T01:11:13,336Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:11:13,339Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:11:13,341Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:11:13,343Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T01:11:13,357Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 075B5C50E5ABCF63D95B51C43FB1BA75576218C90FB7DF1A2DD6A6C27ADBA3F5, not inserting the second time {}
[INFO ] 2019-11-01T01:11:13,362Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570671613) {}
[INFO ] 2019-11-01T01:11:13,372Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:11:13,394Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570671613) {}
[INFO ] 2019-11-01T01:11:13,402Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570672949) {}
[INFO ] 2019-11-01T01:11:13,404Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:11:13,417Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570672949) {}
[INFO ] 2019-11-01T01:11:13,426Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570672245) {}
[INFO ] 2019-11-01T01:11:13,429Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:11:13,443Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570672245) {}
[INFO ] 2019-11-01T01:11:13,447Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570672949) {}
[INFO ] 2019-11-01T01:11:13,450Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:11:13,469Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570672949) {}
[INFO ] 2019-11-01T01:11:13,472Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570672949) {}
[INFO ] 2019-11-01T01:11:13,479Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:11:13,480Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570672949) {}
[INFO ] 2019-11-01T01:11:13,481Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570672949) {}
[INFO ] 2019-11-01T01:11:13,482Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:11:13,485Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570672949) {}
[INFO ] 2019-11-01T01:11:13,667Z [Mock network] flow.[2353af0a-2269-424e-a954-709f680a7f45].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=2846036220692015263). {}
[INFO ] 2019-11-01T01:11:13,799Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=2846036220692015263). {invocation_id=f28a60fa-02e4-42de-bbce-09046046ee49, invocation_timestamp=2019-11-01T01:11:13.795Z, session_id=f28a60fa-02e4-42de-bbce-09046046ee49, session_timestamp=2019-11-01T01:11:13.795Z}
[INFO ] 2019-11-01T01:11:14,042Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T01:11:14,049Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T01:11:14,056Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@753434fd {}
[INFO ] 2019-11-01T01:11:14,077Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T01:11:14,081Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:11:14,083Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:11:14,295Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:11:14,317Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T01:11:14,318Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570674318) {}
[INFO ] 2019-11-01T01:11:14,322Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:11:14,337Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570674318) {}
[INFO ] 2019-11-01T01:11:14,339Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570674318) {}
[INFO ] 2019-11-01T01:11:14,481Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T01:11:14,603Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T01:11:14,702Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T01:11:14,704Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T01:11:14,718Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T01:11:14,723Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T01:11:14,726Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:11:14,728Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:11:14,729Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:11:14,730Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T01:11:14,753Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 2ABAAFC7C354CFD27A92A622F79F84D4EA17976104301BAC90EC5FB70663E60D, not inserting the second time {}
[INFO ] 2019-11-01T01:11:14,767Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570674318) {}
[INFO ] 2019-11-01T01:11:14,781Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:11:14,786Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570674318) {}
[INFO ] 2019-11-01T01:11:14,796Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570674318) {}
[INFO ] 2019-11-01T01:11:14,797Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:11:14,798Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570674318) {}
[INFO ] 2019-11-01T01:11:14,801Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T01:11:14,802Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T01:11:14,828Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T01:11:14,837Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@5978ef46 {}
[INFO ] 2019-11-01T01:11:14,853Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T01:11:14,859Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:11:14,860Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:11:15,005Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:11:15,018Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T01:11:15,019Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570675019) {}
[INFO ] 2019-11-01T01:11:15,024Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:11:15,031Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570675019) {}
[INFO ] 2019-11-01T01:11:15,033Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570675019) {}
[INFO ] 2019-11-01T01:11:15,168Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T01:11:15,299Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T01:11:15,447Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T01:11:15,449Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T01:11:15,463Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T01:11:15,464Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:11:15,465Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:11:15,466Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:11:15,468Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T01:11:15,479Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key BEBE2D2C28DFD0758ED0DA476D660A66655163A6F06B366105E5D9DAE78FCE41, not inserting the second time {}
[INFO ] 2019-11-01T01:11:15,485Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570674318) {}
[INFO ] 2019-11-01T01:11:15,490Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:11:15,502Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570674318) {}
[INFO ] 2019-11-01T01:11:15,503Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570675019) {}
[INFO ] 2019-11-01T01:11:15,509Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:11:15,527Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570675019) {}
[INFO ] 2019-11-01T01:11:15,530Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570675019) {}
[INFO ] 2019-11-01T01:11:15,535Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:11:15,538Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570675019) {}
[INFO ] 2019-11-01T01:11:15,539Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570675019) {}
[INFO ] 2019-11-01T01:11:15,540Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:11:15,541Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570675019) {}
[INFO ] 2019-11-01T01:11:15,544Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T01:11:15,547Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T01:11:15,570Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T01:11:15,577Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@5ff4620a {}
[INFO ] 2019-11-01T01:11:15,584Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T01:11:15,585Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:11:15,586Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:11:15,716Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:11:15,724Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T01:11:15,724Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570675724) {}
[INFO ] 2019-11-01T01:11:15,728Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:11:15,733Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570675724) {}
[INFO ] 2019-11-01T01:11:15,734Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570675724) {}
[INFO ] 2019-11-01T01:11:15,869Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T01:11:16,001Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T01:11:16,093Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T01:11:16,095Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T01:11:16,107Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T01:11:16,108Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:11:16,109Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:11:16,110Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:11:16,111Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T01:11:16,122Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key DE2A0A2A3940DAB49EF81567E3CF62333535098E135BA6D0EAD0AF97A4906420, not inserting the second time {}
[INFO ] 2019-11-01T01:11:16,132Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570674318) {}
[INFO ] 2019-11-01T01:11:16,135Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:11:16,147Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570674318) {}
[INFO ] 2019-11-01T01:11:16,148Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570675724) {}
[INFO ] 2019-11-01T01:11:16,149Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:11:16,163Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570675724) {}
[INFO ] 2019-11-01T01:11:16,164Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570675019) {}
[INFO ] 2019-11-01T01:11:16,168Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:11:16,177Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570675019) {}
[INFO ] 2019-11-01T01:11:16,178Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570675724) {}
[INFO ] 2019-11-01T01:11:16,185Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:11:16,208Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570675724) {}
[INFO ] 2019-11-01T01:11:16,210Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570675724) {}
[INFO ] 2019-11-01T01:11:16,221Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:11:16,230Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570675724) {}
[INFO ] 2019-11-01T01:11:16,231Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570675724) {}
[INFO ] 2019-11-01T01:11:16,232Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:11:16,233Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570675724) {}
[WARN ] 2019-11-01T01:11:16,309Z [Mock network] flow.[5006e6d8-d382-4e4f-9714-1bb42d9c109b].run - Flow finished with exception {}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: A newly issued asset must have a positive amount., contract: com.qn7265.issue.AssetContract, transaction: 876ECAAB3FA33D53CE988FFC785597232C4E8CC6D1063E74FEF6CC0132F13DA8
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:127) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:80) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:143) ~[corda-core-3.4-corda.jar:?]
	at com.qn7265.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:82) ~[main/:?]
	at com.qn7265.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:27) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.4-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_211]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.4-corda.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: A newly issued asset must have a positive amount.
	at com.qn7265.issue.AssetContract.verifyIssue(AssetContract.kt:80) ~[qn7265-contracts.jar:?]
	at com.qn7265.issue.AssetContract.verify(AssetContract.kt:29) ~[qn7265-contracts.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:125) ~[corda-core-3.4-corda.jar:?]
	... 17 more
[INFO ] 2019-11-01T01:11:16,381Z [Mock network] flow.[c2016110-dff8-4fa4-8eef-d5524f2906e8].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-5806275833580619708). {}
[INFO ] 2019-11-01T01:11:16,438Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-5806275833580619708). {invocation_id=2a33520b-28b8-4ee2-a8a3-62ecd16947d4, invocation_timestamp=2019-11-01T01:11:16.437Z, session_id=2a33520b-28b8-4ee2-a8a3-62ecd16947d4, session_timestamp=2019-11-01T01:11:16.437Z}
[INFO ] 2019-11-01T01:11:16,743Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T01:11:16,749Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T01:11:16,759Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@412b6e97 {}
[INFO ] 2019-11-01T01:11:16,773Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T01:11:16,774Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:11:16,779Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:11:16,883Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:11:16,891Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T01:11:16,893Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570676893) {}
[INFO ] 2019-11-01T01:11:16,897Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:11:16,906Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570676893) {}
[INFO ] 2019-11-01T01:11:16,909Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570676893) {}
[INFO ] 2019-11-01T01:11:17,051Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T01:11:17,185Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T01:11:17,276Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T01:11:17,277Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T01:11:17,287Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T01:11:17,291Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T01:11:17,292Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:11:17,293Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:11:17,293Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:11:17,296Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T01:11:17,312Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 68227F623386D293C4CF347D1E8EC61BCD9C84E3C3FE6B3A77CBFEB6F84E89ED, not inserting the second time {}
[INFO ] 2019-11-01T01:11:17,318Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570676893) {}
[INFO ] 2019-11-01T01:11:17,328Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:11:17,329Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570676893) {}
[INFO ] 2019-11-01T01:11:17,332Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570676893) {}
[INFO ] 2019-11-01T01:11:17,333Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:11:17,333Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570676893) {}
[INFO ] 2019-11-01T01:11:17,338Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T01:11:17,339Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T01:11:17,368Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T01:11:17,380Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@189e73f0 {}
[INFO ] 2019-11-01T01:11:17,388Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T01:11:17,389Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:11:17,390Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:11:17,504Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:11:17,512Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T01:11:17,514Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570677514) {}
[INFO ] 2019-11-01T01:11:17,517Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:11:17,521Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570677514) {}
[INFO ] 2019-11-01T01:11:17,522Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570677514) {}
[INFO ] 2019-11-01T01:11:17,697Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T01:11:17,811Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T01:11:17,895Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T01:11:17,897Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T01:11:17,907Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T01:11:17,909Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:11:17,912Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:11:17,912Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:11:17,913Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T01:11:17,924Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 5A52881BDA92A43AB694678E297F95E4C58BD49D3BBED906E0CA4A591346E948, not inserting the second time {}
[INFO ] 2019-11-01T01:11:17,929Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570676893) {}
[INFO ] 2019-11-01T01:11:17,930Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:11:17,943Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570676893) {}
[INFO ] 2019-11-01T01:11:17,944Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570677514) {}
[INFO ] 2019-11-01T01:11:17,946Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:11:17,956Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570677514) {}
[INFO ] 2019-11-01T01:11:17,958Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570677514) {}
[INFO ] 2019-11-01T01:11:17,963Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:11:17,964Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570677514) {}
[INFO ] 2019-11-01T01:11:17,964Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570677514) {}
[INFO ] 2019-11-01T01:11:17,965Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:11:17,966Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570677514) {}
[INFO ] 2019-11-01T01:11:17,968Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T01:11:17,969Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T01:11:17,982Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T01:11:17,989Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@43c30983 {}
[INFO ] 2019-11-01T01:11:17,999Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T01:11:18,003Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:11:18,004Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:11:18,136Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:11:18,146Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T01:11:18,147Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572570678147) {}
[INFO ] 2019-11-01T01:11:18,150Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:11:18,155Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572570678147) {}
[INFO ] 2019-11-01T01:11:18,156Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572570678147) {}
[INFO ] 2019-11-01T01:11:18,305Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T01:11:18,416Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T01:11:18,562Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T01:11:18,564Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T01:11:18,575Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T01:11:18,577Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:11:18,578Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:11:18,578Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:11:18,579Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T01:11:18,590Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 91572963003267AF372E1A9E911BFB78EE14E8EABBD53D6D09061831539E7095, not inserting the second time {}
[INFO ] 2019-11-01T01:11:18,595Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570676893) {}
[INFO ] 2019-11-01T01:11:18,597Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:11:18,604Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570676893) {}
[INFO ] 2019-11-01T01:11:18,609Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572570678147) {}
[INFO ] 2019-11-01T01:11:18,611Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:11:18,617Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572570678147) {}
[INFO ] 2019-11-01T01:11:18,618Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570677514) {}
[INFO ] 2019-11-01T01:11:18,629Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:11:18,643Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570677514) {}
[INFO ] 2019-11-01T01:11:18,645Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572570678147) {}
[INFO ] 2019-11-01T01:11:18,646Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:11:18,659Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572570678147) {}
[INFO ] 2019-11-01T01:11:18,660Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572570678147) {}
[INFO ] 2019-11-01T01:11:18,663Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:11:18,664Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572570678147) {}
[INFO ] 2019-11-01T01:11:18,665Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572570678147) {}
[INFO ] 2019-11-01T01:11:18,666Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:11:18,667Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572570678147) {}
[INFO ] 2019-11-01T01:11:18,669Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T01:11:18,670Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T01:11:18,681Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T01:11:18,687Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@1d7baacc {}
[INFO ] 2019-11-01T01:11:18,696Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T01:11:18,698Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:11:18,699Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:11:18,794Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:11:18,800Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T01:11:18,801Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572570678801) {}
[INFO ] 2019-11-01T01:11:18,804Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:11:18,807Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572570678801) {}
[INFO ] 2019-11-01T01:11:18,808Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572570678801) {}
[INFO ] 2019-11-01T01:11:18,936Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T01:11:19,045Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T01:11:19,141Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T01:11:19,142Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T01:11:19,153Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T01:11:19,154Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:11:19,157Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:11:19,157Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:11:19,158Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T01:11:19,169Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key B79CB1F05C7D9A5B7150B5C21430E18939967F236F0DAAB0E26BCA1B74A297E1, not inserting the second time {}
[INFO ] 2019-11-01T01:11:19,174Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570676893) {}
[INFO ] 2019-11-01T01:11:19,175Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:11:19,225Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570676893) {}
[INFO ] 2019-11-01T01:11:19,227Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572570678801) {}
[INFO ] 2019-11-01T01:11:19,228Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:11:19,235Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572570678801) {}
[INFO ] 2019-11-01T01:11:19,236Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570677514) {}
[INFO ] 2019-11-01T01:11:19,238Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:11:19,247Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570677514) {}
[INFO ] 2019-11-01T01:11:19,249Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572570678801) {}
[INFO ] 2019-11-01T01:11:19,252Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:11:19,269Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572570678801) {}
[INFO ] 2019-11-01T01:11:19,270Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572570678147) {}
[INFO ] 2019-11-01T01:11:19,272Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:11:19,279Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572570678147) {}
[INFO ] 2019-11-01T01:11:19,281Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572570678801) {}
[INFO ] 2019-11-01T01:11:19,282Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:11:19,293Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572570678801) {}
[INFO ] 2019-11-01T01:11:19,295Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572570678801) {}
[INFO ] 2019-11-01T01:11:19,298Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:11:19,299Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572570678801) {}
[INFO ] 2019-11-01T01:11:19,300Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572570678801) {}
[INFO ] 2019-11-01T01:11:19,301Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:11:19,302Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572570678801) {}
[INFO ] 2019-11-01T01:11:19,310Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T01:11:19,311Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T01:11:19,330Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T01:11:19,342Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@28b2882d {}
[INFO ] 2019-11-01T01:11:19,351Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T01:11:19,352Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:11:19,353Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:11:19,439Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:11:19,458Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T01:11:19,459Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570679459) {}
[INFO ] 2019-11-01T01:11:19,465Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:11:19,469Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570679459) {}
[INFO ] 2019-11-01T01:11:19,470Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570679459) {}
[INFO ] 2019-11-01T01:11:19,615Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T01:11:19,750Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T01:11:19,845Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T01:11:19,847Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T01:11:19,858Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T01:11:19,859Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:11:19,860Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:11:19,861Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:11:19,862Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T01:11:19,872Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 9785642E9A4E05043ED524C0482BCA22FE3306E404841693541013A90AEF5F87, not inserting the second time {}
[INFO ] 2019-11-01T01:11:19,877Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570676893) {}
[INFO ] 2019-11-01T01:11:19,878Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:11:19,885Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570676893) {}
[INFO ] 2019-11-01T01:11:19,886Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570679459) {}
[INFO ] 2019-11-01T01:11:19,887Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:11:19,893Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570679459) {}
[INFO ] 2019-11-01T01:11:19,894Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570677514) {}
[INFO ] 2019-11-01T01:11:19,895Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:11:19,900Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570677514) {}
[INFO ] 2019-11-01T01:11:19,901Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570679459) {}
[INFO ] 2019-11-01T01:11:19,903Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:11:19,908Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570679459) {}
[INFO ] 2019-11-01T01:11:19,916Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572570678147) {}
[INFO ] 2019-11-01T01:11:19,918Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:11:19,924Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572570678147) {}
[INFO ] 2019-11-01T01:11:19,927Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570679459) {}
[INFO ] 2019-11-01T01:11:19,929Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:11:19,938Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570679459) {}
[INFO ] 2019-11-01T01:11:19,939Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572570678801) {}
[INFO ] 2019-11-01T01:11:19,948Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:11:19,956Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572570678801) {}
[INFO ] 2019-11-01T01:11:19,958Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570679459) {}
[INFO ] 2019-11-01T01:11:19,963Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:11:19,968Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570679459) {}
[INFO ] 2019-11-01T01:11:19,969Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570679459) {}
[INFO ] 2019-11-01T01:11:19,972Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:11:19,973Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570679459) {}
[INFO ] 2019-11-01T01:11:19,974Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570679459) {}
[INFO ] 2019-11-01T01:11:19,974Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:11:19,975Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570679459) {}
[INFO ] 2019-11-01T01:11:19,982Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:11:19,983Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:11:19,984Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:11:19,987Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:11:19,991Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:11:19,992Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:11:19,993Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:11:19,993Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:11:20,184Z [Mock network] flow.[0f389438-d147-40bd-aace-098bb2f73739].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=4574565446029240564). {}
[INFO ] 2019-11-01T01:11:20,283Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=4574565446029240564). {invocation_id=16f5b7db-9c69-4037-894e-f3345830cf75, invocation_timestamp=2019-11-01T01:11:20.282Z, session_id=16f5b7db-9c69-4037-894e-f3345830cf75, session_timestamp=2019-11-01T01:11:20.282Z}
[INFO ] 2019-11-01T01:11:20,481Z [Mock network] flow.[0f389438-d147-40bd-aace-098bb2f73739].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-6654822226628730670). {}
[INFO ] 2019-11-01T01:11:20,501Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-6654822226628730670). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=c474c645-1505-439a-a972-5595960ecb2b, invocation_timestamp=2019-11-01T01:11:20.500Z, session_id=c474c645-1505-439a-a972-5595960ecb2b, session_timestamp=2019-11-01T01:11:20.500Z}
[INFO ] 2019-11-01T01:11:20,594Z [Mock network] flow.[0f389438-d147-40bd-aace-098bb2f73739].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=2878823143389727678). {}
[INFO ] 2019-11-01T01:11:20,622Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=2878823143389727678). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=6d32b176-4993-4bff-8930-b78e3148a62e, invocation_timestamp=2019-11-01T01:11:20.621Z, session_id=6d32b176-4993-4bff-8930-b78e3148a62e, session_timestamp=2019-11-01T01:11:20.621Z}
[INFO ] 2019-11-01T01:11:20,732Z [Mock network] flow.[57de3316-65b0-40b2-814a-a04fad15c37a].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=1054891567957070987). {}
[INFO ] 2019-11-01T01:11:20,772Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=1054891567957070987). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=04926801-a615-4f8d-a234-1446c6d8231f, invocation_timestamp=2019-11-01T01:11:20.771Z, session_id=04926801-a615-4f8d-a234-1446c6d8231f, session_timestamp=2019-11-01T01:11:20.771Z}
[INFO ] 2019-11-01T01:11:20,944Z [Mock network] flow.[919b7f84-eed3-4019-a5da-9dec14ddc366].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=2823997909582801000). {}
[INFO ] 2019-11-01T01:11:20,987Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=2823997909582801000). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=a0026b9c-bcc2-4b0c-806d-fadf4b7322d8, invocation_timestamp=2019-11-01T01:11:20.985Z, session_id=a0026b9c-bcc2-4b0c-806d-fadf4b7322d8, session_timestamp=2019-11-01T01:11:20.985Z}
[INFO ] 2019-11-01T01:11:21,055Z [Mock network] flow.[3dfdddca-4fe2-4aa1-8bd1-0de0f83acdad].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:11:21,125Z [Mock network] flow.[3dfdddca-4fe2-4aa1-8bd1-0de0f83acdad].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:11:21,206Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T01:11:21,249Z [Mock network] flow.[6b55d756-1f14-4707-b417-c9efd3ace789].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=2589433563131796723). {}
[INFO ] 2019-11-01T01:11:21,274Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=2589433563131796723). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=13ff3ae7-3d8e-475d-bb63-7710244f7c41, invocation_timestamp=2019-11-01T01:11:21.273Z, session_id=13ff3ae7-3d8e-475d-bb63-7710244f7c41, session_timestamp=2019-11-01T01:11:21.273Z}
[INFO ] 2019-11-01T01:11:21,290Z [Mock network] flow.[867aa315-652a-4fa4-9b4e-7b9cfc8fe416].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T01:11:21,394Z [Mock network] flow.[867aa315-652a-4fa4-9b4e-7b9cfc8fe416].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T01:11:21,451Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.qn7265.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T01:11:21,560Z [Mock network] flow.[6b55d756-1f14-4707-b417-c9efd3ace789].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:11:21,600Z [Mock network] flow.[6b55d756-1f14-4707-b417-c9efd3ace789].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:11:21,602Z [Mock network] flow.[6b55d756-1f14-4707-b417-c9efd3ace789].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:11:21,638Z [Mock network] flow.[6b55d756-1f14-4707-b417-c9efd3ace789].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:11:21,807Z [Mock network] flow.[867aa315-652a-4fa4-9b4e-7b9cfc8fe416].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=5409689237269919852). {}
[INFO ] 2019-11-01T01:11:21,835Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=5409689237269919852). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=a394a5cb-6ac1-4686-bb8c-51271ad072b6, invocation_timestamp=2019-11-01T01:11:21.834Z, session_id=a394a5cb-6ac1-4686-bb8c-51271ad072b6, session_timestamp=2019-11-01T01:11:21.834Z}
[INFO ] 2019-11-01T01:11:21,852Z [Mock network] flow.[a561891d-599f-4fc6-bdcc-963a2b1f32d2].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:11:21,964Z [Mock network] flow.[a561891d-599f-4fc6-bdcc-963a2b1f32d2].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:11:21,967Z [Mock network] flow.[a561891d-599f-4fc6-bdcc-963a2b1f32d2].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:11:21,994Z [Mock network] flow.[a561891d-599f-4fc6-bdcc-963a2b1f32d2].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:11:22,112Z [Mock network] flow.[867aa315-652a-4fa4-9b4e-7b9cfc8fe416].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=7478373014894421812). {}
[INFO ] 2019-11-01T01:11:22,125Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=7478373014894421812). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=d7f1f88c-fa93-4b53-afcc-8ac1b8b5f3df, invocation_timestamp=2019-11-01T01:11:22.124Z, session_id=d7f1f88c-fa93-4b53-afcc-8ac1b8b5f3df, session_timestamp=2019-11-01T01:11:22.124Z}
[INFO ] 2019-11-01T01:11:22,171Z [Mock network] flow.[42374057-7e3c-4c6e-8a7e-922260f5722e].call - Requesting 2 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:11:22,247Z [Mock network] flow.[42374057-7e3c-4c6e-8a7e-922260f5722e].call - Fetched 2 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:11:22,309Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: interface net.corda.core.contracts.ContractState, criteria: VaultQueryCriteria(status=UNCONSUMED, contractStateTypes=null, stateRefs=[8B01AAAF483169CFA44441CB85CE1986D391EF13B89605C02C154AF426346594(0), 176F9A2DFDEC35FED5977485222FFA20BE4074BBACA781A0BAA8CAE45466BDE2(0)], notary=null, softLockingCondition=null, timeCondition=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T01:11:22,319Z [Mock network] flow.[867aa315-652a-4fa4-9b4e-7b9cfc8fe416].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=3192413083806565060). {}
[INFO ] 2019-11-01T01:11:22,365Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=3192413083806565060). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=d7fe5a7f-161e-42d2-92fd-4b620beffd78, invocation_timestamp=2019-11-01T01:11:22.364Z, session_id=d7fe5a7f-161e-42d2-92fd-4b620beffd78, session_timestamp=2019-11-01T01:11:22.364Z}
[INFO ] 2019-11-01T01:11:22,411Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: interface net.corda.core.contracts.ContractState, criteria: VaultQueryCriteria(status=UNCONSUMED, contractStateTypes=null, stateRefs=[8B01AAAF483169CFA44441CB85CE1986D391EF13B89605C02C154AF426346594(0), 176F9A2DFDEC35FED5977485222FFA20BE4074BBACA781A0BAA8CAE45466BDE2(0)], notary=null, softLockingCondition=null, timeCondition=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T01:11:22,457Z [Mock network] flow.[867aa315-652a-4fa4-9b4e-7b9cfc8fe416].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=3833748484132851758). {}
[INFO ] 2019-11-01T01:11:22,468Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=3833748484132851758). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=1b655854-192f-4c58-a2b2-25b95c5a66ee, invocation_timestamp=2019-11-01T01:11:22.467Z, session_id=1b655854-192f-4c58-a2b2-25b95c5a66ee, session_timestamp=2019-11-01T01:11:22.467Z}
[INFO ] 2019-11-01T01:11:22,500Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: interface net.corda.core.contracts.ContractState, criteria: VaultQueryCriteria(status=UNCONSUMED, contractStateTypes=null, stateRefs=[8B01AAAF483169CFA44441CB85CE1986D391EF13B89605C02C154AF426346594(0), 176F9A2DFDEC35FED5977485222FFA20BE4074BBACA781A0BAA8CAE45466BDE2(0)], notary=null, softLockingCondition=null, timeCondition=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T01:11:22,552Z [Mock network] flow.[867aa315-652a-4fa4-9b4e-7b9cfc8fe416].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-3202945136120504960). {}
[INFO ] 2019-11-01T01:11:22,562Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-3202945136120504960). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=f495d57d-a476-46a7-a0ba-cba0da019d27, invocation_timestamp=2019-11-01T01:11:22.562Z, session_id=f495d57d-a476-46a7-a0ba-cba0da019d27, session_timestamp=2019-11-01T01:11:22.562Z}
[INFO ] 2019-11-01T01:11:22,573Z [Mock network] flow.[83c77874-7458-4eb2-8ad4-76ef4db5ec9c].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:11:22,654Z [Mock network] flow.[83c77874-7458-4eb2-8ad4-76ef4db5ec9c].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:11:22,680Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: interface net.corda.core.contracts.ContractState, criteria: VaultQueryCriteria(status=UNCONSUMED, contractStateTypes=null, stateRefs=[8B01AAAF483169CFA44441CB85CE1986D391EF13B89605C02C154AF426346594(0), 176F9A2DFDEC35FED5977485222FFA20BE4074BBACA781A0BAA8CAE45466BDE2(0)], notary=null, softLockingCondition=null, timeCondition=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T01:15:40,647Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.qn7265 in file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/classes/kotlin/test/com/qn7265: build/tmp/generated-test-cordapps/com.qn7265-c6d75953-aeef-4dba-ba33-55312dbe5197.jar {}
[INFO ] 2019-11-01T01:15:40,668Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.qn7265 in file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/classes/kotlin/main/com/qn7265: build/tmp/generated-test-cordapps/com.qn7265-1872b84d-c8cf-4fbf-ac77-68b25991ab38.jar {}
[INFO ] 2019-11-01T01:15:40,710Z [Test worker] cordapp.CordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/tmp/generated-test-cordapps/com.qn7265-c6d75953-aeef-4dba-ba33-55312dbe5197.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/tmp/generated-test-cordapps/com.qn7265-1872b84d-c8cf-4fbf-ac77-68b25991ab38.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/qn7265-contracts-new/build/libs/qn7265-contracts-new.jar, rootPackageName=com.qn7265), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/qn7265-contracts/build/libs/qn7265-contracts.jar, rootPackageName=com.qn7265), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/libs/prides.jar, rootPackageName=com.twig) {}
[INFO ] 2019-11-01T01:15:40,750Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T01:15:40,754Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T01:15:40,770Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/tmp/generated-test-cordapps/com.qn7265-c6d75953-aeef-4dba-ba33-55312dbe5197.jar {}
[INFO ] 2019-11-01T01:15:40,801Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/tmp/generated-test-cordapps/com.qn7265-1872b84d-c8cf-4fbf-ac77-68b25991ab38.jar {}
[INFO ] 2019-11-01T01:15:40,852Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/qn7265-contracts-new/build/libs/qn7265-contracts-new.jar {}
[INFO ] 2019-11-01T01:15:40,915Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/qn7265-contracts/build/libs/qn7265-contracts.jar {}
[INFO ] 2019-11-01T01:15:40,973Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/libs/prides.jar {}
[INFO ] 2019-11-01T01:15:41,149Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@27a9d12b {}
[INFO ] 2019-11-01T01:15:41,986Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T01:15:42,051Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:15:42,058Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:15:44,421Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:15:45,271Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T01:15:45,274Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570945274) {}
[INFO ] 2019-11-01T01:15:45,286Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:15:45,398Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570945274) {}
[INFO ] 2019-11-01T01:15:45,402Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570945274) {}
[INFO ] 2019-11-01T01:15:45,707Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T01:15:45,861Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T01:15:45,963Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T01:15:45,970Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T01:15:46,067Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T01:15:46,206Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T01:15:46,212Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:15:46,215Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:15:46,217Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:15:46,220Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T01:15:46,272Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key B9DC195207FC9119F0B31183D74BD6A2A00FB696631A7D01390074959BC4FF19, not inserting the second time {}
[INFO ] 2019-11-01T01:15:46,362Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570945274) {}
[INFO ] 2019-11-01T01:15:46,407Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:15:46,410Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570945274) {}
[INFO ] 2019-11-01T01:15:46,415Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570945274) {}
[INFO ] 2019-11-01T01:15:46,422Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:15:46,429Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570945274) {}
[INFO ] 2019-11-01T01:15:46,437Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T01:15:46,439Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T01:15:46,488Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T01:15:46,517Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@1801aefc {}
[INFO ] 2019-11-01T01:15:46,555Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T01:15:46,558Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:15:46,564Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:15:46,813Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:15:46,825Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T01:15:46,828Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570946828) {}
[INFO ] 2019-11-01T01:15:46,834Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:15:46,840Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570946828) {}
[INFO ] 2019-11-01T01:15:46,842Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570946828) {}
[INFO ] 2019-11-01T01:15:46,992Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T01:15:47,124Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T01:15:47,217Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T01:15:47,220Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T01:15:47,245Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T01:15:47,248Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:15:47,250Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:15:47,252Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:15:47,253Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T01:15:47,268Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 4E8939F68E52473DC0B8AC4DBBB983C61478CF2CAB13C02FB9DC333276815678, not inserting the second time {}
[INFO ] 2019-11-01T01:15:47,277Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570945274) {}
[INFO ] 2019-11-01T01:15:47,287Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:15:47,299Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570945274) {}
[INFO ] 2019-11-01T01:15:47,304Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570946828) {}
[INFO ] 2019-11-01T01:15:47,312Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:15:47,335Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570946828) {}
[INFO ] 2019-11-01T01:15:47,339Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570946828) {}
[INFO ] 2019-11-01T01:15:47,354Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:15:47,357Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570946828) {}
[INFO ] 2019-11-01T01:15:47,359Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570946828) {}
[INFO ] 2019-11-01T01:15:47,363Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:15:47,366Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570946828) {}
[INFO ] 2019-11-01T01:15:47,371Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T01:15:47,373Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T01:15:47,409Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T01:15:47,419Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@460a51df {}
[INFO ] 2019-11-01T01:15:47,430Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T01:15:47,432Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:15:47,434Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:15:47,539Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:15:47,549Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T01:15:47,551Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570947551) {}
[INFO ] 2019-11-01T01:15:47,556Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:15:47,561Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570947551) {}
[INFO ] 2019-11-01T01:15:47,563Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570947551) {}
[INFO ] 2019-11-01T01:15:47,696Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T01:15:47,832Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T01:15:47,925Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T01:15:47,928Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T01:15:47,948Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T01:15:47,950Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:15:47,951Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:15:47,953Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:15:47,954Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T01:15:47,968Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 8D15A2E329F236D5BDFA1337CBAF78EFEDEBF2FCB436202043D87DB5A1E21D08, not inserting the second time {}
[INFO ] 2019-11-01T01:15:48,015Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570945274) {}
[INFO ] 2019-11-01T01:15:48,018Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:15:48,028Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570945274) {}
[INFO ] 2019-11-01T01:15:48,030Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570947551) {}
[INFO ] 2019-11-01T01:15:48,033Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:15:48,046Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570947551) {}
[INFO ] 2019-11-01T01:15:48,048Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570946828) {}
[INFO ] 2019-11-01T01:15:48,050Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:15:48,061Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570946828) {}
[INFO ] 2019-11-01T01:15:48,069Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570947551) {}
[INFO ] 2019-11-01T01:15:48,072Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:15:48,084Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570947551) {}
[INFO ] 2019-11-01T01:15:48,085Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570947551) {}
[INFO ] 2019-11-01T01:15:48,091Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:15:48,092Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570947551) {}
[INFO ] 2019-11-01T01:15:48,093Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570947551) {}
[INFO ] 2019-11-01T01:15:48,095Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:15:48,096Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570947551) {}
[INFO ] 2019-11-01T01:15:49,208Z [Mock network] flow.[9f7da0e3-a11d-4294-a1d5-e552844f0973].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=1606994020977109308). {}
[INFO ] 2019-11-01T01:15:49,388Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=1606994020977109308). {invocation_id=938896d3-69cb-4a6d-9f1b-cb1bf9e50ace, invocation_timestamp=2019-11-01T01:15:49.380Z, session_id=938896d3-69cb-4a6d-9f1b-cb1bf9e50ace, session_timestamp=2019-11-01T01:15:49.380Z}
[INFO ] 2019-11-01T01:15:49,776Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T01:15:49,778Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T01:15:49,795Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6780a756 {}
[INFO ] 2019-11-01T01:15:49,821Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T01:15:49,823Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:15:49,826Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:15:50,058Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:15:50,074Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T01:15:50,076Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570950076) {}
[INFO ] 2019-11-01T01:15:50,083Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:15:50,108Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570950076) {}
[INFO ] 2019-11-01T01:15:50,110Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570950076) {}
[INFO ] 2019-11-01T01:15:50,292Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T01:15:50,449Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T01:15:50,545Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T01:15:50,547Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T01:15:50,558Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T01:15:50,563Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T01:15:50,564Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:15:50,568Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:15:50,569Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:15:50,570Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T01:15:50,598Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key AC13EFF652F7DDD95619467477769CAD1AB0B3F2DCA6F7BB4E2B81348C6BF845, not inserting the second time {}
[INFO ] 2019-11-01T01:15:50,611Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570950076) {}
[INFO ] 2019-11-01T01:15:50,623Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:15:50,626Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570950076) {}
[INFO ] 2019-11-01T01:15:50,627Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570950076) {}
[INFO ] 2019-11-01T01:15:50,629Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:15:50,630Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570950076) {}
[INFO ] 2019-11-01T01:15:50,634Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T01:15:50,636Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T01:15:50,663Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T01:15:50,681Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@4d929252 {}
[INFO ] 2019-11-01T01:15:50,693Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T01:15:50,697Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:15:50,701Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:15:50,846Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:15:50,855Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T01:15:50,857Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570950857) {}
[INFO ] 2019-11-01T01:15:50,861Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:15:50,865Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570950857) {}
[INFO ] 2019-11-01T01:15:50,866Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570950857) {}
[INFO ] 2019-11-01T01:15:50,999Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T01:15:51,132Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T01:15:51,223Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T01:15:51,225Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T01:15:51,238Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T01:15:51,240Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:15:51,241Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:15:51,242Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:15:51,243Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T01:15:51,256Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 66BCC736E89B7CD9DC093827FAB69FDBA970EB8E2A4A01F45D92FCE86CAE05B2, not inserting the second time {}
[INFO ] 2019-11-01T01:15:51,266Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570950076) {}
[INFO ] 2019-11-01T01:15:51,272Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:15:51,281Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570950076) {}
[INFO ] 2019-11-01T01:15:51,282Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570950857) {}
[INFO ] 2019-11-01T01:15:51,284Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:15:51,291Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570950857) {}
[INFO ] 2019-11-01T01:15:51,296Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570950857) {}
[INFO ] 2019-11-01T01:15:51,306Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:15:51,307Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570950857) {}
[INFO ] 2019-11-01T01:15:51,308Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570950857) {}
[INFO ] 2019-11-01T01:15:51,309Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:15:51,312Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570950857) {}
[INFO ] 2019-11-01T01:15:51,316Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T01:15:51,317Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T01:15:51,336Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T01:15:51,347Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6a3165c3 {}
[INFO ] 2019-11-01T01:15:51,360Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T01:15:51,362Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:15:51,363Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:15:51,519Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:15:51,537Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T01:15:51,546Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570951546) {}
[INFO ] 2019-11-01T01:15:51,551Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:15:51,555Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570951546) {}
[INFO ] 2019-11-01T01:15:51,559Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570951546) {}
[INFO ] 2019-11-01T01:15:51,756Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T01:15:51,883Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T01:15:51,980Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T01:15:51,982Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T01:15:52,006Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T01:15:52,009Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:15:52,010Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:15:52,012Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:15:52,014Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T01:15:52,035Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 12DDCE12E614AF19F5C3F3B012B009BBDF26F5B499128A2CBCBEABF608D1763B, not inserting the second time {}
[INFO ] 2019-11-01T01:15:52,041Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570950076) {}
[INFO ] 2019-11-01T01:15:52,045Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:15:52,059Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570950076) {}
[INFO ] 2019-11-01T01:15:52,066Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570951546) {}
[INFO ] 2019-11-01T01:15:52,072Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:15:52,086Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570951546) {}
[INFO ] 2019-11-01T01:15:52,091Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570950857) {}
[INFO ] 2019-11-01T01:15:52,097Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:15:52,111Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570950857) {}
[INFO ] 2019-11-01T01:15:52,115Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570951546) {}
[INFO ] 2019-11-01T01:15:52,122Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:15:52,136Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570951546) {}
[INFO ] 2019-11-01T01:15:52,145Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570951546) {}
[INFO ] 2019-11-01T01:15:52,150Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:15:52,153Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570951546) {}
[INFO ] 2019-11-01T01:15:52,154Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570951546) {}
[INFO ] 2019-11-01T01:15:52,156Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:15:52,157Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570951546) {}
[INFO ] 2019-11-01T01:15:52,334Z [Mock network] flow.[373baf4c-3818-4602-a50b-1b02c1879ddd].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=1991224732576972997). {}
[INFO ] 2019-11-01T01:15:52,470Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=1991224732576972997). {invocation_id=9d59528b-2dd3-4dce-bb80-aeb89e0df0da, invocation_timestamp=2019-11-01T01:15:52.468Z, session_id=9d59528b-2dd3-4dce-bb80-aeb89e0df0da, session_timestamp=2019-11-01T01:15:52.468Z}
[INFO ] 2019-11-01T01:15:52,713Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T01:15:52,715Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T01:15:52,730Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@4fd3c591 {}
[INFO ] 2019-11-01T01:15:52,743Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T01:15:52,746Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:15:52,747Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:15:52,884Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:15:52,892Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T01:15:52,894Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570952894) {}
[INFO ] 2019-11-01T01:15:52,897Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:15:52,906Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570952894) {}
[INFO ] 2019-11-01T01:15:52,907Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570952894) {}
[INFO ] 2019-11-01T01:15:53,085Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T01:15:53,216Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T01:15:53,311Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T01:15:53,316Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T01:15:53,331Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T01:15:53,335Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T01:15:53,337Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:15:53,338Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:15:53,338Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:15:53,343Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T01:15:53,364Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 99254014B62E341D2F9FA1F6BF8BE22D89606B1D849E38A84FC71037F85F1D60, not inserting the second time {}
[INFO ] 2019-11-01T01:15:53,373Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570952894) {}
[INFO ] 2019-11-01T01:15:53,378Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:15:53,379Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570952894) {}
[INFO ] 2019-11-01T01:15:53,385Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570952894) {}
[INFO ] 2019-11-01T01:15:53,385Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:15:53,386Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570952894) {}
[INFO ] 2019-11-01T01:15:53,389Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T01:15:53,390Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T01:15:53,423Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T01:15:53,447Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@1aa48470 {}
[INFO ] 2019-11-01T01:15:53,484Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T01:15:53,486Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:15:53,487Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:15:53,651Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:15:53,658Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T01:15:53,659Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570953659) {}
[INFO ] 2019-11-01T01:15:53,662Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:15:53,666Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570953659) {}
[INFO ] 2019-11-01T01:15:53,667Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570953659) {}
[INFO ] 2019-11-01T01:15:53,832Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T01:15:53,953Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T01:15:54,049Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T01:15:54,051Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T01:15:54,070Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T01:15:54,072Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:15:54,073Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:15:54,074Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:15:54,074Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T01:15:54,086Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key F13F6A6FB8BF40CE41080F9B0D3C2EF0592F2FF9156FE3BADDF1109F1AFA1A75, not inserting the second time {}
[INFO ] 2019-11-01T01:15:54,092Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570952894) {}
[INFO ] 2019-11-01T01:15:54,093Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:15:54,104Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570952894) {}
[INFO ] 2019-11-01T01:15:54,105Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570953659) {}
[INFO ] 2019-11-01T01:15:54,128Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:15:54,136Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570953659) {}
[INFO ] 2019-11-01T01:15:54,147Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570953659) {}
[INFO ] 2019-11-01T01:15:54,155Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:15:54,157Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570953659) {}
[INFO ] 2019-11-01T01:15:54,157Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570953659) {}
[INFO ] 2019-11-01T01:15:54,158Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:15:54,159Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570953659) {}
[INFO ] 2019-11-01T01:15:54,162Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T01:15:54,162Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T01:15:54,174Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T01:15:54,181Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@11ab3df3 {}
[INFO ] 2019-11-01T01:15:54,189Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T01:15:54,190Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:15:54,191Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:15:54,313Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:15:54,320Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T01:15:54,321Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570954321) {}
[INFO ] 2019-11-01T01:15:54,324Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:15:54,327Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570954321) {}
[INFO ] 2019-11-01T01:15:54,328Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570954321) {}
[INFO ] 2019-11-01T01:15:54,455Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T01:15:54,569Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T01:15:54,662Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T01:15:54,664Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T01:15:54,676Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T01:15:54,677Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:15:54,678Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:15:54,679Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:15:54,680Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T01:15:54,691Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 15BD901AE3C884E8353CA2385E121CACC655D884F741753029547CD592EA5F02, not inserting the second time {}
[INFO ] 2019-11-01T01:15:54,696Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570952894) {}
[INFO ] 2019-11-01T01:15:54,698Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:15:54,711Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570952894) {}
[INFO ] 2019-11-01T01:15:54,712Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570954321) {}
[INFO ] 2019-11-01T01:15:54,714Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:15:54,720Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570954321) {}
[INFO ] 2019-11-01T01:15:54,721Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570953659) {}
[INFO ] 2019-11-01T01:15:54,722Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:15:54,728Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570953659) {}
[INFO ] 2019-11-01T01:15:54,729Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570954321) {}
[INFO ] 2019-11-01T01:15:54,730Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:15:54,736Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570954321) {}
[INFO ] 2019-11-01T01:15:54,737Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570954321) {}
[INFO ] 2019-11-01T01:15:54,744Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:15:54,751Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570954321) {}
[INFO ] 2019-11-01T01:15:54,753Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570954321) {}
[INFO ] 2019-11-01T01:15:54,754Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:15:54,757Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570954321) {}
[WARN ] 2019-11-01T01:15:54,827Z [Mock network] flow.[5df410ad-4bf0-41d4-bfc3-fd892177e785].run - Flow finished with exception {}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: A newly issued asset must have a positive amount., contract: com.qn7265.issue.AssetContract, transaction: 43110CD984C05364562696BD9E9F63A5A905228B6BEA31869B6A8596A6287069
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:127) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:80) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:143) ~[corda-core-3.4-corda.jar:?]
	at com.qn7265.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:82) ~[main/:?]
	at com.qn7265.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:27) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.4-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_211]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.4-corda.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: A newly issued asset must have a positive amount.
	at com.qn7265.issue.AssetContract.verifyIssue(AssetContract.kt:80) ~[qn7265-contracts.jar:?]
	at com.qn7265.issue.AssetContract.verify(AssetContract.kt:29) ~[qn7265-contracts.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:125) ~[corda-core-3.4-corda.jar:?]
	... 17 more
[INFO ] 2019-11-01T01:15:54,931Z [Mock network] flow.[ee16e553-a969-4f4f-b799-ea785b79db46].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=4312044637459315548). {}
[INFO ] 2019-11-01T01:15:55,020Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=4312044637459315548). {invocation_id=8683fb8c-d7c0-4f6f-869f-4fc1e418b5b7, invocation_timestamp=2019-11-01T01:15:55.019Z, session_id=8683fb8c-d7c0-4f6f-869f-4fc1e418b5b7, session_timestamp=2019-11-01T01:15:55.019Z}
[INFO ] 2019-11-01T01:15:55,307Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T01:15:55,312Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T01:15:55,325Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@1dd5b236 {}
[INFO ] 2019-11-01T01:15:55,340Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T01:15:55,341Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:15:55,342Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:15:55,483Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:15:55,503Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T01:15:55,506Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570955506) {}
[INFO ] 2019-11-01T01:15:55,510Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:15:55,523Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570955506) {}
[INFO ] 2019-11-01T01:15:55,526Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570955506) {}
[INFO ] 2019-11-01T01:15:55,672Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T01:15:55,788Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T01:15:55,889Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T01:15:55,892Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T01:15:55,902Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T01:15:55,907Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T01:15:55,908Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:15:55,909Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:15:55,910Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:15:55,911Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T01:15:55,922Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 67EC756E2AD75186CC660520D60F59D621176F3220816C4F021C6246647AF14F, not inserting the second time {}
[INFO ] 2019-11-01T01:15:55,928Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570955506) {}
[INFO ] 2019-11-01T01:15:55,937Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:15:55,939Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570955506) {}
[INFO ] 2019-11-01T01:15:55,940Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570955506) {}
[INFO ] 2019-11-01T01:15:55,940Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:15:55,941Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570955506) {}
[INFO ] 2019-11-01T01:15:55,943Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T01:15:55,944Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T01:15:55,955Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T01:15:55,962Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@65b9c34c {}
[INFO ] 2019-11-01T01:15:55,969Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T01:15:55,969Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:15:55,970Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:15:56,088Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:15:56,094Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T01:15:56,095Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570956095) {}
[INFO ] 2019-11-01T01:15:56,098Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:15:56,101Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570956095) {}
[INFO ] 2019-11-01T01:15:56,102Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570956095) {}
[INFO ] 2019-11-01T01:15:56,242Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T01:15:56,374Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T01:15:56,466Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T01:15:56,467Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T01:15:56,478Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T01:15:56,480Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:15:56,480Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:15:56,481Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:15:56,482Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T01:15:56,493Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 7F80790F026342A5E03619151249CB45F6515308AD0FAA09959DEC3E21B98647, not inserting the second time {}
[INFO ] 2019-11-01T01:15:56,503Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570955506) {}
[INFO ] 2019-11-01T01:15:56,505Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:15:56,515Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570955506) {}
[INFO ] 2019-11-01T01:15:56,516Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570956095) {}
[INFO ] 2019-11-01T01:15:56,518Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:15:56,523Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570956095) {}
[INFO ] 2019-11-01T01:15:56,526Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570956095) {}
[INFO ] 2019-11-01T01:15:56,530Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:15:56,531Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570956095) {}
[INFO ] 2019-11-01T01:15:56,532Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570956095) {}
[INFO ] 2019-11-01T01:15:56,534Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:15:56,535Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570956095) {}
[INFO ] 2019-11-01T01:15:56,537Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T01:15:56,538Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T01:15:56,556Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T01:15:56,566Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@783d47b1 {}
[INFO ] 2019-11-01T01:15:56,582Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T01:15:56,583Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:15:56,584Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:15:56,670Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:15:56,683Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T01:15:56,686Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572570956686) {}
[INFO ] 2019-11-01T01:15:56,690Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:15:56,694Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572570956686) {}
[INFO ] 2019-11-01T01:15:56,695Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572570956686) {}
[INFO ] 2019-11-01T01:15:56,902Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T01:15:57,015Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T01:15:57,104Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T01:15:57,106Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T01:15:57,118Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T01:15:57,119Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:15:57,120Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:15:57,121Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:15:57,122Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T01:15:57,133Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 2CA6C4C35BE9096F1850E6FAF72539312FB8B10F59487CE1DFAF4ECEAAF71C95, not inserting the second time {}
[INFO ] 2019-11-01T01:15:57,138Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570955506) {}
[INFO ] 2019-11-01T01:15:57,140Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:15:57,146Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570955506) {}
[INFO ] 2019-11-01T01:15:57,148Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572570956686) {}
[INFO ] 2019-11-01T01:15:57,150Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:15:57,156Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572570956686) {}
[INFO ] 2019-11-01T01:15:57,157Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570956095) {}
[INFO ] 2019-11-01T01:15:57,159Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:15:57,165Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570956095) {}
[INFO ] 2019-11-01T01:15:57,166Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572570956686) {}
[INFO ] 2019-11-01T01:15:57,167Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:15:57,173Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572570956686) {}
[INFO ] 2019-11-01T01:15:57,174Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572570956686) {}
[INFO ] 2019-11-01T01:15:57,177Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:15:57,178Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572570956686) {}
[INFO ] 2019-11-01T01:15:57,179Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572570956686) {}
[INFO ] 2019-11-01T01:15:57,180Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:15:57,181Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572570956686) {}
[INFO ] 2019-11-01T01:15:57,183Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T01:15:57,184Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T01:15:57,195Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T01:15:57,202Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@145cbbfd {}
[INFO ] 2019-11-01T01:15:57,213Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T01:15:57,214Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:15:57,215Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:15:57,281Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:15:57,287Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T01:15:57,288Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572570957288) {}
[INFO ] 2019-11-01T01:15:57,291Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:15:57,294Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572570957288) {}
[INFO ] 2019-11-01T01:15:57,295Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572570957288) {}
[INFO ] 2019-11-01T01:15:57,495Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T01:15:57,614Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T01:15:57,709Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T01:15:57,712Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T01:15:57,723Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T01:15:57,724Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:15:57,725Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:15:57,725Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:15:57,726Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T01:15:57,737Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 734C913541B59A7F41FD245F3031A9B2ADD99FD77F897C7295905383C468DAEA, not inserting the second time {}
[INFO ] 2019-11-01T01:15:57,742Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570955506) {}
[INFO ] 2019-11-01T01:15:57,743Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:15:57,758Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570955506) {}
[INFO ] 2019-11-01T01:15:57,759Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572570957288) {}
[INFO ] 2019-11-01T01:15:57,760Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:15:57,771Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572570957288) {}
[INFO ] 2019-11-01T01:15:57,772Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570956095) {}
[INFO ] 2019-11-01T01:15:57,778Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:15:57,788Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570956095) {}
[INFO ] 2019-11-01T01:15:57,789Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572570957288) {}
[INFO ] 2019-11-01T01:15:57,791Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:15:57,807Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572570957288) {}
[INFO ] 2019-11-01T01:15:57,808Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572570956686) {}
[INFO ] 2019-11-01T01:15:57,809Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:15:57,821Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572570956686) {}
[INFO ] 2019-11-01T01:15:57,822Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572570957288) {}
[INFO ] 2019-11-01T01:15:57,824Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:15:57,838Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572570957288) {}
[INFO ] 2019-11-01T01:15:57,838Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572570957288) {}
[INFO ] 2019-11-01T01:15:57,841Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:15:57,842Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572570957288) {}
[INFO ] 2019-11-01T01:15:57,846Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572570957288) {}
[INFO ] 2019-11-01T01:15:57,847Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:15:57,848Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572570957288) {}
[INFO ] 2019-11-01T01:15:57,850Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T01:15:57,851Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T01:15:57,862Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T01:15:57,868Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@7f8a315b {}
[INFO ] 2019-11-01T01:15:57,877Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T01:15:57,878Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:15:57,878Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:15:57,936Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:15:57,942Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T01:15:57,943Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570957943) {}
[INFO ] 2019-11-01T01:15:57,946Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:15:57,949Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570957943) {}
[INFO ] 2019-11-01T01:15:57,949Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570957943) {}
[INFO ] 2019-11-01T01:15:58,125Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T01:15:58,240Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T01:15:58,323Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T01:15:58,324Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T01:15:58,335Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T01:15:58,336Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:15:58,337Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:15:58,337Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:15:58,341Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T01:15:58,354Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key A36350C714A5CB08582414997017EC1C94A644A9E7BBBFF2FA3461A63DCCB11C, not inserting the second time {}
[INFO ] 2019-11-01T01:15:58,369Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570955506) {}
[INFO ] 2019-11-01T01:15:58,372Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:15:58,385Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570955506) {}
[INFO ] 2019-11-01T01:15:58,392Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570957943) {}
[INFO ] 2019-11-01T01:15:58,393Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:15:58,405Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570957943) {}
[INFO ] 2019-11-01T01:15:58,407Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570956095) {}
[INFO ] 2019-11-01T01:15:58,408Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:15:58,414Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570956095) {}
[INFO ] 2019-11-01T01:15:58,415Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570957943) {}
[INFO ] 2019-11-01T01:15:58,417Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:15:58,422Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570957943) {}
[INFO ] 2019-11-01T01:15:58,424Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572570956686) {}
[INFO ] 2019-11-01T01:15:58,425Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:15:58,431Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572570956686) {}
[INFO ] 2019-11-01T01:15:58,432Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570957943) {}
[INFO ] 2019-11-01T01:15:58,434Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:15:58,440Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570957943) {}
[INFO ] 2019-11-01T01:15:58,441Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572570957288) {}
[INFO ] 2019-11-01T01:15:58,443Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:15:58,449Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572570957288) {}
[INFO ] 2019-11-01T01:15:58,450Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570957943) {}
[INFO ] 2019-11-01T01:15:58,451Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:15:58,457Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570957943) {}
[INFO ] 2019-11-01T01:15:58,458Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570957943) {}
[INFO ] 2019-11-01T01:15:58,461Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:15:58,462Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570957943) {}
[INFO ] 2019-11-01T01:15:58,463Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570957943) {}
[INFO ] 2019-11-01T01:15:58,464Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:15:58,465Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570957943) {}
[INFO ] 2019-11-01T01:15:58,470Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:15:58,477Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:15:58,478Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:15:58,479Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:15:58,480Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:15:58,481Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:15:58,482Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:15:58,483Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:15:58,589Z [Mock network] flow.[47d2ab24-cd8b-4e36-834a-a8339a508c69].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-2439074382117605010). {}
[INFO ] 2019-11-01T01:15:58,719Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-2439074382117605010). {invocation_id=4cc2e666-e3b3-4c6b-af01-5f4c4db40834, invocation_timestamp=2019-11-01T01:15:58.718Z, session_id=4cc2e666-e3b3-4c6b-af01-5f4c4db40834, session_timestamp=2019-11-01T01:15:58.718Z}
[INFO ] 2019-11-01T01:15:58,891Z [Mock network] flow.[47d2ab24-cd8b-4e36-834a-a8339a508c69].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-8061313607747856395). {}
[INFO ] 2019-11-01T01:15:58,916Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-8061313607747856395). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=3e3d1752-e7ea-4baf-ba46-e4fed1cbd6bc, invocation_timestamp=2019-11-01T01:15:58.915Z, session_id=3e3d1752-e7ea-4baf-ba46-e4fed1cbd6bc, session_timestamp=2019-11-01T01:15:58.915Z}
[INFO ] 2019-11-01T01:15:59,005Z [Mock network] flow.[47d2ab24-cd8b-4e36-834a-a8339a508c69].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-2894882046144900406). {}
[INFO ] 2019-11-01T01:15:59,034Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-2894882046144900406). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=fda86170-a6b9-4a05-89f1-b4166ea71951, invocation_timestamp=2019-11-01T01:15:59.033Z, session_id=fda86170-a6b9-4a05-89f1-b4166ea71951, session_timestamp=2019-11-01T01:15:59.033Z}
[INFO ] 2019-11-01T01:15:59,193Z [Mock network] flow.[387c269d-e591-4caf-a13e-ba967414bf36].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=8061472015168502525). {}
[INFO ] 2019-11-01T01:15:59,235Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=8061472015168502525). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=274ebda8-0f28-4515-97db-745778dd6349, invocation_timestamp=2019-11-01T01:15:59.234Z, session_id=274ebda8-0f28-4515-97db-745778dd6349, session_timestamp=2019-11-01T01:15:59.234Z}
[INFO ] 2019-11-01T01:15:59,431Z [Mock network] flow.[c3e066ad-e6eb-4a06-b84a-3e16a4dc998d].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=7759227000380072479). {}
[INFO ] 2019-11-01T01:15:59,486Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=7759227000380072479). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=5f656b8b-cdbb-44fc-8f4f-15ab0efc9fb4, invocation_timestamp=2019-11-01T01:15:59.483Z, session_id=5f656b8b-cdbb-44fc-8f4f-15ab0efc9fb4, session_timestamp=2019-11-01T01:15:59.483Z}
[INFO ] 2019-11-01T01:15:59,506Z [Mock network] flow.[04df3c82-d5fe-4c11-a61d-fa84e433caa8].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:15:59,647Z [Mock network] flow.[04df3c82-d5fe-4c11-a61d-fa84e433caa8].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:15:59,776Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T01:15:59,827Z [Mock network] flow.[770e918d-d49f-41ae-8ce9-95d48143dbbb].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-4551195256260160056). {}
[INFO ] 2019-11-01T01:15:59,851Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-4551195256260160056). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=83a2b4e1-a015-4375-8d99-0d7312ff86d1, invocation_timestamp=2019-11-01T01:15:59.850Z, session_id=83a2b4e1-a015-4375-8d99-0d7312ff86d1, session_timestamp=2019-11-01T01:15:59.850Z}
[INFO ] 2019-11-01T01:15:59,866Z [Mock network] flow.[dd109b1e-732d-410a-8159-760a65665282].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T01:15:59,904Z [Mock network] flow.[dd109b1e-732d-410a-8159-760a65665282].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T01:15:59,982Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.qn7265.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T01:16:00,054Z [Mock network] flow.[770e918d-d49f-41ae-8ce9-95d48143dbbb].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:16:00,077Z [Mock network] flow.[770e918d-d49f-41ae-8ce9-95d48143dbbb].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:16:00,079Z [Mock network] flow.[770e918d-d49f-41ae-8ce9-95d48143dbbb].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:16:00,103Z [Mock network] flow.[770e918d-d49f-41ae-8ce9-95d48143dbbb].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:16:00,245Z [Mock network] flow.[dd109b1e-732d-410a-8159-760a65665282].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=4497476473883069595). {}
[INFO ] 2019-11-01T01:16:00,264Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=4497476473883069595). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=9731bf25-6da0-45fb-9165-0fef7a3ca906, invocation_timestamp=2019-11-01T01:16:00.263Z, session_id=9731bf25-6da0-45fb-9165-0fef7a3ca906, session_timestamp=2019-11-01T01:16:00.263Z}
[INFO ] 2019-11-01T01:16:00,282Z [Mock network] flow.[38af1d22-9f45-4619-a8fb-9a086883b170].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:16:00,323Z [Mock network] flow.[38af1d22-9f45-4619-a8fb-9a086883b170].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:16:00,324Z [Mock network] flow.[38af1d22-9f45-4619-a8fb-9a086883b170].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:16:00,370Z [Mock network] flow.[38af1d22-9f45-4619-a8fb-9a086883b170].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:16:00,508Z [Mock network] flow.[dd109b1e-732d-410a-8159-760a65665282].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=8536901338886549815). {}
[INFO ] 2019-11-01T01:16:00,522Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=8536901338886549815). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=aa292a61-3bc3-418a-bb74-7985cbf74bcf, invocation_timestamp=2019-11-01T01:16:00.521Z, session_id=aa292a61-3bc3-418a-bb74-7985cbf74bcf, session_timestamp=2019-11-01T01:16:00.521Z}
[INFO ] 2019-11-01T01:16:00,560Z [Mock network] flow.[9ae94b74-d70f-4544-9b9d-3ebdcc5124c1].call - Requesting 2 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:16:00,634Z [Mock network] flow.[9ae94b74-d70f-4544-9b9d-3ebdcc5124c1].call - Fetched 2 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:16:00,697Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: interface net.corda.core.contracts.ContractState, criteria: VaultQueryCriteria(status=UNCONSUMED, contractStateTypes=null, stateRefs=[598B97063D68D2CA62211D087398C92AF047FF6D2D2D95C0CD06D9F37FC6AE65(0), 30D4714229EBE34FC1015AED4FFE020DEACEC5C210E4735F1851D67995BAEFE3(0)], notary=null, softLockingCondition=null, timeCondition=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T01:16:00,715Z [Mock network] flow.[dd109b1e-732d-410a-8159-760a65665282].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-7563257483883327703). {}
[INFO ] 2019-11-01T01:16:00,751Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-7563257483883327703). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=0587f411-eabd-41d4-be2f-bd1e41fdde1a, invocation_timestamp=2019-11-01T01:16:00.750Z, session_id=0587f411-eabd-41d4-be2f-bd1e41fdde1a, session_timestamp=2019-11-01T01:16:00.750Z}
[INFO ] 2019-11-01T01:16:00,776Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: interface net.corda.core.contracts.ContractState, criteria: VaultQueryCriteria(status=UNCONSUMED, contractStateTypes=null, stateRefs=[598B97063D68D2CA62211D087398C92AF047FF6D2D2D95C0CD06D9F37FC6AE65(0), 30D4714229EBE34FC1015AED4FFE020DEACEC5C210E4735F1851D67995BAEFE3(0)], notary=null, softLockingCondition=null, timeCondition=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T01:16:00,830Z [Mock network] flow.[dd109b1e-732d-410a-8159-760a65665282].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-1479782177614279224). {}
[INFO ] 2019-11-01T01:16:00,850Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-1479782177614279224). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=bc96beab-4622-4b04-acb4-128a9ebbf092, invocation_timestamp=2019-11-01T01:16:00.850Z, session_id=bc96beab-4622-4b04-acb4-128a9ebbf092, session_timestamp=2019-11-01T01:16:00.850Z}
[INFO ] 2019-11-01T01:16:00,882Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: interface net.corda.core.contracts.ContractState, criteria: VaultQueryCriteria(status=UNCONSUMED, contractStateTypes=null, stateRefs=[598B97063D68D2CA62211D087398C92AF047FF6D2D2D95C0CD06D9F37FC6AE65(0), 30D4714229EBE34FC1015AED4FFE020DEACEC5C210E4735F1851D67995BAEFE3(0)], notary=null, softLockingCondition=null, timeCondition=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T01:16:00,925Z [Mock network] flow.[dd109b1e-732d-410a-8159-760a65665282].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=8692005439230775650). {}
[INFO ] 2019-11-01T01:16:01,267Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=8692005439230775650). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=89a1c90c-799f-4db2-9934-b36b3a915e52, invocation_timestamp=2019-11-01T01:16:01.267Z, session_id=89a1c90c-799f-4db2-9934-b36b3a915e52, session_timestamp=2019-11-01T01:16:01.267Z}
[INFO ] 2019-11-01T01:16:01,278Z [Mock network] flow.[381aec5d-4d3b-4384-affe-baffe6d815e9].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:16:01,336Z [Mock network] flow.[381aec5d-4d3b-4384-affe-baffe6d815e9].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:16:01,364Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: interface net.corda.core.contracts.ContractState, criteria: VaultQueryCriteria(status=UNCONSUMED, contractStateTypes=null, stateRefs=[598B97063D68D2CA62211D087398C92AF047FF6D2D2D95C0CD06D9F37FC6AE65(0), 30D4714229EBE34FC1015AED4FFE020DEACEC5C210E4735F1851D67995BAEFE3(0)], notary=null, softLockingCondition=null, timeCondition=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T01:16:01,526Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T01:16:01,528Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T01:16:01,532Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@2308bbad {}
[INFO ] 2019-11-01T01:16:01,542Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T01:16:01,543Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:16:01,544Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:16:01,663Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:16:01,674Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T01:16:01,676Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570961676) {}
[INFO ] 2019-11-01T01:16:01,680Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:16:01,690Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570961676) {}
[INFO ] 2019-11-01T01:16:01,691Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570961676) {}
[INFO ] 2019-11-01T01:16:01,835Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T01:16:01,950Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T01:16:02,042Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T01:16:02,044Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T01:16:02,051Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T01:16:02,055Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T01:16:02,056Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:16:02,056Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:16:02,057Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:16:02,058Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T01:16:02,083Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key CC7236ADE05FE6CA50F2E6885692101766AE0C544A5F6FF86014B567829BBD1B, not inserting the second time {}
[INFO ] 2019-11-01T01:16:02,088Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570961676) {}
[INFO ] 2019-11-01T01:16:02,092Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:16:02,093Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570961676) {}
[INFO ] 2019-11-01T01:16:02,093Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570961676) {}
[INFO ] 2019-11-01T01:16:02,094Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:16:02,095Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570961676) {}
[INFO ] 2019-11-01T01:16:02,097Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T01:16:02,098Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T01:16:02,117Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T01:16:02,126Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@7836fd6d {}
[INFO ] 2019-11-01T01:16:02,135Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T01:16:02,136Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:16:02,137Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:16:02,221Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:16:02,227Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T01:16:02,228Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570962228) {}
[INFO ] 2019-11-01T01:16:02,231Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:16:02,235Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570962228) {}
[INFO ] 2019-11-01T01:16:02,236Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570962228) {}
[INFO ] 2019-11-01T01:16:02,357Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T01:16:02,476Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T01:16:02,567Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T01:16:02,568Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T01:16:02,578Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T01:16:02,580Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:16:02,580Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:16:02,581Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:16:02,582Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T01:16:02,609Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 896CAC4082DE237B2A42B557699F3ED3DA5D32983F08DA6AF63A0D1F133644CE, not inserting the second time {}
[INFO ] 2019-11-01T01:16:02,613Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570961676) {}
[INFO ] 2019-11-01T01:16:02,615Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:16:02,620Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570961676) {}
[INFO ] 2019-11-01T01:16:02,622Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570962228) {}
[INFO ] 2019-11-01T01:16:02,624Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:16:02,630Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570962228) {}
[INFO ] 2019-11-01T01:16:02,631Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570962228) {}
[INFO ] 2019-11-01T01:16:02,643Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:16:02,645Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570962228) {}
[INFO ] 2019-11-01T01:16:02,647Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570962228) {}
[INFO ] 2019-11-01T01:16:02,648Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:16:02,649Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570962228) {}
[INFO ] 2019-11-01T01:16:02,651Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T01:16:02,652Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T01:16:02,663Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T01:16:02,670Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@eec8e97 {}
[INFO ] 2019-11-01T01:16:02,676Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T01:16:02,677Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:16:02,678Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:16:02,736Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:16:02,742Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T01:16:02,743Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572570962743) {}
[INFO ] 2019-11-01T01:16:02,750Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:16:02,753Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572570962743) {}
[INFO ] 2019-11-01T01:16:02,759Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572570962743) {}
[INFO ] 2019-11-01T01:16:02,894Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T01:16:03,012Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T01:16:03,121Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T01:16:03,123Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T01:16:03,133Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T01:16:03,135Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:16:03,136Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:16:03,136Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:16:03,137Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T01:16:03,147Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key B08A97E5DED7F2A4AC53288CE05050572E849F6721FD3A9A36F6585FD63D7D21, not inserting the second time {}
[INFO ] 2019-11-01T01:16:03,151Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570961676) {}
[INFO ] 2019-11-01T01:16:03,153Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:16:03,158Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570961676) {}
[INFO ] 2019-11-01T01:16:03,158Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572570962743) {}
[INFO ] 2019-11-01T01:16:03,161Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:16:03,166Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572570962743) {}
[INFO ] 2019-11-01T01:16:03,167Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570962228) {}
[INFO ] 2019-11-01T01:16:03,168Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:16:03,176Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570962228) {}
[INFO ] 2019-11-01T01:16:03,177Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572570962743) {}
[INFO ] 2019-11-01T01:16:03,184Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:16:03,189Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572570962743) {}
[INFO ] 2019-11-01T01:16:03,189Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572570962743) {}
[INFO ] 2019-11-01T01:16:03,198Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:16:03,198Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572570962743) {}
[INFO ] 2019-11-01T01:16:03,199Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572570962743) {}
[INFO ] 2019-11-01T01:16:03,200Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:16:03,200Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572570962743) {}
[INFO ] 2019-11-01T01:16:03,203Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T01:16:03,203Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T01:16:03,215Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T01:16:03,221Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@374364e2 {}
[INFO ] 2019-11-01T01:16:03,228Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T01:16:03,229Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:16:03,230Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:16:03,286Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:16:03,293Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T01:16:03,294Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572570963294) {}
[INFO ] 2019-11-01T01:16:03,297Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:16:03,300Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572570963294) {}
[INFO ] 2019-11-01T01:16:03,301Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572570963294) {}
[INFO ] 2019-11-01T01:16:03,421Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T01:16:03,537Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T01:16:03,628Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T01:16:03,629Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T01:16:03,639Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T01:16:03,640Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:16:03,641Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:16:03,642Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:16:03,642Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T01:16:03,673Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 475133D60910D1D8D5DAE96632B495F24C477C8FB4457697A6A7C4AE662B69B7, not inserting the second time {}
[INFO ] 2019-11-01T01:16:03,680Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570961676) {}
[INFO ] 2019-11-01T01:16:03,686Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:16:03,692Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570961676) {}
[INFO ] 2019-11-01T01:16:03,693Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572570963294) {}
[INFO ] 2019-11-01T01:16:03,694Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:16:03,698Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572570963294) {}
[INFO ] 2019-11-01T01:16:03,699Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570962228) {}
[INFO ] 2019-11-01T01:16:03,700Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:16:03,705Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570962228) {}
[INFO ] 2019-11-01T01:16:03,705Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572570963294) {}
[INFO ] 2019-11-01T01:16:03,707Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:16:03,711Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572570963294) {}
[INFO ] 2019-11-01T01:16:03,712Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572570962743) {}
[INFO ] 2019-11-01T01:16:03,713Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:16:03,717Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572570962743) {}
[INFO ] 2019-11-01T01:16:03,717Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572570963294) {}
[INFO ] 2019-11-01T01:16:03,719Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:16:03,723Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572570963294) {}
[INFO ] 2019-11-01T01:16:03,724Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572570963294) {}
[INFO ] 2019-11-01T01:16:03,726Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:16:03,727Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572570963294) {}
[INFO ] 2019-11-01T01:16:03,727Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572570963294) {}
[INFO ] 2019-11-01T01:16:03,728Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:16:03,729Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572570963294) {}
[INFO ] 2019-11-01T01:16:03,731Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T01:16:03,731Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T01:16:03,741Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T01:16:03,746Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@39b1aeaf {}
[INFO ] 2019-11-01T01:16:03,752Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T01:16:03,753Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:16:03,754Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:16:03,816Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:16:03,823Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T01:16:03,824Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570963823) {}
[INFO ] 2019-11-01T01:16:03,828Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:16:03,830Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570963823) {}
[INFO ] 2019-11-01T01:16:03,831Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570963823) {}
[INFO ] 2019-11-01T01:16:03,958Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 42105AD6B01C473CC916FCC2D1EB109794E8395F2A61F0CEC16E903B2B6C7391 {}
[INFO ] 2019-11-01T01:16:04,075Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment E8AAB4F5D202CEF5BB47DA2130D4AAE97AA4821359117D31B696D06A087D50D3 {}
[INFO ] 2019-11-01T01:16:04,158Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T01:16:04,160Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T01:16:04,170Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T01:16:04,171Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:16:04,172Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:16:04,172Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:16:04,173Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T01:16:04,204Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 7AF62B6F958CCFB32E39AEFA99BD075DF7DF7017B60472BE2184E374271EC08B, not inserting the second time {}
[INFO ] 2019-11-01T01:16:04,209Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570961676) {}
[INFO ] 2019-11-01T01:16:04,211Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:16:04,215Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572570961676) {}
[INFO ] 2019-11-01T01:16:04,216Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570963823) {}
[INFO ] 2019-11-01T01:16:04,217Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:16:04,222Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570963823) {}
[INFO ] 2019-11-01T01:16:04,222Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570962228) {}
[INFO ] 2019-11-01T01:16:04,223Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:16:04,228Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572570962228) {}
[INFO ] 2019-11-01T01:16:04,228Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570963823) {}
[INFO ] 2019-11-01T01:16:04,229Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:16:04,233Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570963823) {}
[INFO ] 2019-11-01T01:16:04,234Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572570962743) {}
[INFO ] 2019-11-01T01:16:04,235Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:16:04,244Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572570962743) {}
[INFO ] 2019-11-01T01:16:04,245Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570963823) {}
[INFO ] 2019-11-01T01:16:04,246Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:16:04,250Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570963823) {}
[INFO ] 2019-11-01T01:16:04,251Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572570963294) {}
[INFO ] 2019-11-01T01:16:04,254Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:16:04,266Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572570963294) {}
[INFO ] 2019-11-01T01:16:04,270Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570963823) {}
[INFO ] 2019-11-01T01:16:04,272Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:16:04,276Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570963823) {}
[INFO ] 2019-11-01T01:16:04,277Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570963823) {}
[INFO ] 2019-11-01T01:16:04,279Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:16:04,280Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570963823) {}
[INFO ] 2019-11-01T01:16:04,281Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570963823) {}
[INFO ] 2019-11-01T01:16:04,281Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:16:04,282Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572570963823) {}
[INFO ] 2019-11-01T01:16:04,282Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:16:04,283Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:16:04,284Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:16:04,284Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:16:04,285Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:16:04,286Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:16:04,286Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:16:04,287Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:16:04,335Z [Mock network] flow.[3636435a-520f-4359-b7ed-ce6cf10df734].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=5005277626724388713). {}
[INFO ] 2019-11-01T01:16:04,392Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=5005277626724388713). {invocation_id=5c281e09-4c52-4303-a891-d9a432595c5a, invocation_timestamp=2019-11-01T01:16:04.387Z, session_id=5c281e09-4c52-4303-a891-d9a432595c5a, session_timestamp=2019-11-01T01:16:04.387Z}
[INFO ] 2019-11-01T01:16:04,578Z [Mock network] flow.[3636435a-520f-4359-b7ed-ce6cf10df734].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=3299878772065777284). {}
[INFO ] 2019-11-01T01:16:04,604Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=3299878772065777284). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=0b3f3069-bee5-43f3-93f4-af14dd138748, invocation_timestamp=2019-11-01T01:16:04.602Z, session_id=0b3f3069-bee5-43f3-93f4-af14dd138748, session_timestamp=2019-11-01T01:16:04.602Z}
[INFO ] 2019-11-01T01:16:04,694Z [Mock network] flow.[3636435a-520f-4359-b7ed-ce6cf10df734].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=6752022519322501407). {}
[INFO ] 2019-11-01T01:16:04,736Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=6752022519322501407). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=952ebdde-5df2-4cbc-93c3-a5e15c03b301, invocation_timestamp=2019-11-01T01:16:04.735Z, session_id=952ebdde-5df2-4cbc-93c3-a5e15c03b301, session_timestamp=2019-11-01T01:16:04.735Z}
[INFO ] 2019-11-01T01:16:04,862Z [Mock network] flow.[7376b611-2584-4df1-a3eb-32d691ab9f06].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=2060275265810384316). {}
[INFO ] 2019-11-01T01:16:04,898Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=2060275265810384316). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=41c4f380-2cb8-40f7-aee4-22635b8829c2, invocation_timestamp=2019-11-01T01:16:04.897Z, session_id=41c4f380-2cb8-40f7-aee4-22635b8829c2, session_timestamp=2019-11-01T01:16:04.897Z}
[INFO ] 2019-11-01T01:16:04,995Z [Mock network] flow.[34c02abb-bb7f-4718-ad5f-58c93511ce18].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=-2487702497540047701). {}
[INFO ] 2019-11-01T01:16:05,042Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-2487702497540047701). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=4ecef957-ab46-48e9-83f2-91a1172bb65c, invocation_timestamp=2019-11-01T01:16:05.039Z, session_id=4ecef957-ab46-48e9-83f2-91a1172bb65c, session_timestamp=2019-11-01T01:16:05.039Z}
[INFO ] 2019-11-01T01:16:05,064Z [Mock network] flow.[92c4dc44-34b8-4b73-b50a-56c9b4de8ec1].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:16:05,125Z [Mock network] flow.[92c4dc44-34b8-4b73-b50a-56c9b4de8ec1].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:16:05,209Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T01:16:05,236Z [Mock network] flow.[ab3523b4-cd60-40a6-ae68-10048683d56e].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-2861196721501527194). {}
[INFO ] 2019-11-01T01:16:05,255Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-2861196721501527194). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=bbc9c491-4e16-4b3d-8f7b-2942bcb96586, invocation_timestamp=2019-11-01T01:16:05.254Z, session_id=bbc9c491-4e16-4b3d-8f7b-2942bcb96586, session_timestamp=2019-11-01T01:16:05.254Z}
[INFO ] 2019-11-01T01:16:05,263Z [Mock network] flow.[0527ff59-6043-4f98-b42a-4dc3c05dfb4a].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T01:16:05,306Z [Mock network] flow.[0527ff59-6043-4f98-b42a-4dc3c05dfb4a].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T01:16:05,347Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.qn7265.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T01:16:05,398Z [Mock network] flow.[ab3523b4-cd60-40a6-ae68-10048683d56e].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:16:05,456Z [Mock network] flow.[ab3523b4-cd60-40a6-ae68-10048683d56e].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:16:05,457Z [Mock network] flow.[ab3523b4-cd60-40a6-ae68-10048683d56e].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:16:05,497Z [Mock network] flow.[ab3523b4-cd60-40a6-ae68-10048683d56e].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:16:05,595Z [Mock network] flow.[0527ff59-6043-4f98-b42a-4dc3c05dfb4a].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-3445076501373976675). {}
[INFO ] 2019-11-01T01:16:05,614Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-3445076501373976675). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=289d7837-bd85-4897-a0fd-91c62e6c9a98, invocation_timestamp=2019-11-01T01:16:05.613Z, session_id=289d7837-bd85-4897-a0fd-91c62e6c9a98, session_timestamp=2019-11-01T01:16:05.613Z}
[INFO ] 2019-11-01T01:16:05,628Z [Mock network] flow.[a497146c-6544-4573-b79f-95c4a0c2cc43].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:16:05,671Z [Mock network] flow.[a497146c-6544-4573-b79f-95c4a0c2cc43].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:16:05,672Z [Mock network] flow.[a497146c-6544-4573-b79f-95c4a0c2cc43].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:16:05,718Z [Mock network] flow.[a497146c-6544-4573-b79f-95c4a0c2cc43].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:16:05,805Z [Mock network] flow.[0527ff59-6043-4f98-b42a-4dc3c05dfb4a].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=-4738788292111335795). {}
[INFO ] 2019-11-01T01:16:05,815Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-4738788292111335795). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=62181d12-563a-44ff-8758-fd129dc05bc6, invocation_timestamp=2019-11-01T01:16:05.814Z, session_id=62181d12-563a-44ff-8758-fd129dc05bc6, session_timestamp=2019-11-01T01:16:05.814Z}
[INFO ] 2019-11-01T01:16:05,827Z [Mock network] flow.[3cea21e7-ce05-429c-a314-1b44b3d51c6a].call - Requesting 2 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:16:05,932Z [Mock network] flow.[3cea21e7-ce05-429c-a314-1b44b3d51c6a].call - Fetched 2 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:16:05,979Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: interface net.corda.core.contracts.ContractState, criteria: VaultQueryCriteria(status=UNCONSUMED, contractStateTypes=null, stateRefs=[49307A38B402B85BD005D0FE8D9544F68ADD8A65EBB8A50108959DF10F728F6F(0), A7A7EFA726A53FFE208829321D5033C8D2B881998C92A12BBD031A08B4B27976(0)], notary=null, softLockingCondition=null, timeCondition=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T01:16:05,989Z [Mock network] flow.[0527ff59-6043-4f98-b42a-4dc3c05dfb4a].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-5116945988657455243). {}
[INFO ] 2019-11-01T01:16:06,000Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-5116945988657455243). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=e2d10119-d3ad-4449-bded-0d551a93a2e4, invocation_timestamp=2019-11-01T01:16:05.999Z, session_id=e2d10119-d3ad-4449-bded-0d551a93a2e4, session_timestamp=2019-11-01T01:16:05.999Z}
[INFO ] 2019-11-01T01:16:06,025Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: interface net.corda.core.contracts.ContractState, criteria: VaultQueryCriteria(status=UNCONSUMED, contractStateTypes=null, stateRefs=[49307A38B402B85BD005D0FE8D9544F68ADD8A65EBB8A50108959DF10F728F6F(0), A7A7EFA726A53FFE208829321D5033C8D2B881998C92A12BBD031A08B4B27976(0)], notary=null, softLockingCondition=null, timeCondition=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T01:16:06,052Z [Mock network] flow.[0527ff59-6043-4f98-b42a-4dc3c05dfb4a].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-7496738804630679769). {}
[INFO ] 2019-11-01T01:16:06,062Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-7496738804630679769). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=d8246204-53c8-4b3d-beee-19e2bd153410, invocation_timestamp=2019-11-01T01:16:06.061Z, session_id=d8246204-53c8-4b3d-beee-19e2bd153410, session_timestamp=2019-11-01T01:16:06.061Z}
[INFO ] 2019-11-01T01:16:06,084Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: interface net.corda.core.contracts.ContractState, criteria: VaultQueryCriteria(status=UNCONSUMED, contractStateTypes=null, stateRefs=[49307A38B402B85BD005D0FE8D9544F68ADD8A65EBB8A50108959DF10F728F6F(0), A7A7EFA726A53FFE208829321D5033C8D2B881998C92A12BBD031A08B4B27976(0)], notary=null, softLockingCondition=null, timeCondition=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T01:16:06,111Z [Mock network] flow.[0527ff59-6043-4f98-b42a-4dc3c05dfb4a].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-480391589458354571). {}
[INFO ] 2019-11-01T01:16:06,120Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-480391589458354571). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=f46fc995-b6ef-47de-9008-5d79ff9f7faa, invocation_timestamp=2019-11-01T01:16:06.119Z, session_id=f46fc995-b6ef-47de-9008-5d79ff9f7faa, session_timestamp=2019-11-01T01:16:06.119Z}
[INFO ] 2019-11-01T01:16:06,155Z [Mock network] flow.[653e1974-6b59-475a-a657-454fa1b55108].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:16:06,187Z [Mock network] flow.[653e1974-6b59-475a-a657-454fa1b55108].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:16:06,221Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: interface net.corda.core.contracts.ContractState, criteria: VaultQueryCriteria(status=UNCONSUMED, contractStateTypes=null, stateRefs=[49307A38B402B85BD005D0FE8D9544F68ADD8A65EBB8A50108959DF10F728F6F(0), A7A7EFA726A53FFE208829321D5033C8D2B881998C92A12BBD031A08B4B27976(0)], notary=null, softLockingCondition=null, timeCondition=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T01:38:06,054Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.qn7265 in file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/classes/kotlin/test/com/qn7265: build/tmp/generated-test-cordapps/com.qn7265-2fb6d9f6-2cb0-4e16-9561-3b0a37a9ab87.jar {}
[INFO ] 2019-11-01T01:38:06,079Z [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.qn7265 in file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/classes/kotlin/main/com/qn7265: build/tmp/generated-test-cordapps/com.qn7265-7b797098-4559-4984-9093-60e35ab5057f.jar {}
[INFO ] 2019-11-01T01:38:06,154Z [Test worker] cordapp.CordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/tmp/generated-test-cordapps/com.qn7265-2fb6d9f6-2cb0-4e16-9561-3b0a37a9ab87.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/tmp/generated-test-cordapps/com.qn7265-7b797098-4559-4984-9093-60e35ab5057f.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/qn7265-contracts-new/build/libs/qn7265-contracts-new.jar, rootPackageName=com.qn7265), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/qn7265-contracts/build/libs/qn7265-contracts.jar, rootPackageName=com.qn7265), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/libs/prides.jar, rootPackageName=com.twig) {}
[INFO ] 2019-11-01T01:38:06,204Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T01:38:06,211Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T01:38:06,228Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/tmp/generated-test-cordapps/com.qn7265-2fb6d9f6-2cb0-4e16-9561-3b0a37a9ab87.jar {}
[INFO ] 2019-11-01T01:38:06,253Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/tmp/generated-test-cordapps/com.qn7265-7b797098-4559-4984-9093-60e35ab5057f.jar {}
[INFO ] 2019-11-01T01:38:06,282Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/qn7265-contracts-new/build/libs/qn7265-contracts-new.jar {}
[INFO ] 2019-11-01T01:38:06,339Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/qn7265-contracts/build/libs/qn7265-contracts.jar {}
[INFO ] 2019-11-01T01:38:06,403Z [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/libs/prides.jar {}
[INFO ] 2019-11-01T01:38:06,574Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@624c23f4 {}
[INFO ] 2019-11-01T01:38:07,583Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T01:38:07,655Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:07,679Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:10,316Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:11,230Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T01:38:11,236Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572291236) {}
[INFO ] 2019-11-01T01:38:11,255Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:11,376Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572291236) {}
[INFO ] 2019-11-01T01:38:11,386Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572291236) {}
[INFO ] 2019-11-01T01:38:11,772Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 9EC89A87A31C1FF30AEEB5D29BA4290073CA8BFEBCAFFED179D0A87E097AC421 {}
[INFO ] 2019-11-01T01:38:11,959Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DAE15B0B886AD6558683A2786053AA585DC34C32CCF4D87EC1F91D53D2DE4F6A {}
[INFO ] 2019-11-01T01:38:12,095Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T01:38:12,106Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T01:38:12,217Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T01:38:12,378Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T01:38:12,385Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:38:12,389Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:38:12,393Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:38:12,396Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T01:38:12,466Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key A8C50304D08588E45E4C45512DB063C698FB92A69A048688A788A63F22C14558, not inserting the second time {}
[INFO ] 2019-11-01T01:38:12,564Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572291236) {}
[INFO ] 2019-11-01T01:38:12,588Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:38:12,590Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572291236) {}
[INFO ] 2019-11-01T01:38:12,592Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572291236) {}
[INFO ] 2019-11-01T01:38:12,594Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:38:12,596Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572291236) {}
[INFO ] 2019-11-01T01:38:12,601Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T01:38:12,602Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T01:38:12,622Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T01:38:12,635Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@47a1794f {}
[INFO ] 2019-11-01T01:38:12,653Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T01:38:12,655Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:12,657Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:12,798Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:12,809Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T01:38:12,812Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572292812) {}
[INFO ] 2019-11-01T01:38:12,817Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:12,823Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572292812) {}
[INFO ] 2019-11-01T01:38:12,825Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572292812) {}
[INFO ] 2019-11-01T01:38:12,978Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 9EC89A87A31C1FF30AEEB5D29BA4290073CA8BFEBCAFFED179D0A87E097AC421 {}
[INFO ] 2019-11-01T01:38:13,135Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DAE15B0B886AD6558683A2786053AA585DC34C32CCF4D87EC1F91D53D2DE4F6A {}
[INFO ] 2019-11-01T01:38:13,239Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T01:38:13,243Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T01:38:13,260Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T01:38:13,263Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:38:13,265Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:38:13,266Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:38:13,268Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T01:38:13,283Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 002486737BEDCF153E2C2405AC0BE7AC816E59BE6E8DEE849DD892D7C6B0576E, not inserting the second time {}
[INFO ] 2019-11-01T01:38:13,299Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572291236) {}
[INFO ] 2019-11-01T01:38:13,312Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:13,334Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572291236) {}
[INFO ] 2019-11-01T01:38:13,338Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572292812) {}
[INFO ] 2019-11-01T01:38:13,345Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:13,362Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572292812) {}
[INFO ] 2019-11-01T01:38:13,364Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572292812) {}
[INFO ] 2019-11-01T01:38:13,381Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:38:13,386Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572292812) {}
[INFO ] 2019-11-01T01:38:13,387Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572292812) {}
[INFO ] 2019-11-01T01:38:13,388Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:38:13,390Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572292812) {}
[INFO ] 2019-11-01T01:38:13,393Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T01:38:13,394Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T01:38:13,413Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T01:38:13,424Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@469f3203 {}
[INFO ] 2019-11-01T01:38:13,435Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T01:38:13,437Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:13,438Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:13,546Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:13,556Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T01:38:13,558Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572293558) {}
[INFO ] 2019-11-01T01:38:13,564Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:13,573Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572293558) {}
[INFO ] 2019-11-01T01:38:13,576Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572293558) {}
[INFO ] 2019-11-01T01:38:13,747Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 9EC89A87A31C1FF30AEEB5D29BA4290073CA8BFEBCAFFED179D0A87E097AC421 {}
[INFO ] 2019-11-01T01:38:13,883Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DAE15B0B886AD6558683A2786053AA585DC34C32CCF4D87EC1F91D53D2DE4F6A {}
[INFO ] 2019-11-01T01:38:14,013Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T01:38:14,018Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T01:38:14,049Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T01:38:14,051Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:38:14,053Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:38:14,054Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:38:14,059Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T01:38:14,082Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 799EE9C57D6A6D3D1F8E48014EBA8367FE98A64CB2DA57CB055AC3F3C3D82BA8, not inserting the second time {}
[INFO ] 2019-11-01T01:38:14,093Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572291236) {}
[INFO ] 2019-11-01T01:38:14,098Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:14,112Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572291236) {}
[INFO ] 2019-11-01T01:38:14,114Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572293558) {}
[INFO ] 2019-11-01T01:38:14,116Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:14,127Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572293558) {}
[INFO ] 2019-11-01T01:38:14,128Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572292812) {}
[INFO ] 2019-11-01T01:38:14,131Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:14,142Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572292812) {}
[INFO ] 2019-11-01T01:38:14,150Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572293558) {}
[INFO ] 2019-11-01T01:38:14,153Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:14,170Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572293558) {}
[INFO ] 2019-11-01T01:38:14,173Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572293558) {}
[INFO ] 2019-11-01T01:38:14,182Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:38:14,184Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572293558) {}
[INFO ] 2019-11-01T01:38:14,185Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572293558) {}
[INFO ] 2019-11-01T01:38:14,187Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:38:14,188Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572293558) {}
[INFO ] 2019-11-01T01:38:15,271Z [Mock network] flow.[b9c3cbee-7a29-4268-a58a-ddb0df8c2977].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-7607254393178746030). {}
[INFO ] 2019-11-01T01:38:15,464Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-7607254393178746030). {invocation_id=8b45abb4-8001-466c-84f6-acd60d73a26a, invocation_timestamp=2019-11-01T01:38:15.453Z, session_id=8b45abb4-8001-466c-84f6-acd60d73a26a, session_timestamp=2019-11-01T01:38:15.453Z}
[INFO ] 2019-11-01T01:38:15,865Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T01:38:15,866Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T01:38:15,874Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@4c0fddd6 {}
[INFO ] 2019-11-01T01:38:15,886Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T01:38:15,888Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:15,889Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:16,044Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:16,053Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T01:38:16,054Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572296054) {}
[INFO ] 2019-11-01T01:38:16,058Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:16,070Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572296054) {}
[INFO ] 2019-11-01T01:38:16,071Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572296054) {}
[INFO ] 2019-11-01T01:38:16,240Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 9EC89A87A31C1FF30AEEB5D29BA4290073CA8BFEBCAFFED179D0A87E097AC421 {}
[INFO ] 2019-11-01T01:38:16,365Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DAE15B0B886AD6558683A2786053AA585DC34C32CCF4D87EC1F91D53D2DE4F6A {}
[INFO ] 2019-11-01T01:38:16,460Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T01:38:16,463Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T01:38:16,476Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T01:38:16,487Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T01:38:16,491Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:38:16,493Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:38:16,494Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:38:16,496Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T01:38:16,522Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 82DD93A8B91ED117B4567C3B418BF9E6FABEDB0457EB4EBF39C516CA07EF1FD5, not inserting the second time {}
[INFO ] 2019-11-01T01:38:16,531Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572296054) {}
[INFO ] 2019-11-01T01:38:16,547Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:38:16,552Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572296054) {}
[INFO ] 2019-11-01T01:38:16,556Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572296054) {}
[INFO ] 2019-11-01T01:38:16,557Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:38:16,558Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572296054) {}
[INFO ] 2019-11-01T01:38:16,564Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T01:38:16,566Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T01:38:16,603Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T01:38:16,624Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@7decf9de {}
[INFO ] 2019-11-01T01:38:16,642Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T01:38:16,648Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:16,650Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:16,799Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:16,810Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T01:38:16,811Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572296811) {}
[INFO ] 2019-11-01T01:38:16,819Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:16,831Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572296811) {}
[INFO ] 2019-11-01T01:38:16,834Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572296811) {}
[INFO ] 2019-11-01T01:38:16,982Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 9EC89A87A31C1FF30AEEB5D29BA4290073CA8BFEBCAFFED179D0A87E097AC421 {}
[INFO ] 2019-11-01T01:38:17,103Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DAE15B0B886AD6558683A2786053AA585DC34C32CCF4D87EC1F91D53D2DE4F6A {}
[INFO ] 2019-11-01T01:38:17,193Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T01:38:17,196Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T01:38:17,220Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T01:38:17,224Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:38:17,226Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:38:17,227Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:38:17,228Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T01:38:17,249Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 1B07D6CE3F60CC68D4E6AD43356CA8E449CD817C269C1CCC1910CF55F51E3C02, not inserting the second time {}
[INFO ] 2019-11-01T01:38:17,255Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572296054) {}
[INFO ] 2019-11-01T01:38:17,260Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:17,272Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572296054) {}
[INFO ] 2019-11-01T01:38:17,274Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572296811) {}
[INFO ] 2019-11-01T01:38:17,286Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:17,296Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572296811) {}
[INFO ] 2019-11-01T01:38:17,299Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572296811) {}
[INFO ] 2019-11-01T01:38:17,309Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:38:17,310Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572296811) {}
[INFO ] 2019-11-01T01:38:17,311Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572296811) {}
[INFO ] 2019-11-01T01:38:17,312Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:38:17,313Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572296811) {}
[INFO ] 2019-11-01T01:38:17,316Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T01:38:17,318Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T01:38:17,332Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T01:38:17,342Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@68ab06b5 {}
[INFO ] 2019-11-01T01:38:17,354Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T01:38:17,355Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:17,357Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:17,501Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:17,510Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T01:38:17,511Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572297511) {}
[INFO ] 2019-11-01T01:38:17,516Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:17,525Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572297511) {}
[INFO ] 2019-11-01T01:38:17,526Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572297511) {}
[INFO ] 2019-11-01T01:38:17,677Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 9EC89A87A31C1FF30AEEB5D29BA4290073CA8BFEBCAFFED179D0A87E097AC421 {}
[INFO ] 2019-11-01T01:38:17,809Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DAE15B0B886AD6558683A2786053AA585DC34C32CCF4D87EC1F91D53D2DE4F6A {}
[INFO ] 2019-11-01T01:38:17,902Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T01:38:17,906Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T01:38:17,927Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T01:38:17,929Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:38:17,930Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:38:17,932Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:38:17,934Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T01:38:17,958Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key C9EBC0F333883053A74340E0D5BDAF02DEBBEC5F0BED6A4CA6BF5C8F25297B1B, not inserting the second time {}
[INFO ] 2019-11-01T01:38:17,965Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572296054) {}
[INFO ] 2019-11-01T01:38:17,973Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:17,988Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572296054) {}
[INFO ] 2019-11-01T01:38:17,989Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572297511) {}
[INFO ] 2019-11-01T01:38:17,996Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:18,028Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572297511) {}
[INFO ] 2019-11-01T01:38:18,032Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572296811) {}
[INFO ] 2019-11-01T01:38:18,037Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:18,054Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572296811) {}
[INFO ] 2019-11-01T01:38:18,057Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572297511) {}
[INFO ] 2019-11-01T01:38:18,069Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:18,083Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572297511) {}
[INFO ] 2019-11-01T01:38:18,084Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572297511) {}
[INFO ] 2019-11-01T01:38:18,096Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:38:18,098Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572297511) {}
[INFO ] 2019-11-01T01:38:18,100Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572297511) {}
[INFO ] 2019-11-01T01:38:18,101Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:38:18,102Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572297511) {}
[INFO ] 2019-11-01T01:38:18,268Z [Mock network] flow.[cc44e807-fb53-4fc5-ba69-ef51780a1cc1].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-7237866684166097090). {}
[INFO ] 2019-11-01T01:38:18,367Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-7237866684166097090). {invocation_id=3d563fea-fa9f-427c-babd-0b96555d142b, invocation_timestamp=2019-11-01T01:38:18.365Z, session_id=3d563fea-fa9f-427c-babd-0b96555d142b, session_timestamp=2019-11-01T01:38:18.365Z}
[INFO ] 2019-11-01T01:38:18,611Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T01:38:18,613Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T01:38:18,618Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6e78c38e {}
[INFO ] 2019-11-01T01:38:18,628Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T01:38:18,630Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:18,631Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:18,816Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:18,826Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T01:38:18,828Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572298828) {}
[INFO ] 2019-11-01T01:38:18,835Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:18,851Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572298828) {}
[INFO ] 2019-11-01T01:38:18,853Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572298828) {}
[INFO ] 2019-11-01T01:38:19,005Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 9EC89A87A31C1FF30AEEB5D29BA4290073CA8BFEBCAFFED179D0A87E097AC421 {}
[INFO ] 2019-11-01T01:38:19,141Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DAE15B0B886AD6558683A2786053AA585DC34C32CCF4D87EC1F91D53D2DE4F6A {}
[INFO ] 2019-11-01T01:38:19,230Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T01:38:19,232Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T01:38:19,242Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T01:38:19,247Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T01:38:19,248Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:38:19,249Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:38:19,250Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:38:19,251Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T01:38:19,265Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 6AF936DF002D452ACD189AD510FE6BB5BEBAAC12BD316706EDF10EC852F1EF0B, not inserting the second time {}
[INFO ] 2019-11-01T01:38:19,272Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572298828) {}
[INFO ] 2019-11-01T01:38:19,277Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:38:19,278Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572298828) {}
[INFO ] 2019-11-01T01:38:19,279Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572298828) {}
[INFO ] 2019-11-01T01:38:19,280Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:38:19,282Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572298828) {}
[INFO ] 2019-11-01T01:38:19,284Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T01:38:19,285Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T01:38:19,302Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T01:38:19,310Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@111227a1 {}
[INFO ] 2019-11-01T01:38:19,322Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T01:38:19,323Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:19,325Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:19,475Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:19,483Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T01:38:19,484Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572299484) {}
[INFO ] 2019-11-01T01:38:19,487Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:19,494Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572299484) {}
[INFO ] 2019-11-01T01:38:19,497Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572299484) {}
[INFO ] 2019-11-01T01:38:19,668Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 9EC89A87A31C1FF30AEEB5D29BA4290073CA8BFEBCAFFED179D0A87E097AC421 {}
[INFO ] 2019-11-01T01:38:19,803Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DAE15B0B886AD6558683A2786053AA585DC34C32CCF4D87EC1F91D53D2DE4F6A {}
[INFO ] 2019-11-01T01:38:19,901Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T01:38:19,904Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T01:38:19,919Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T01:38:19,923Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:38:19,924Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:38:19,925Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:38:19,926Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T01:38:19,943Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 00F2AA58F1ED85E32A125CA7879C38C48FC296E3ED335D3E2BA2B613EF7A6226, not inserting the second time {}
[INFO ] 2019-11-01T01:38:19,950Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572298828) {}
[INFO ] 2019-11-01T01:38:19,958Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:20,045Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572298828) {}
[INFO ] 2019-11-01T01:38:20,055Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572299484) {}
[INFO ] 2019-11-01T01:38:20,059Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:20,070Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572299484) {}
[INFO ] 2019-11-01T01:38:20,073Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572299484) {}
[INFO ] 2019-11-01T01:38:20,083Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:38:20,084Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572299484) {}
[INFO ] 2019-11-01T01:38:20,085Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572299484) {}
[INFO ] 2019-11-01T01:38:20,086Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:38:20,087Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572299484) {}
[INFO ] 2019-11-01T01:38:20,092Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T01:38:20,094Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T01:38:20,123Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T01:38:20,136Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6c58df2 {}
[INFO ] 2019-11-01T01:38:20,148Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T01:38:20,155Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:20,156Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:20,306Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:20,313Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T01:38:20,314Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572300314) {}
[INFO ] 2019-11-01T01:38:20,318Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:20,327Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572300314) {}
[INFO ] 2019-11-01T01:38:20,328Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572300314) {}
[INFO ] 2019-11-01T01:38:20,459Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 9EC89A87A31C1FF30AEEB5D29BA4290073CA8BFEBCAFFED179D0A87E097AC421 {}
[INFO ] 2019-11-01T01:38:20,580Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DAE15B0B886AD6558683A2786053AA585DC34C32CCF4D87EC1F91D53D2DE4F6A {}
[INFO ] 2019-11-01T01:38:20,669Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T01:38:20,671Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T01:38:20,683Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T01:38:20,684Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:38:20,685Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:38:20,686Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:38:20,687Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T01:38:20,698Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 2EF7554F7AA021D55F1E341FEEFDBD31CC0424B1E074307041889272BE4BDB64, not inserting the second time {}
[INFO ] 2019-11-01T01:38:20,709Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572298828) {}
[INFO ] 2019-11-01T01:38:20,712Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:20,726Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572298828) {}
[INFO ] 2019-11-01T01:38:20,732Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572300314) {}
[INFO ] 2019-11-01T01:38:20,735Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:20,742Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572300314) {}
[INFO ] 2019-11-01T01:38:20,743Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572299484) {}
[INFO ] 2019-11-01T01:38:20,748Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:20,760Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572299484) {}
[INFO ] 2019-11-01T01:38:20,761Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572300314) {}
[INFO ] 2019-11-01T01:38:20,764Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:20,774Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572300314) {}
[INFO ] 2019-11-01T01:38:20,775Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572300314) {}
[INFO ] 2019-11-01T01:38:20,786Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:38:20,792Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572300314) {}
[INFO ] 2019-11-01T01:38:20,793Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572300314) {}
[INFO ] 2019-11-01T01:38:20,797Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:38:20,799Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572300314) {}
[WARN ] 2019-11-01T01:38:20,888Z [Mock network] flow.[938c5643-b7aa-4e40-aae7-785002ea4171].run - Flow finished with exception {}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: A newly issued asset must have a positive amount., contract: com.qn7265.issue.AssetContract, transaction: 56E2BE17BBE3792FA935309E8D6163A1444587EC7A9FB7E9E27B4460773D5C0E
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:127) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:80) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:143) ~[corda-core-3.4-corda.jar:?]
	at com.qn7265.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:82) ~[main/:?]
	at com.qn7265.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:27) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.4-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_211]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.4-corda.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: A newly issued asset must have a positive amount.
	at com.qn7265.issue.AssetContract.verifyIssue(AssetContract.kt:80) ~[qn7265-contracts.jar:?]
	at com.qn7265.issue.AssetContract.verify(AssetContract.kt:29) ~[qn7265-contracts.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:125) ~[corda-core-3.4-corda.jar:?]
	... 17 more
[INFO ] 2019-11-01T01:38:21,014Z [Mock network] flow.[cfaae8e3-2df9-4d02-85ee-979ee171d18a].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-7114488977308417457). {}
[INFO ] 2019-11-01T01:38:21,107Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-7114488977308417457). {invocation_id=39c2c008-636c-4251-94d2-1869cfde2533, invocation_timestamp=2019-11-01T01:38:21.106Z, session_id=39c2c008-636c-4251-94d2-1869cfde2533, session_timestamp=2019-11-01T01:38:21.106Z}
[INFO ] 2019-11-01T01:38:21,374Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T01:38:21,376Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T01:38:21,385Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@3b83e5af {}
[INFO ] 2019-11-01T01:38:21,399Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T01:38:21,400Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:21,402Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:21,512Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:21,527Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T01:38:21,528Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572301528) {}
[INFO ] 2019-11-01T01:38:21,531Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:21,538Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572301528) {}
[INFO ] 2019-11-01T01:38:21,539Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572301528) {}
[INFO ] 2019-11-01T01:38:21,680Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 9EC89A87A31C1FF30AEEB5D29BA4290073CA8BFEBCAFFED179D0A87E097AC421 {}
[INFO ] 2019-11-01T01:38:21,810Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DAE15B0B886AD6558683A2786053AA585DC34C32CCF4D87EC1F91D53D2DE4F6A {}
[INFO ] 2019-11-01T01:38:21,902Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T01:38:21,904Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T01:38:21,913Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T01:38:21,918Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T01:38:21,919Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:38:21,920Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:38:21,921Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:38:21,922Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T01:38:21,940Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key BA946C4AA6A1AC502DBF681FB6393866947CF3504F04D261928B6110E0EA08AC, not inserting the second time {}
[INFO ] 2019-11-01T01:38:21,948Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572301528) {}
[INFO ] 2019-11-01T01:38:21,956Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:38:21,958Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572301528) {}
[INFO ] 2019-11-01T01:38:21,967Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572301528) {}
[INFO ] 2019-11-01T01:38:21,968Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:38:21,969Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572301528) {}
[INFO ] 2019-11-01T01:38:21,972Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T01:38:21,973Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T01:38:21,996Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T01:38:22,016Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@195dc4a2 {}
[INFO ] 2019-11-01T01:38:22,027Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T01:38:22,032Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:22,033Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:22,144Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:22,206Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T01:38:22,211Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572302211) {}
[INFO ] 2019-11-01T01:38:22,216Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:22,220Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572302211) {}
[INFO ] 2019-11-01T01:38:22,221Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572302211) {}
[INFO ] 2019-11-01T01:38:22,365Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 9EC89A87A31C1FF30AEEB5D29BA4290073CA8BFEBCAFFED179D0A87E097AC421 {}
[INFO ] 2019-11-01T01:38:22,487Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DAE15B0B886AD6558683A2786053AA585DC34C32CCF4D87EC1F91D53D2DE4F6A {}
[INFO ] 2019-11-01T01:38:22,584Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T01:38:22,586Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T01:38:22,598Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T01:38:22,599Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:38:22,600Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:38:22,601Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:38:22,602Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T01:38:22,621Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 293700DDA6C266AEE61A8F1FC15E9C5294AAFC8173A88B2CFCD4775D3DEE69D6, not inserting the second time {}
[INFO ] 2019-11-01T01:38:22,628Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572301528) {}
[INFO ] 2019-11-01T01:38:22,630Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:22,645Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572301528) {}
[INFO ] 2019-11-01T01:38:22,647Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572302211) {}
[INFO ] 2019-11-01T01:38:22,648Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:22,655Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572302211) {}
[INFO ] 2019-11-01T01:38:22,656Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572302211) {}
[INFO ] 2019-11-01T01:38:22,660Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:38:22,660Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572302211) {}
[INFO ] 2019-11-01T01:38:22,661Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572302211) {}
[INFO ] 2019-11-01T01:38:22,662Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:38:22,663Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572302211) {}
[INFO ] 2019-11-01T01:38:22,665Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T01:38:22,666Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T01:38:22,678Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T01:38:22,689Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@2c36224b {}
[INFO ] 2019-11-01T01:38:22,705Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T01:38:22,707Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:22,708Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:22,806Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:22,815Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T01:38:22,816Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572572302816) {}
[INFO ] 2019-11-01T01:38:22,826Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:22,829Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572572302816) {}
[INFO ] 2019-11-01T01:38:22,830Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572572302816) {}
[INFO ] 2019-11-01T01:38:22,982Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 9EC89A87A31C1FF30AEEB5D29BA4290073CA8BFEBCAFFED179D0A87E097AC421 {}
[INFO ] 2019-11-01T01:38:23,159Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DAE15B0B886AD6558683A2786053AA585DC34C32CCF4D87EC1F91D53D2DE4F6A {}
[INFO ] 2019-11-01T01:38:23,254Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T01:38:23,256Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T01:38:23,267Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T01:38:23,269Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:38:23,270Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:38:23,270Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:38:23,271Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T01:38:23,282Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 5C11C0692F4984056AC3255041B1044BA7CB6B3C0CFD954C03F380AA90454E7B, not inserting the second time {}
[INFO ] 2019-11-01T01:38:23,287Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572301528) {}
[INFO ] 2019-11-01T01:38:23,291Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:23,300Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572301528) {}
[INFO ] 2019-11-01T01:38:23,303Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572572302816) {}
[INFO ] 2019-11-01T01:38:23,307Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:23,313Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572572302816) {}
[INFO ] 2019-11-01T01:38:23,318Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572302211) {}
[INFO ] 2019-11-01T01:38:23,320Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:23,328Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572302211) {}
[INFO ] 2019-11-01T01:38:23,329Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572572302816) {}
[INFO ] 2019-11-01T01:38:23,333Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:23,343Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572572302816) {}
[INFO ] 2019-11-01T01:38:23,344Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572572302816) {}
[INFO ] 2019-11-01T01:38:23,351Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:38:23,352Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572572302816) {}
[INFO ] 2019-11-01T01:38:23,353Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572572302816) {}
[INFO ] 2019-11-01T01:38:23,354Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:38:23,355Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572572302816) {}
[INFO ] 2019-11-01T01:38:23,359Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T01:38:23,360Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T01:38:23,380Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T01:38:23,388Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@1afe7eb9 {}
[INFO ] 2019-11-01T01:38:23,397Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T01:38:23,398Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:23,398Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:23,475Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:23,482Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T01:38:23,483Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572572303482) {}
[INFO ] 2019-11-01T01:38:23,486Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:23,490Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572572303482) {}
[INFO ] 2019-11-01T01:38:23,491Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572572303482) {}
[INFO ] 2019-11-01T01:38:23,634Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 9EC89A87A31C1FF30AEEB5D29BA4290073CA8BFEBCAFFED179D0A87E097AC421 {}
[INFO ] 2019-11-01T01:38:23,752Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DAE15B0B886AD6558683A2786053AA585DC34C32CCF4D87EC1F91D53D2DE4F6A {}
[INFO ] 2019-11-01T01:38:23,847Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T01:38:23,849Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T01:38:23,863Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T01:38:23,864Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:38:23,865Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:38:23,866Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:38:23,867Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T01:38:23,879Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key E6EEAA7552681B39B1DE1FBC736B066C1D1290280D2D720CDA11B4B7FD3FC881, not inserting the second time {}
[INFO ] 2019-11-01T01:38:23,886Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572301528) {}
[INFO ] 2019-11-01T01:38:23,893Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:23,900Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572301528) {}
[INFO ] 2019-11-01T01:38:23,901Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572572303482) {}
[INFO ] 2019-11-01T01:38:23,902Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:23,908Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572572303482) {}
[INFO ] 2019-11-01T01:38:23,909Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572302211) {}
[INFO ] 2019-11-01T01:38:23,910Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:23,916Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572302211) {}
[INFO ] 2019-11-01T01:38:23,917Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572572303482) {}
[INFO ] 2019-11-01T01:38:23,919Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:23,925Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572572303482) {}
[INFO ] 2019-11-01T01:38:23,926Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572572302816) {}
[INFO ] 2019-11-01T01:38:23,927Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:23,933Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572572302816) {}
[INFO ] 2019-11-01T01:38:23,934Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572572303482) {}
[INFO ] 2019-11-01T01:38:23,935Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:23,941Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572572303482) {}
[INFO ] 2019-11-01T01:38:23,942Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572572303482) {}
[INFO ] 2019-11-01T01:38:23,945Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:38:23,946Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572572303482) {}
[INFO ] 2019-11-01T01:38:23,947Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572572303482) {}
[INFO ] 2019-11-01T01:38:23,948Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:38:24,004Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572572303482) {}
[INFO ] 2019-11-01T01:38:24,007Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T01:38:24,008Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T01:38:24,037Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T01:38:24,048Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@93222e9 {}
[INFO ] 2019-11-01T01:38:24,058Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T01:38:24,059Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:24,060Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:24,135Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:24,142Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T01:38:24,143Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572304143) {}
[INFO ] 2019-11-01T01:38:24,146Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:24,149Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572304143) {}
[INFO ] 2019-11-01T01:38:24,150Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572304143) {}
[INFO ] 2019-11-01T01:38:24,284Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 9EC89A87A31C1FF30AEEB5D29BA4290073CA8BFEBCAFFED179D0A87E097AC421 {}
[INFO ] 2019-11-01T01:38:24,401Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DAE15B0B886AD6558683A2786053AA585DC34C32CCF4D87EC1F91D53D2DE4F6A {}
[INFO ] 2019-11-01T01:38:24,494Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T01:38:24,496Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T01:38:24,509Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T01:38:24,511Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:38:24,512Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:38:24,513Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:38:24,514Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T01:38:24,525Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key CADC5FDBDFB660E2D36B4F20A8CF61B53847D9AE869897A408694E6CD9684B05, not inserting the second time {}
[INFO ] 2019-11-01T01:38:24,531Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572301528) {}
[INFO ] 2019-11-01T01:38:24,533Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:24,539Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572301528) {}
[INFO ] 2019-11-01T01:38:24,539Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572304143) {}
[INFO ] 2019-11-01T01:38:24,542Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:24,548Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572304143) {}
[INFO ] 2019-11-01T01:38:24,549Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572302211) {}
[INFO ] 2019-11-01T01:38:24,550Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:24,555Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572302211) {}
[INFO ] 2019-11-01T01:38:24,556Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572304143) {}
[INFO ] 2019-11-01T01:38:24,557Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:24,563Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572304143) {}
[INFO ] 2019-11-01T01:38:24,564Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572572302816) {}
[INFO ] 2019-11-01T01:38:24,565Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:24,570Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572572302816) {}
[INFO ] 2019-11-01T01:38:24,571Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572304143) {}
[INFO ] 2019-11-01T01:38:24,573Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:24,578Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572304143) {}
[INFO ] 2019-11-01T01:38:24,579Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572572303482) {}
[INFO ] 2019-11-01T01:38:24,580Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:24,586Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572572303482) {}
[INFO ] 2019-11-01T01:38:24,587Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572304143) {}
[INFO ] 2019-11-01T01:38:24,588Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:24,593Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572304143) {}
[INFO ] 2019-11-01T01:38:24,594Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572304143) {}
[INFO ] 2019-11-01T01:38:24,597Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:38:24,598Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572304143) {}
[INFO ] 2019-11-01T01:38:24,599Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572304143) {}
[INFO ] 2019-11-01T01:38:24,600Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:38:24,600Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572304143) {}
[INFO ] 2019-11-01T01:38:24,606Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:38:24,607Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:38:24,608Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:38:24,608Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:38:24,609Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:38:24,610Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:38:24,611Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:38:24,611Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:38:24,801Z [Mock network] flow.[9cd258fe-fa8c-4517-b19a-7b316c8449a8].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=7902734857867184193). {}
[INFO ] 2019-11-01T01:38:24,873Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=7902734857867184193). {invocation_id=6305619d-b351-4067-91fe-b10fb53e926a, invocation_timestamp=2019-11-01T01:38:24.870Z, session_id=6305619d-b351-4067-91fe-b10fb53e926a, session_timestamp=2019-11-01T01:38:24.870Z}
[INFO ] 2019-11-01T01:38:25,058Z [Mock network] flow.[9cd258fe-fa8c-4517-b19a-7b316c8449a8].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=1308668338458492861). {}
[INFO ] 2019-11-01T01:38:25,081Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=1308668338458492861). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=469166cc-0e94-41a5-9c92-5a4de701b756, invocation_timestamp=2019-11-01T01:38:25.080Z, session_id=469166cc-0e94-41a5-9c92-5a4de701b756, session_timestamp=2019-11-01T01:38:25.080Z}
[INFO ] 2019-11-01T01:38:25,206Z [Mock network] flow.[9cd258fe-fa8c-4517-b19a-7b316c8449a8].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-3266800370264084689). {}
[INFO ] 2019-11-01T01:38:25,242Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-3266800370264084689). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=89ca3e21-7df5-4ec8-a368-05b76675ac9f, invocation_timestamp=2019-11-01T01:38:25.241Z, session_id=89ca3e21-7df5-4ec8-a368-05b76675ac9f, session_timestamp=2019-11-01T01:38:25.241Z}
[INFO ] 2019-11-01T01:38:25,383Z [Mock network] flow.[921703d3-89c3-4c00-83e4-9fac32d80233].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=1931384851169661665). {}
[INFO ] 2019-11-01T01:38:25,419Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=1931384851169661665). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=1cee3490-6ecb-4f75-ab53-1e31f6d03333, invocation_timestamp=2019-11-01T01:38:25.418Z, session_id=1cee3490-6ecb-4f75-ab53-1e31f6d03333, session_timestamp=2019-11-01T01:38:25.418Z}
[INFO ] 2019-11-01T01:38:25,611Z [Mock network] flow.[d7337cda-bcf2-4d69-a334-b6daf87f7c64].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=-4259714421064370687). {}
[INFO ] 2019-11-01T01:38:25,720Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-4259714421064370687). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=6377cfe8-17ba-4886-abba-312375eab4c1, invocation_timestamp=2019-11-01T01:38:25.718Z, session_id=6377cfe8-17ba-4886-abba-312375eab4c1, session_timestamp=2019-11-01T01:38:25.718Z}
[INFO ] 2019-11-01T01:38:25,746Z [Mock network] flow.[a71064d7-d79c-4aef-b24e-297a6ec9e53a].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:38:25,800Z [Mock network] flow.[a71064d7-d79c-4aef-b24e-297a6ec9e53a].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:38:25,887Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T01:38:25,931Z [Mock network] flow.[5689d8c1-1e0b-4ff6-90fd-afe963e3d39d].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=6367141048933779534). {}
[INFO ] 2019-11-01T01:38:25,962Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=6367141048933779534). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=44a3e56b-1bf8-456f-8676-650bc57e6802, invocation_timestamp=2019-11-01T01:38:25.961Z, session_id=44a3e56b-1bf8-456f-8676-650bc57e6802, session_timestamp=2019-11-01T01:38:25.961Z}
[INFO ] 2019-11-01T01:38:25,978Z [Mock network] flow.[1e837f1d-30e2-4907-bfa1-c2be1e7c20f7].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T01:38:26,123Z [Mock network] flow.[1e837f1d-30e2-4907-bfa1-c2be1e7c20f7].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T01:38:26,183Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.qn7265.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T01:38:26,294Z [Mock network] flow.[5689d8c1-1e0b-4ff6-90fd-afe963e3d39d].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:38:26,322Z [Mock network] flow.[5689d8c1-1e0b-4ff6-90fd-afe963e3d39d].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:38:26,324Z [Mock network] flow.[5689d8c1-1e0b-4ff6-90fd-afe963e3d39d].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:38:26,354Z [Mock network] flow.[5689d8c1-1e0b-4ff6-90fd-afe963e3d39d].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:38:26,495Z [Mock network] flow.[1e837f1d-30e2-4907-bfa1-c2be1e7c20f7].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=8538254370242149690). {}
[INFO ] 2019-11-01T01:38:26,511Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=8538254370242149690). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=ae30d026-20ef-4581-bac7-51625c7f8d6b, invocation_timestamp=2019-11-01T01:38:26.510Z, session_id=ae30d026-20ef-4581-bac7-51625c7f8d6b, session_timestamp=2019-11-01T01:38:26.510Z}
[INFO ] 2019-11-01T01:38:26,525Z [Mock network] flow.[09f83b3b-9c81-45d6-82ea-02f1c3ba3a85].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:38:26,559Z [Mock network] flow.[09f83b3b-9c81-45d6-82ea-02f1c3ba3a85].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:38:26,561Z [Mock network] flow.[09f83b3b-9c81-45d6-82ea-02f1c3ba3a85].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:38:26,620Z [Mock network] flow.[09f83b3b-9c81-45d6-82ea-02f1c3ba3a85].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:38:26,746Z [Mock network] flow.[1e837f1d-30e2-4907-bfa1-c2be1e7c20f7].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=2783061124179284509). {}
[INFO ] 2019-11-01T01:38:26,799Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=2783061124179284509). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=ccb13c75-181c-47f9-a384-b1609e2c1c02, invocation_timestamp=2019-11-01T01:38:26.798Z, session_id=ccb13c75-181c-47f9-a384-b1609e2c1c02, session_timestamp=2019-11-01T01:38:26.798Z}
[INFO ] 2019-11-01T01:38:26,812Z [Mock network] flow.[bc58247b-e864-494d-899c-f31538f163bf].call - Requesting 2 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:38:26,915Z [Mock network] flow.[bc58247b-e864-494d-899c-f31538f163bf].call - Fetched 2 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:38:27,002Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: interface net.corda.core.contracts.ContractState, criteria: VaultQueryCriteria(status=UNCONSUMED, contractStateTypes=null, stateRefs=[3B8202EEF8A333C41644B3BA5AE131998E1C9ECE6E3DF9B99E5D6C131741835A(0), D69563685C39EE336257F5C2061A596E474D7DEBBC3F8C09BDD7A07619228CD0(0)], notary=null, softLockingCondition=null, timeCondition=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T01:38:27,046Z [Mock network] flow.[1e837f1d-30e2-4907-bfa1-c2be1e7c20f7].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=8514292105070979888). {}
[INFO ] 2019-11-01T01:38:27,075Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=8514292105070979888). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=73ccadb6-e1be-40d3-b529-16900c826f9c, invocation_timestamp=2019-11-01T01:38:27.073Z, session_id=73ccadb6-e1be-40d3-b529-16900c826f9c, session_timestamp=2019-11-01T01:38:27.073Z}
[INFO ] 2019-11-01T01:38:27,128Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: interface net.corda.core.contracts.ContractState, criteria: VaultQueryCriteria(status=UNCONSUMED, contractStateTypes=null, stateRefs=[3B8202EEF8A333C41644B3BA5AE131998E1C9ECE6E3DF9B99E5D6C131741835A(0), D69563685C39EE336257F5C2061A596E474D7DEBBC3F8C09BDD7A07619228CD0(0)], notary=null, softLockingCondition=null, timeCondition=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T01:38:27,190Z [Mock network] flow.[1e837f1d-30e2-4907-bfa1-c2be1e7c20f7].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=3779014231668875954). {}
[INFO ] 2019-11-01T01:38:27,211Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=3779014231668875954). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=75f72ed2-148e-45d8-a71d-248ecf455d2f, invocation_timestamp=2019-11-01T01:38:27.210Z, session_id=75f72ed2-148e-45d8-a71d-248ecf455d2f, session_timestamp=2019-11-01T01:38:27.210Z}
[INFO ] 2019-11-01T01:38:27,244Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: interface net.corda.core.contracts.ContractState, criteria: VaultQueryCriteria(status=UNCONSUMED, contractStateTypes=null, stateRefs=[3B8202EEF8A333C41644B3BA5AE131998E1C9ECE6E3DF9B99E5D6C131741835A(0), D69563685C39EE336257F5C2061A596E474D7DEBBC3F8C09BDD7A07619228CD0(0)], notary=null, softLockingCondition=null, timeCondition=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T01:38:27,304Z [Mock network] flow.[1e837f1d-30e2-4907-bfa1-c2be1e7c20f7].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=6643572868073715345). {}
[INFO ] 2019-11-01T01:38:27,327Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=6643572868073715345). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=8edb9dd6-321b-4b1d-a644-cfe19003d837, invocation_timestamp=2019-11-01T01:38:27.326Z, session_id=8edb9dd6-321b-4b1d-a644-cfe19003d837, session_timestamp=2019-11-01T01:38:27.326Z}
[INFO ] 2019-11-01T01:38:27,374Z [Mock network] flow.[ed3108b2-eab3-44d7-8dbb-983db1c4840c].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:38:27,443Z [Mock network] flow.[ed3108b2-eab3-44d7-8dbb-983db1c4840c].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:38:27,472Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: interface net.corda.core.contracts.ContractState, criteria: VaultQueryCriteria(status=UNCONSUMED, contractStateTypes=null, stateRefs=[3B8202EEF8A333C41644B3BA5AE131998E1C9ECE6E3DF9B99E5D6C131741835A(0), D69563685C39EE336257F5C2061A596E474D7DEBBC3F8C09BDD7A07619228CD0(0)], notary=null, softLockingCondition=null, timeCondition=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T01:38:27,606Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T01:38:27,607Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T01:38:27,612Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@17dc8c6f {}
[INFO ] 2019-11-01T01:38:27,621Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T01:38:27,622Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:27,623Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:27,721Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:27,728Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T01:38:27,729Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572307729) {}
[INFO ] 2019-11-01T01:38:27,739Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:27,745Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572307729) {}
[INFO ] 2019-11-01T01:38:27,746Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572307729) {}
[INFO ] 2019-11-01T01:38:27,883Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 9EC89A87A31C1FF30AEEB5D29BA4290073CA8BFEBCAFFED179D0A87E097AC421 {}
[INFO ] 2019-11-01T01:38:27,999Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DAE15B0B886AD6558683A2786053AA585DC34C32CCF4D87EC1F91D53D2DE4F6A {}
[INFO ] 2019-11-01T01:38:28,095Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T01:38:28,096Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T01:38:28,105Z [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService {}
[INFO ] 2019-11-01T01:38:28,109Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T01:38:28,110Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:38:28,110Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:38:28,111Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:38:28,112Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T01:38:28,123Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 825164DD2536FC2C64D891CEB64CDF1A96F176F99F996BD9F9FBD8AD5E91F084, not inserting the second time {}
[INFO ] 2019-11-01T01:38:28,132Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572307729) {}
[INFO ] 2019-11-01T01:38:28,136Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:38:28,138Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572307729) {}
[INFO ] 2019-11-01T01:38:28,138Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572307729) {}
[INFO ] 2019-11-01T01:38:28,139Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:38:28,140Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572307729) {}
[INFO ] 2019-11-01T01:38:28,143Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T01:38:28,144Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T01:38:28,156Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T01:38:28,163Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@4aab7ee8 {}
[INFO ] 2019-11-01T01:38:28,173Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T01:38:28,174Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:28,175Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:28,239Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:28,247Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T01:38:28,248Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572308248) {}
[INFO ] 2019-11-01T01:38:28,251Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:28,253Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572308248) {}
[INFO ] 2019-11-01T01:38:28,254Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572308248) {}
[INFO ] 2019-11-01T01:38:28,413Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 9EC89A87A31C1FF30AEEB5D29BA4290073CA8BFEBCAFFED179D0A87E097AC421 {}
[INFO ] 2019-11-01T01:38:28,530Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DAE15B0B886AD6558683A2786053AA585DC34C32CCF4D87EC1F91D53D2DE4F6A {}
[INFO ] 2019-11-01T01:38:28,623Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T01:38:28,625Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T01:38:28,636Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T01:38:28,638Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:38:28,639Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:38:28,639Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:38:28,640Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T01:38:28,652Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 799B9B323513724BA412D2CD323D2205DA27DC832F5D211D854331F8DA637023, not inserting the second time {}
[INFO ] 2019-11-01T01:38:28,656Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572307729) {}
[INFO ] 2019-11-01T01:38:28,658Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:28,663Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572307729) {}
[INFO ] 2019-11-01T01:38:28,670Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572308248) {}
[INFO ] 2019-11-01T01:38:28,673Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:28,685Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572308248) {}
[INFO ] 2019-11-01T01:38:28,687Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572308248) {}
[INFO ] 2019-11-01T01:38:28,690Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:38:28,691Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572308248) {}
[INFO ] 2019-11-01T01:38:28,692Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572308248) {}
[INFO ] 2019-11-01T01:38:28,693Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:38:28,693Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572308248) {}
[INFO ] 2019-11-01T01:38:28,696Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T01:38:28,697Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T01:38:28,718Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T01:38:28,727Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6df83799 {}
[INFO ] 2019-11-01T01:38:28,736Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T01:38:28,738Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:28,739Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:28,831Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:28,843Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T01:38:28,844Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572572308844) {}
[INFO ] 2019-11-01T01:38:28,847Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:28,855Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572572308844) {}
[INFO ] 2019-11-01T01:38:28,859Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572572308844) {}
[INFO ] 2019-11-01T01:38:29,371Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 9EC89A87A31C1FF30AEEB5D29BA4290073CA8BFEBCAFFED179D0A87E097AC421 {}
[INFO ] 2019-11-01T01:38:29,491Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DAE15B0B886AD6558683A2786053AA585DC34C32CCF4D87EC1F91D53D2DE4F6A {}
[INFO ] 2019-11-01T01:38:29,582Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T01:38:29,584Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T01:38:29,594Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T01:38:29,595Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:38:29,596Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:38:29,597Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:38:29,598Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T01:38:29,608Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key D1DAE4F74350B44A2D9EF2CF5C543A0C539E40F060988BC941F74F53734B4F81, not inserting the second time {}
[INFO ] 2019-11-01T01:38:29,621Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572307729) {}
[INFO ] 2019-11-01T01:38:29,623Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:29,631Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572307729) {}
[INFO ] 2019-11-01T01:38:29,632Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572572308844) {}
[INFO ] 2019-11-01T01:38:29,634Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:29,641Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572572308844) {}
[INFO ] 2019-11-01T01:38:29,642Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572308248) {}
[INFO ] 2019-11-01T01:38:29,643Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:29,649Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572308248) {}
[INFO ] 2019-11-01T01:38:29,650Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572572308844) {}
[INFO ] 2019-11-01T01:38:29,651Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:29,658Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572572308844) {}
[INFO ] 2019-11-01T01:38:29,658Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572572308844) {}
[INFO ] 2019-11-01T01:38:29,662Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:38:29,663Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572572308844) {}
[INFO ] 2019-11-01T01:38:29,664Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572572308844) {}
[INFO ] 2019-11-01T01:38:29,665Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:38:29,666Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572572308844) {}
[INFO ] 2019-11-01T01:38:29,668Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T01:38:29,669Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T01:38:29,687Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/3/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T01:38:29,694Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@451f6799 {}
[INFO ] 2019-11-01T01:38:29,703Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T01:38:29,704Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:29,705Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:29,807Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:29,819Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T01:38:29,820Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572572309820) {}
[INFO ] 2019-11-01T01:38:29,823Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:29,827Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572572309820) {}
[INFO ] 2019-11-01T01:38:29,828Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572572309820) {}
[INFO ] 2019-11-01T01:38:29,968Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 9EC89A87A31C1FF30AEEB5D29BA4290073CA8BFEBCAFFED179D0A87E097AC421 {}
[INFO ] 2019-11-01T01:38:30,131Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DAE15B0B886AD6558683A2786053AA585DC34C32CCF4D87EC1F91D53D2DE4F6A {}
[INFO ] 2019-11-01T01:38:30,225Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T01:38:30,227Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T01:38:30,238Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T01:38:30,239Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:38:30,240Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:38:30,242Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:38:30,243Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T01:38:30,260Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 24AC6FCB22A23675566921C5BF4DB326087FFA9BBA7E2C2EB6BCC84D0ECEC8F3, not inserting the second time {}
[INFO ] 2019-11-01T01:38:30,265Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572307729) {}
[INFO ] 2019-11-01T01:38:30,267Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:30,275Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572307729) {}
[INFO ] 2019-11-01T01:38:30,276Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572572309820) {}
[INFO ] 2019-11-01T01:38:30,277Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:30,283Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572572309820) {}
[INFO ] 2019-11-01T01:38:30,284Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572308248) {}
[INFO ] 2019-11-01T01:38:30,285Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:30,290Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572308248) {}
[INFO ] 2019-11-01T01:38:30,291Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572572309820) {}
[INFO ] 2019-11-01T01:38:30,292Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:30,299Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572572309820) {}
[INFO ] 2019-11-01T01:38:30,300Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572572308844) {}
[INFO ] 2019-11-01T01:38:30,301Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:30,307Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572572308844) {}
[INFO ] 2019-11-01T01:38:30,308Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572572309820) {}
[INFO ] 2019-11-01T01:38:30,309Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:30,315Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572572309820) {}
[INFO ] 2019-11-01T01:38:30,316Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572572309820) {}
[INFO ] 2019-11-01T01:38:30,320Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:38:30,330Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572572309820) {}
[INFO ] 2019-11-01T01:38:30,336Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572572309820) {}
[INFO ] 2019-11-01T01:38:30,337Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:38:30,337Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572572309820) {}
[INFO ] 2019-11-01T01:38:30,340Z [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ... {}
[WARN ] 2019-11-01T01:38:30,341Z [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode. {}
[INFO ] 2019-11-01T01:38:30,351Z [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/4/certificates/nodekeystore.jks, generating fresh key! {}
[INFO ] 2019-11-01T01:38:30,357Z [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@39c50fc6 {}
[INFO ] 2019-11-01T01:38:30,368Z [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database. {}
[INFO ] 2019-11-01T01:38:30,369Z [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:30,370Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:30,435Z [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)] {}
[INFO ] 2019-11-01T01:38:30,445Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2019-11-01T01:38:30,446Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572310446) {}
[INFO ] 2019-11-01T01:38:30,449Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:30,452Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572310446) {}
[INFO ] 2019-11-01T01:38:30,453Z [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572310446) {}
[INFO ] 2019-11-01T01:38:30,601Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 9EC89A87A31C1FF30AEEB5D29BA4290073CA8BFEBCAFFED179D0A87E097AC421 {}
[INFO ] 2019-11-01T01:38:30,720Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DAE15B0B886AD6558683A2786053AA585DC34C32CCF4D87EC1F91D53D2DE4F6A {}
[INFO ] 2019-11-01T01:38:30,826Z [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91 {}
[WARN ] 2019-11-01T01:38:30,828Z [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html {}
[INFO ] 2019-11-01T01:38:30,842Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1) {}
[INFO ] 2019-11-01T01:38:30,844Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:38:30,845Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:38:30,845Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:38:30,846Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1) {}
[WARN ] 2019-11-01T01:38:30,856Z [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 0A5A5D3C9DE85DB55385DD0A8FCF62CFCC39D7C329F7689FBCBD4B9AA7A6BE08, not inserting the second time {}
[INFO ] 2019-11-01T01:38:30,860Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572307729) {}
[INFO ] 2019-11-01T01:38:30,862Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:30,873Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572307729) {}
[INFO ] 2019-11-01T01:38:30,874Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572310446) {}
[INFO ] 2019-11-01T01:38:30,875Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:30,882Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572310446) {}
[INFO ] 2019-11-01T01:38:30,888Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572308248) {}
[INFO ] 2019-11-01T01:38:30,889Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:30,898Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572308248) {}
[INFO ] 2019-11-01T01:38:30,905Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572310446) {}
[INFO ] 2019-11-01T01:38:30,907Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:30,912Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572310446) {}
[INFO ] 2019-11-01T01:38:30,915Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572572308844) {}
[INFO ] 2019-11-01T01:38:30,922Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:30,928Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=1, serial=1572572308844) {}
[INFO ] 2019-11-01T01:38:30,932Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572310446) {}
[INFO ] 2019-11-01T01:38:30,934Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:30,938Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572310446) {}
[INFO ] 2019-11-01T01:38:30,939Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572572309820) {}
[INFO ] 2019-11-01T01:38:30,941Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:30,950Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Twig, L=Manila, C=PH], platformVersion=1, serial=1572572309820) {}
[INFO ] 2019-11-01T01:38:30,952Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572310446) {}
[INFO ] 2019-11-01T01:38:30,953Z [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found {}
[INFO ] 2019-11-01T01:38:30,960Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572310446) {}
[INFO ] 2019-11-01T01:38:30,961Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572310446) {}
[INFO ] 2019-11-01T01:38:30,964Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:38:30,965Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572310446) {}
[INFO ] 2019-11-01T01:38:30,965Z [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572310446) {}
[INFO ] 2019-11-01T01:38:30,966Z [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2019-11-01T01:38:30,967Z [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572310446) {}
[INFO ] 2019-11-01T01:38:30,968Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:38:30,969Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:38:30,970Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:38:30,971Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:38:30,972Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:38:30,973Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:38:30,974Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2) {}
[INFO ] 2019-11-01T01:38:30,975Z [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1) {}
[INFO ] 2019-11-01T01:38:31,054Z [Mock network] flow.[c7c9b944-42a6-4be2-b6c6-c6f5fb609211].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=851570046704369951). {}
[INFO ] 2019-11-01T01:38:31,107Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=851570046704369951). {invocation_id=ff2f9aab-eb93-4c52-a3d5-b3a466cf3a3f, invocation_timestamp=2019-11-01T01:38:31.106Z, session_id=ff2f9aab-eb93-4c52-a3d5-b3a466cf3a3f, session_timestamp=2019-11-01T01:38:31.106Z}
[INFO ] 2019-11-01T01:38:31,299Z [Mock network] flow.[c7c9b944-42a6-4be2-b6c6-c6f5fb609211].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=294017623456322960). {}
[INFO ] 2019-11-01T01:38:31,320Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=294017623456322960). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=8aec12dc-8c9b-428a-be25-8d4a80b3de72, invocation_timestamp=2019-11-01T01:38:31.319Z, session_id=8aec12dc-8c9b-428a-be25-8d4a80b3de72, session_timestamp=2019-11-01T01:38:31.319Z}
[INFO ] 2019-11-01T01:38:31,384Z [Mock network] flow.[c7c9b944-42a6-4be2-b6c6-c6f5fb609211].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=4850487899717417523). {}
[INFO ] 2019-11-01T01:38:31,408Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=4850487899717417523). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=49efba84-811f-4da9-a12e-4dd563200d8e, invocation_timestamp=2019-11-01T01:38:31.407Z, session_id=49efba84-811f-4da9-a12e-4dd563200d8e, session_timestamp=2019-11-01T01:38:31.407Z}
[INFO ] 2019-11-01T01:38:31,524Z [Mock network] flow.[0a087ee7-e22c-4a30-9def-b24abfc6419d].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=4674369404960696811). {}
[INFO ] 2019-11-01T01:38:31,574Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=4674369404960696811). {actor_id=Only For Testing, actor_owningIdentity=O=Twig, L=Manila, C=PH, actor_store_id=TEST, invocation_id=c477c6d9-dce9-4f61-83e2-a0e4c96b1be9, invocation_timestamp=2019-11-01T01:38:31.572Z, session_id=c477c6d9-dce9-4f61-83e2-a0e4c96b1be9, session_timestamp=2019-11-01T01:38:31.572Z}
[INFO ] 2019-11-01T01:38:31,670Z [Mock network] flow.[9bf8356d-b087-423e-a2da-b71f12881518].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=9112285468568652112). {}
[INFO ] 2019-11-01T01:38:31,718Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=9112285468568652112). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=db96fe65-2101-45ad-a724-c7099a7623ef, invocation_timestamp=2019-11-01T01:38:31.716Z, session_id=db96fe65-2101-45ad-a724-c7099a7623ef, session_timestamp=2019-11-01T01:38:31.716Z}
[INFO ] 2019-11-01T01:38:31,733Z [Mock network] flow.[cc7dd7d5-3c26-4255-9690-66545bd27483].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:38:31,791Z [Mock network] flow.[cc7dd7d5-3c26-4255-9690-66545bd27483].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:38:31,868Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.twig.state.PrideState, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 2, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T01:38:31,885Z [Mock network] flow.[42cfcef1-0a37-4a2c-8e25-5f06ab5a77c4].initiateSession - Initiating flow session with party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-564961684238815104). {}
[INFO ] 2019-11-01T01:38:31,897Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-564961684238815104). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, invocation_id=b86e89b8-3529-494d-b727-1470dd7fd0b7, invocation_timestamp=2019-11-01T01:38:31.896Z, session_id=b86e89b8-3529-494d-b727-1470dd7fd0b7, session_timestamp=2019-11-01T01:38:31.896Z}
[INFO ] 2019-11-01T01:38:31,905Z [Mock network] flow.[089cd942-a93d-44cd-9239-60d5f2817388].call - Requesting 1 dependency(s) for verification from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T01:38:31,938Z [Mock network] flow.[089cd942-a93d-44cd-9239-60d5f2817388].call - Fetched 1 elements from O=Mock Company 2, L=London, C=GB {}
[INFO ] 2019-11-01T01:38:31,976Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: class com.qn7265.trade.AssetStateNew, criteria: FungibleAssetQueryCriteria(participants=null, owner=[O=Mock Company 1, L=London, C=GB], quantity=null, issuer=null, issuerRef=null, status=UNCONSUMED, contractStateTypes=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T01:38:32,024Z [Mock network] flow.[42cfcef1-0a37-4a2c-8e25-5f06ab5a77c4].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:38:32,058Z [Mock network] flow.[42cfcef1-0a37-4a2c-8e25-5f06ab5a77c4].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:38:32,059Z [Mock network] flow.[42cfcef1-0a37-4a2c-8e25-5f06ab5a77c4].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:38:32,102Z [Mock network] flow.[42cfcef1-0a37-4a2c-8e25-5f06ab5a77c4].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:38:32,190Z [Mock network] flow.[089cd942-a93d-44cd-9239-60d5f2817388].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=2845021349254398077). {}
[INFO ] 2019-11-01T01:38:32,213Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=2845021349254398077). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=76e44285-8d3c-4276-bd19-e20e18cd4bf3, invocation_timestamp=2019-11-01T01:38:32.212Z, session_id=76e44285-8d3c-4276-bd19-e20e18cd4bf3, session_timestamp=2019-11-01T01:38:32.212Z}
[INFO ] 2019-11-01T01:38:32,227Z [Mock network] flow.[99aa761b-0317-4801-8970-724ead3d2054].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:38:32,268Z [Mock network] flow.[99aa761b-0317-4801-8970-724ead3d2054].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:38:32,273Z [Mock network] flow.[99aa761b-0317-4801-8970-724ead3d2054].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:38:32,293Z [Mock network] flow.[99aa761b-0317-4801-8970-724ead3d2054].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:38:32,418Z [Mock network] flow.[089cd942-a93d-44cd-9239-60d5f2817388].initiateSession - Initiating flow session with party O=Notary Service, L=Zurich, C=CH. Session id for tracing purposes is SessionId(toLong=3099917152585983095). {}
[INFO ] 2019-11-01T01:38:32,432Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=3099917152585983095). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=0b6850f1-8ca2-48fd-a419-a19c388d0722, invocation_timestamp=2019-11-01T01:38:32.431Z, session_id=0b6850f1-8ca2-48fd-a419-a19c388d0722, session_timestamp=2019-11-01T01:38:32.431Z}
[INFO ] 2019-11-01T01:38:32,447Z [Mock network] flow.[b564bb31-4952-4299-aeee-094151a00297].call - Requesting 2 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:38:32,509Z [Mock network] flow.[b564bb31-4952-4299-aeee-094151a00297].call - Fetched 2 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:38:32,600Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: interface net.corda.core.contracts.ContractState, criteria: VaultQueryCriteria(status=UNCONSUMED, contractStateTypes=null, stateRefs=[DED61BDD05886D07D5612D9BF47528A6804CF0091B3D9DD7E8AA2C192522566C(0), 93639448AF900EADB11CC16D45A8DB89F3D9CB16A25602394E99F24A05B43761(0)], notary=null, softLockingCondition=null, timeCondition=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T01:38:32,614Z [Mock network] flow.[089cd942-a93d-44cd-9239-60d5f2817388].initiateSession - Initiating flow session with party O=Mock Company 2, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-8331308361472075341). {}
[INFO ] 2019-11-01T01:38:32,629Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-8331308361472075341). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=5a4270ec-30f0-4df2-bc19-a69e27a897de, invocation_timestamp=2019-11-01T01:38:32.628Z, session_id=5a4270ec-30f0-4df2-bc19-a69e27a897de, session_timestamp=2019-11-01T01:38:32.628Z}
[INFO ] 2019-11-01T01:38:32,654Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: interface net.corda.core.contracts.ContractState, criteria: VaultQueryCriteria(status=UNCONSUMED, contractStateTypes=null, stateRefs=[DED61BDD05886D07D5612D9BF47528A6804CF0091B3D9DD7E8AA2C192522566C(0), 93639448AF900EADB11CC16D45A8DB89F3D9CB16A25602394E99F24A05B43761(0)], notary=null, softLockingCondition=null, timeCondition=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T01:38:32,709Z [Mock network] flow.[089cd942-a93d-44cd-9239-60d5f2817388].initiateSession - Initiating flow session with party O=Twig, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=1481703861478651670). {}
[INFO ] 2019-11-01T01:38:32,730Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=1481703861478651670). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=ac6aedbe-81c3-4f8d-9bf5-88fa4667d41a, invocation_timestamp=2019-11-01T01:38:32.730Z, session_id=ac6aedbe-81c3-4f8d-9bf5-88fa4667d41a, session_timestamp=2019-11-01T01:38:32.730Z}
[INFO ] 2019-11-01T01:38:32,761Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: interface net.corda.core.contracts.ContractState, criteria: VaultQueryCriteria(status=UNCONSUMED, contractStateTypes=null, stateRefs=[DED61BDD05886D07D5612D9BF47528A6804CF0091B3D9DD7E8AA2C192522566C(0), 93639448AF900EADB11CC16D45A8DB89F3D9CB16A25602394E99F24A05B43761(0)], notary=null, softLockingCondition=null, timeCondition=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
[INFO ] 2019-11-01T01:38:32,822Z [Mock network] flow.[089cd942-a93d-44cd-9239-60d5f2817388].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=2062593439579802367). {}
[INFO ] 2019-11-01T01:38:32,849Z [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=2062593439579802367). {actor_id=Only For Testing, actor_owningIdentity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, invocation_id=fd699a8b-5722-4f7b-bb14-1c250e591a51, invocation_timestamp=2019-11-01T01:38:32.848Z, session_id=fd699a8b-5722-4f7b-bb14-1c250e591a51, session_timestamp=2019-11-01T01:38:32.848Z}
[INFO ] 2019-11-01T01:38:32,862Z [Mock network] flow.[c90b9153-42e7-4aef-b55d-41655c3b2109].call - Requesting 1 dependency(s) for verification from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:38:32,940Z [Mock network] flow.[c90b9153-42e7-4aef-b55d-41655c3b2109].call - Fetched 1 elements from O=Mock Company 1, L=London, C=GB {}
[INFO ] 2019-11-01T01:38:32,963Z [Mock network] vault.NodeVaultService._queryBy - Vault Query for contract type: interface net.corda.core.contracts.ContractState, criteria: VaultQueryCriteria(status=UNCONSUMED, contractStateTypes=null, stateRefs=[DED61BDD05886D07D5612D9BF47528A6804CF0091B3D9DD7E8AA2C192522566C(0), 93639448AF900EADB11CC16D45A8DB89F3D9CB16A25602394E99F24A05B43761(0)], notary=null, softLockingCondition=null, timeCondition=null), pagination: PageSpecification(pageNumber=-1, pageSize=200), sorting: Sort(columns=[]) {}
