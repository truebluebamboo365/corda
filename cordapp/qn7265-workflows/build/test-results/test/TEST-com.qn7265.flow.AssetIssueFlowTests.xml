<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.qn7265.flow.AssetIssueFlowTests" tests="3" skipped="0" failures="0" errors="0" timestamp="2019-11-01T01:37:54" hostname="ip-172-31-36-138" time="27.137">
  <properties/>
  <testcase name="flowRecordsTheSameTransactionInBothPartyVaults" classname="com.qn7265.flow.AssetIssueFlowTests" time="21.594"/>
  <testcase name="flowReturnsCorrectlyFormedPartiallySignedTransaction" classname="com.qn7265.flow.AssetIssueFlowTests" time="2.789"/>
  <testcase name="flowReturnsVerifiedPartiallySignedTransaction" classname="com.qn7265.flow.AssetIssueFlowTests" time="2.754"/>
  <system-out><![CDATA[?[37m[INFO] 01:37:57,468 [Test worker] eddsa.EdDSASecurityProviderRegistrar.getOrCreateProvider - getOrCreateProvider(EdDSA) created instance of net.i2p.crypto.eddsa.EdDSASecurityProvider
?[m?[37m[INFO] 01:38:06,054 [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.qn7265 in file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/classes/kotlin/test/com/qn7265: build/tmp/generated-test-cordapps/com.qn7265-2fb6d9f6-2cb0-4e16-9561-3b0a37a9ab87.jar
?[m?[37m[INFO] 01:38:06,079 [Test worker] cordapp.CordappLoader.apply - Generating a test-only CorDapp of classes discovered for package com.qn7265 in file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/classes/kotlin/main/com/qn7265: build/tmp/generated-test-cordapps/com.qn7265-7b797098-4559-4984-9093-60e35ab5057f.jar
?[m?[37m[INFO] 01:38:06,154 [Test worker] cordapp.CordappLoader.<init> - Loading CorDapps from RestrictedURL(url=file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/tmp/generated-test-cordapps/com.qn7265-2fb6d9f6-2cb0-4e16-9561-3b0a37a9ab87.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/tmp/generated-test-cordapps/com.qn7265-7b797098-4559-4984-9093-60e35ab5057f.jar, rootPackageName=null), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/qn7265-contracts-new/build/libs/qn7265-contracts-new.jar, rootPackageName=com.qn7265), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/qn7265-contracts/build/libs/qn7265-contracts.jar, rootPackageName=com.qn7265), RestrictedURL(url=file:/home/ec2-user/environment/cordapp/libs/prides.jar, rootPackageName=com.twig)
?[m?[37m[INFO] 01:38:06,204 [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ...
?[m?[31m[WARN] 01:38:06,211 [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode.
?[m?[37m[INFO] 01:38:06,228 [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/tmp/generated-test-cordapps/com.qn7265-2fb6d9f6-2cb0-4e16-9561-3b0a37a9ab87.jar
?[m?[37m[INFO] 01:38:06,253 [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/qn7265-workflows/build/tmp/generated-test-cordapps/com.qn7265-7b797098-4559-4984-9093-60e35ab5057f.jar
?[m?[37m[INFO] 01:38:06,282 [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/qn7265-contracts-new/build/libs/qn7265-contracts-new.jar
?[m?[37m[INFO] 01:38:06,339 [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/qn7265-contracts/build/libs/qn7265-contracts.jar
?[m?[37m[INFO] 01:38:06,403 [Test worker] cordapp.CordappLoader.scanCordapp - Scanning CorDapp in file:/home/ec2-user/environment/cordapp/libs/prides.jar
?[m?[37m[INFO] 01:38:06,574 [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@624c23f4
?[m?[37m[INFO] 01:38:06,825 [Test worker] hikari.HikariDataSource.<init> - HikariPool-1 - Started.
?[m?[37m[INFO] 01:38:07,583 [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database.
?[m?[37m[INFO] 01:38:07,655 [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
?[m?[37m[INFO] 01:38:07,679 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
?[m?[37m[INFO] 01:38:08,031 [Test worker] hibernate.Version.logVersion - HHH000412: Hibernate Core {5.2.6.Final}
?[m?[37m[INFO] 01:38:08,050 [Test worker] cfg.Environment.<clinit> - HHH000206: hibernate.properties not found
?[m?[37m[INFO] 01:38:08,191 [Test worker] common.Version.<clinit> - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
?[m?[37m[INFO] 01:38:08,361 [Test worker] internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider
?[m?[37m[INFO] 01:38:08,391 [Test worker] dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
?[m?[37m[INFO] 01:38:08,491 [Test worker] type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@409301d
?[m?[37m[INFO] 01:38:10,176 [Test worker] connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@474d0eca] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
?[m?[37m[INFO] 01:38:10,316 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
?[m?[37m[INFO] 01:38:10,910 [Test worker] internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory
?[m?[37m[INFO] 01:38:11,230 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null
?[m?[37m[INFO] 01:38:11,236 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572291236)
?[m?[37m[INFO] 01:38:11,255 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
?[m?[37m[INFO] 01:38:11,376 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572291236)
?[m?[37m[INFO] 01:38:11,386 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572291236)
?[m?[37m[INFO] 01:38:11,772 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 9EC89A87A31C1FF30AEEB5D29BA4290073CA8BFEBCAFFED179D0A87E097AC421
?[m?[37m[INFO] 01:38:11,959 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DAE15B0B886AD6558683A2786053AA585DC34C32CCF4D87EC1F91D53D2DE4F6A
?[m?[37m[INFO] 01:38:12,095 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91
?[m?[31m[WARN] 01:38:12,106 [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html
?[m?[37m[INFO] 01:38:12,217 [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService
?[m?[37m[INFO] 01:38:12,378 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1)
?[m?[37m[INFO] 01:38:12,385 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2)
?[m?[37m[INFO] 01:38:12,389 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1)
?[m?[37m[INFO] 01:38:12,393 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1)
?[m?[37m[INFO] 01:38:12,396 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1)
?[m?[31m[WARN] 01:38:12,466 [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key A8C50304D08588E45E4C45512DB063C698FB92A69A048688A788A63F22C14558, not inserting the second time
?[m?[37m[INFO] 01:38:12,564 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572291236)
?[m?[37m[INFO] 01:38:12,588 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
?[m?[37m[INFO] 01:38:12,590 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572291236)
?[m?[37m[INFO] 01:38:12,592 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572291236)
?[m?[37m[INFO] 01:38:12,594 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
?[m?[37m[INFO] 01:38:12,596 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572291236)
?[m?[37m[INFO] 01:38:12,601 [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ...
?[m?[31m[WARN] 01:38:12,602 [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode.
?[m?[37m[INFO] 01:38:12,622 [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key!
?[m?[37m[INFO] 01:38:12,635 [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@47a1794f
?[m?[37m[INFO] 01:38:12,642 [Test worker] hikari.HikariDataSource.<init> - HikariPool-2 - Started.
?[m?[37m[INFO] 01:38:12,653 [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database.
?[m?[37m[INFO] 01:38:12,655 [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
?[m?[37m[INFO] 01:38:12,657 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
?[m?[37m[INFO] 01:38:12,663 [Test worker] internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider
?[m?[37m[INFO] 01:38:12,665 [Test worker] dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
?[m?[37m[INFO] 01:38:12,671 [Test worker] type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@409301d
?[m?[37m[INFO] 01:38:12,765 [Test worker] connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7f76fe64] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
?[m?[37m[INFO] 01:38:12,798 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
?[m?[37m[INFO] 01:38:12,802 [Test worker] internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory
?[m?[37m[INFO] 01:38:12,809 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null
?[m?[37m[INFO] 01:38:12,812 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572292812)
?[m?[37m[INFO] 01:38:12,817 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
?[m?[37m[INFO] 01:38:12,823 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572292812)
?[m?[37m[INFO] 01:38:12,825 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572292812)
?[m?[37m[INFO] 01:38:12,978 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 9EC89A87A31C1FF30AEEB5D29BA4290073CA8BFEBCAFFED179D0A87E097AC421
?[m?[37m[INFO] 01:38:13,135 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DAE15B0B886AD6558683A2786053AA585DC34C32CCF4D87EC1F91D53D2DE4F6A
?[m?[37m[INFO] 01:38:13,239 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91
?[m?[31m[WARN] 01:38:13,243 [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html
?[m?[37m[INFO] 01:38:13,260 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1)
?[m?[37m[INFO] 01:38:13,263 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2)
?[m?[37m[INFO] 01:38:13,265 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1)
?[m?[37m[INFO] 01:38:13,266 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1)
?[m?[37m[INFO] 01:38:13,268 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1)
?[m?[31m[WARN] 01:38:13,283 [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 002486737BEDCF153E2C2405AC0BE7AC816E59BE6E8DEE849DD892D7C6B0576E, not inserting the second time
?[m?[37m[INFO] 01:38:13,299 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572291236)
?[m?[37m[INFO] 01:38:13,312 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
?[m?[37m[INFO] 01:38:13,334 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572291236)
?[m?[37m[INFO] 01:38:13,338 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572292812)
?[m?[37m[INFO] 01:38:13,345 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
?[m?[37m[INFO] 01:38:13,362 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572292812)
?[m?[37m[INFO] 01:38:13,364 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572292812)
?[m?[37m[INFO] 01:38:13,381 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
?[m?[37m[INFO] 01:38:13,386 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572292812)
?[m?[37m[INFO] 01:38:13,387 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572292812)
?[m?[37m[INFO] 01:38:13,388 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
?[m?[37m[INFO] 01:38:13,390 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572292812)
?[m?[37m[INFO] 01:38:13,393 [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ...
?[m?[31m[WARN] 01:38:13,394 [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode.
?[m?[37m[INFO] 01:38:13,413 [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key!
?[m?[37m[INFO] 01:38:13,424 [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@469f3203
?[m?[37m[INFO] 01:38:13,429 [Test worker] hikari.HikariDataSource.<init> - HikariPool-3 - Started.
?[m?[37m[INFO] 01:38:13,435 [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database.
?[m?[37m[INFO] 01:38:13,437 [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
?[m?[37m[INFO] 01:38:13,438 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
?[m?[37m[INFO] 01:38:13,444 [Test worker] internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider
?[m?[37m[INFO] 01:38:13,445 [Test worker] dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
?[m?[37m[INFO] 01:38:13,450 [Test worker] type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@409301d
?[m?[37m[INFO] 01:38:13,515 [Test worker] connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@4e24af3] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
?[m?[37m[INFO] 01:38:13,546 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
?[m?[37m[INFO] 01:38:13,549 [Test worker] internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory
?[m?[37m[INFO] 01:38:13,556 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null
?[m?[37m[INFO] 01:38:13,558 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572293558)
?[m?[37m[INFO] 01:38:13,564 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
?[m?[37m[INFO] 01:38:13,573 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572293558)
?[m?[37m[INFO] 01:38:13,576 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572293558)
?[m?[37m[INFO] 01:38:13,747 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 9EC89A87A31C1FF30AEEB5D29BA4290073CA8BFEBCAFFED179D0A87E097AC421
?[m?[37m[INFO] 01:38:13,883 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DAE15B0B886AD6558683A2786053AA585DC34C32CCF4D87EC1F91D53D2DE4F6A
?[m?[37m[INFO] 01:38:14,013 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91
?[m?[31m[WARN] 01:38:14,018 [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html
?[m?[37m[INFO] 01:38:14,049 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1)
?[m?[37m[INFO] 01:38:14,051 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2)
?[m?[37m[INFO] 01:38:14,053 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1)
?[m?[37m[INFO] 01:38:14,054 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1)
?[m?[37m[INFO] 01:38:14,059 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1)
?[m?[31m[WARN] 01:38:14,082 [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 799EE9C57D6A6D3D1F8E48014EBA8367FE98A64CB2DA57CB055AC3F3C3D82BA8, not inserting the second time
?[m?[37m[INFO] 01:38:14,093 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572291236)
?[m?[37m[INFO] 01:38:14,098 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
?[m?[37m[INFO] 01:38:14,112 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572291236)
?[m?[37m[INFO] 01:38:14,114 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572293558)
?[m?[37m[INFO] 01:38:14,116 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
?[m?[37m[INFO] 01:38:14,127 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572293558)
?[m?[37m[INFO] 01:38:14,128 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572292812)
?[m?[37m[INFO] 01:38:14,131 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
?[m?[37m[INFO] 01:38:14,142 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572292812)
?[m?[37m[INFO] 01:38:14,150 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572293558)
?[m?[37m[INFO] 01:38:14,153 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
?[m?[37m[INFO] 01:38:14,170 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572293558)
?[m?[37m[INFO] 01:38:14,173 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572293558)
?[m?[37m[INFO] 01:38:14,182 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
?[m?[37m[INFO] 01:38:14,184 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572293558)
?[m?[37m[INFO] 01:38:14,185 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572293558)
?[m?[37m[INFO] 01:38:14,187 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
?[m?[37m[INFO] 01:38:14,188 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572293558)
?[m?[37m[INFO] 01:38:15,271 [Mock network] flow.[b9c3cbee-7a29-4268-a58a-ddb0df8c2977].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-7607254393178746030).
?[m?[37m[INFO] 01:38:15,464 [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-7607254393178746030). {invocation_id=8b45abb4-8001-466c-84f6-acd60d73a26a, invocation_timestamp=2019-11-01T01:38:15.453Z, session_id=8b45abb4-8001-466c-84f6-acd60d73a26a, session_timestamp=2019-11-01T01:38:15.453Z}
?[mSigned transaction hash: BBC350AAEC5BF01CE9E06B12B8AF6DD9C84B3A7629A53FF4D7D1B801FA521528
BBC350AAEC5BF01CE9E06B12B8AF6DD9C84B3A7629A53FF4D7D1B801FA521528 == BBC350AAEC5BF01CE9E06B12B8AF6DD9C84B3A7629A53FF4D7D1B801FA521528
BBC350AAEC5BF01CE9E06B12B8AF6DD9C84B3A7629A53FF4D7D1B801FA521528 == BBC350AAEC5BF01CE9E06B12B8AF6DD9C84B3A7629A53FF4D7D1B801FA521528
?[37m[INFO] 01:38:15,750 [Test worker] pool.HikariPool.shutdown - HikariPool-1 - Close initiated...
?[m?[37m[INFO] 01:38:15,757 [Test worker] pool.HikariPool.shutdown - HikariPool-1 - Closed.
?[m?[37m[INFO] 01:38:15,759 [Test worker] pool.HikariPool.shutdown - HikariPool-2 - Close initiated...
?[m?[37m[INFO] 01:38:15,768 [Test worker] pool.HikariPool.shutdown - HikariPool-2 - Closed.
?[m?[37m[INFO] 01:38:15,770 [Test worker] pool.HikariPool.shutdown - HikariPool-3 - Close initiated...
?[m?[37m[INFO] 01:38:15,782 [Test worker] pool.HikariPool.shutdown - HikariPool-3 - Closed.
?[m?[37m[INFO] 01:38:15,865 [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ...
?[m?[31m[WARN] 01:38:15,866 [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode.
?[m?[37m[INFO] 01:38:15,874 [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@4c0fddd6
?[m?[37m[INFO] 01:38:15,880 [Test worker] hikari.HikariDataSource.<init> - HikariPool-4 - Started.
?[m?[37m[INFO] 01:38:15,886 [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database.
?[m?[37m[INFO] 01:38:15,888 [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
?[m?[37m[INFO] 01:38:15,889 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
?[m?[37m[INFO] 01:38:15,894 [Test worker] internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider
?[m?[37m[INFO] 01:38:15,896 [Test worker] dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
?[m?[37m[INFO] 01:38:15,900 [Test worker] type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@409301d
?[m?[37m[INFO] 01:38:16,016 [Test worker] connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@66e5e38e] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
?[m?[37m[INFO] 01:38:16,044 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
?[m?[37m[INFO] 01:38:16,046 [Test worker] internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory
?[m?[37m[INFO] 01:38:16,053 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null
?[m?[37m[INFO] 01:38:16,054 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572296054)
?[m?[37m[INFO] 01:38:16,058 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
?[m?[37m[INFO] 01:38:16,070 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572296054)
?[m?[37m[INFO] 01:38:16,071 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572296054)
?[m?[37m[INFO] 01:38:16,240 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 9EC89A87A31C1FF30AEEB5D29BA4290073CA8BFEBCAFFED179D0A87E097AC421
?[m?[37m[INFO] 01:38:16,365 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DAE15B0B886AD6558683A2786053AA585DC34C32CCF4D87EC1F91D53D2DE4F6A
?[m?[37m[INFO] 01:38:16,460 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91
?[m?[31m[WARN] 01:38:16,463 [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html
?[m?[37m[INFO] 01:38:16,476 [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService
?[m?[37m[INFO] 01:38:16,487 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1)
?[m?[37m[INFO] 01:38:16,491 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2)
?[m?[37m[INFO] 01:38:16,493 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1)
?[m?[37m[INFO] 01:38:16,494 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1)
?[m?[37m[INFO] 01:38:16,496 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1)
?[m?[31m[WARN] 01:38:16,522 [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 82DD93A8B91ED117B4567C3B418BF9E6FABEDB0457EB4EBF39C516CA07EF1FD5, not inserting the second time
?[m?[37m[INFO] 01:38:16,531 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572296054)
?[m?[37m[INFO] 01:38:16,547 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
?[m?[37m[INFO] 01:38:16,552 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572296054)
?[m?[37m[INFO] 01:38:16,556 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572296054)
?[m?[37m[INFO] 01:38:16,557 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
?[m?[37m[INFO] 01:38:16,558 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572296054)
?[m?[37m[INFO] 01:38:16,564 [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ...
?[m?[31m[WARN] 01:38:16,566 [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode.
?[m?[37m[INFO] 01:38:16,603 [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key!
?[m?[37m[INFO] 01:38:16,624 [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@7decf9de
?[m?[37m[INFO] 01:38:16,630 [Test worker] hikari.HikariDataSource.<init> - HikariPool-5 - Started.
?[m?[37m[INFO] 01:38:16,642 [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database.
?[m?[37m[INFO] 01:38:16,648 [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
?[m?[37m[INFO] 01:38:16,650 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
?[m?[37m[INFO] 01:38:16,660 [Test worker] internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider
?[m?[37m[INFO] 01:38:16,665 [Test worker] dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
?[m?[37m[INFO] 01:38:16,673 [Test worker] type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@409301d
?[m?[37m[INFO] 01:38:16,764 [Test worker] connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@68f870ee] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
?[m?[37m[INFO] 01:38:16,799 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
?[m?[37m[INFO] 01:38:16,801 [Test worker] internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory
?[m?[37m[INFO] 01:38:16,810 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null
?[m?[37m[INFO] 01:38:16,811 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572296811)
?[m?[37m[INFO] 01:38:16,819 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
?[m?[37m[INFO] 01:38:16,831 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572296811)
?[m?[37m[INFO] 01:38:16,834 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572296811)
?[m?[37m[INFO] 01:38:16,982 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 9EC89A87A31C1FF30AEEB5D29BA4290073CA8BFEBCAFFED179D0A87E097AC421
?[m?[37m[INFO] 01:38:17,103 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DAE15B0B886AD6558683A2786053AA585DC34C32CCF4D87EC1F91D53D2DE4F6A
?[m?[37m[INFO] 01:38:17,193 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91
?[m?[31m[WARN] 01:38:17,196 [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html
?[m?[37m[INFO] 01:38:17,220 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1)
?[m?[37m[INFO] 01:38:17,224 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2)
?[m?[37m[INFO] 01:38:17,226 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1)
?[m?[37m[INFO] 01:38:17,227 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1)
?[m?[37m[INFO] 01:38:17,228 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1)
?[m?[31m[WARN] 01:38:17,249 [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 1B07D6CE3F60CC68D4E6AD43356CA8E449CD817C269C1CCC1910CF55F51E3C02, not inserting the second time
?[m?[37m[INFO] 01:38:17,255 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572296054)
?[m?[37m[INFO] 01:38:17,260 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
?[m?[37m[INFO] 01:38:17,272 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572296054)
?[m?[37m[INFO] 01:38:17,274 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572296811)
?[m?[37m[INFO] 01:38:17,286 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
?[m?[37m[INFO] 01:38:17,296 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572296811)
?[m?[37m[INFO] 01:38:17,299 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572296811)
?[m?[37m[INFO] 01:38:17,309 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
?[m?[37m[INFO] 01:38:17,310 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572296811)
?[m?[37m[INFO] 01:38:17,311 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572296811)
?[m?[37m[INFO] 01:38:17,312 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
?[m?[37m[INFO] 01:38:17,313 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572296811)
?[m?[37m[INFO] 01:38:17,316 [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ...
?[m?[31m[WARN] 01:38:17,318 [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode.
?[m?[37m[INFO] 01:38:17,332 [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key!
?[m?[37m[INFO] 01:38:17,342 [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@68ab06b5
?[m?[37m[INFO] 01:38:17,346 [Test worker] hikari.HikariDataSource.<init> - HikariPool-6 - Started.
?[m?[37m[INFO] 01:38:17,354 [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database.
?[m?[37m[INFO] 01:38:17,355 [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
?[m?[37m[INFO] 01:38:17,357 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
?[m?[37m[INFO] 01:38:17,362 [Test worker] internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider
?[m?[37m[INFO] 01:38:17,364 [Test worker] dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
?[m?[37m[INFO] 01:38:17,367 [Test worker] type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@409301d
?[m?[37m[INFO] 01:38:17,476 [Test worker] connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@420b4ec9] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
?[m?[37m[INFO] 01:38:17,501 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
?[m?[37m[INFO] 01:38:17,504 [Test worker] internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory
?[m?[37m[INFO] 01:38:17,510 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null
?[m?[37m[INFO] 01:38:17,511 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572297511)
?[m?[37m[INFO] 01:38:17,516 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
?[m?[37m[INFO] 01:38:17,525 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572297511)
?[m?[37m[INFO] 01:38:17,526 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572297511)
?[m?[37m[INFO] 01:38:17,677 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 9EC89A87A31C1FF30AEEB5D29BA4290073CA8BFEBCAFFED179D0A87E097AC421
?[m?[37m[INFO] 01:38:17,809 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DAE15B0B886AD6558683A2786053AA585DC34C32CCF4D87EC1F91D53D2DE4F6A
?[m?[37m[INFO] 01:38:17,902 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91
?[m?[31m[WARN] 01:38:17,906 [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html
?[m?[37m[INFO] 01:38:17,927 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1)
?[m?[37m[INFO] 01:38:17,929 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2)
?[m?[37m[INFO] 01:38:17,930 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1)
?[m?[37m[INFO] 01:38:17,932 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1)
?[m?[37m[INFO] 01:38:17,934 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1)
?[m?[31m[WARN] 01:38:17,958 [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key C9EBC0F333883053A74340E0D5BDAF02DEBBEC5F0BED6A4CA6BF5C8F25297B1B, not inserting the second time
?[m?[37m[INFO] 01:38:17,965 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572296054)
?[m?[37m[INFO] 01:38:17,973 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
?[m?[37m[INFO] 01:38:17,988 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572296054)
?[m?[37m[INFO] 01:38:17,989 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572297511)
?[m?[37m[INFO] 01:38:17,996 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
?[m?[37m[INFO] 01:38:18,028 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572297511)
?[m?[37m[INFO] 01:38:18,032 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572296811)
?[m?[37m[INFO] 01:38:18,037 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
?[m?[37m[INFO] 01:38:18,054 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572296811)
?[m?[37m[INFO] 01:38:18,057 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572297511)
?[m?[37m[INFO] 01:38:18,069 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
?[m?[37m[INFO] 01:38:18,083 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572297511)
?[m?[37m[INFO] 01:38:18,084 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572297511)
?[m?[37m[INFO] 01:38:18,096 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
?[m?[37m[INFO] 01:38:18,098 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572297511)
?[m?[37m[INFO] 01:38:18,100 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572297511)
?[m?[37m[INFO] 01:38:18,101 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
?[m?[37m[INFO] 01:38:18,102 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572297511)
?[m?[37m[INFO] 01:38:18,268 [Mock network] flow.[cc44e807-fb53-4fc5-ba69-ef51780a1cc1].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-7237866684166097090).
?[m?[37m[INFO] 01:38:18,367 [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-7237866684166097090). {invocation_id=3d563fea-fa9f-427c-babd-0b96555d142b, invocation_timestamp=2019-11-01T01:38:18.365Z, session_id=3d563fea-fa9f-427c-babd-0b96555d142b, session_timestamp=2019-11-01T01:38:18.365Z}
?[mTransaction:
OUTPUT:     AssetState(amount=100 Asset(name=asset) issued by O=Mock Company 1, L=London, C=GB[00], owner=O=Mock Company 1, L=London, C=GB)
COMMAND:    com.qn7265.issue.AssetContract.Commands.Issue with pubkeys DL2pWwZjgK8DdgJ7Vd7GUnBrxWSdCKk31c7qSKT9yPxRfF
ATTACHMENT: DAE15B0B886AD6558683A2786053AA585DC34C32CCF4D87EC1F91D53D2DE4F6A

?[37m[INFO] 01:38:18,542 [Test worker] pool.HikariPool.shutdown - HikariPool-4 - Close initiated...
?[m?[37m[INFO] 01:38:18,551 [Test worker] pool.HikariPool.shutdown - HikariPool-4 - Closed.
?[m?[37m[INFO] 01:38:18,553 [Test worker] pool.HikariPool.shutdown - HikariPool-5 - Close initiated...
?[m?[37m[INFO] 01:38:18,566 [Test worker] pool.HikariPool.shutdown - HikariPool-5 - Closed.
?[m?[37m[INFO] 01:38:18,568 [Test worker] pool.HikariPool.shutdown - HikariPool-6 - Close initiated...
?[m?[37m[INFO] 01:38:18,575 [Test worker] pool.HikariPool.shutdown - HikariPool-6 - Closed.
?[m?[37m[INFO] 01:38:18,611 [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ...
?[m?[31m[WARN] 01:38:18,613 [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode.
?[m?[37m[INFO] 01:38:18,618 [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6e78c38e
?[m?[37m[INFO] 01:38:18,623 [Test worker] hikari.HikariDataSource.<init> - HikariPool-7 - Started.
?[m?[37m[INFO] 01:38:18,628 [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database.
?[m?[37m[INFO] 01:38:18,630 [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
?[m?[37m[INFO] 01:38:18,631 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
?[m?[37m[INFO] 01:38:18,635 [Test worker] internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider
?[m?[37m[INFO] 01:38:18,637 [Test worker] dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
?[m?[37m[INFO] 01:38:18,639 [Test worker] type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@409301d
?[m?[37m[INFO] 01:38:18,723 [Test worker] connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@1b94ff3d] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
?[m?[37m[INFO] 01:38:18,816 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), NodeNotaryV1(name=net.corda.node.services.schema.NodeSchemaService$NodeNotary, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
?[m?[37m[INFO] 01:38:18,819 [Test worker] internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory
?[m?[37m[INFO] 01:38:18,826 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null
?[m?[37m[INFO] 01:38:18,828 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572298828)
?[m?[37m[INFO] 01:38:18,835 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
?[m?[37m[INFO] 01:38:18,851 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572298828)
?[m?[37m[INFO] 01:38:18,853 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572298828)
?[m?[37m[INFO] 01:38:19,005 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 9EC89A87A31C1FF30AEEB5D29BA4290073CA8BFEBCAFFED179D0A87E097AC421
?[m?[37m[INFO] 01:38:19,141 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DAE15B0B886AD6558683A2786053AA585DC34C32CCF4D87EC1F91D53D2DE4F6A
?[m?[37m[INFO] 01:38:19,230 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91
?[m?[31m[WARN] 01:38:19,232 [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html
?[m?[37m[INFO] 01:38:19,242 [Test worker] internal.InternalMockNetwork$MockNode.makeNotaryService - Running core notary: net.corda.node.services.transactions.ValidatingNotaryService
?[m?[37m[INFO] 01:38:19,247 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1)
?[m?[37m[INFO] 01:38:19,248 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2)
?[m?[37m[INFO] 01:38:19,249 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1)
?[m?[37m[INFO] 01:38:19,250 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1)
?[m?[37m[INFO] 01:38:19,251 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1)
?[m?[31m[WARN] 01:38:19,265 [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 6AF936DF002D452ACD189AD510FE6BB5BEBAAC12BD316706EDF10EC852F1EF0B, not inserting the second time
?[m?[37m[INFO] 01:38:19,272 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572298828)
?[m?[37m[INFO] 01:38:19,277 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
?[m?[37m[INFO] 01:38:19,278 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572298828)
?[m?[37m[INFO] 01:38:19,279 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572298828)
?[m?[37m[INFO] 01:38:19,280 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
?[m?[37m[INFO] 01:38:19,282 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572298828)
?[m?[37m[INFO] 01:38:19,284 [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ...
?[m?[31m[WARN] 01:38:19,285 [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode.
?[m?[37m[INFO] 01:38:19,302 [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/1/certificates/nodekeystore.jks, generating fresh key!
?[m?[37m[INFO] 01:38:19,310 [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@111227a1
?[m?[37m[INFO] 01:38:19,314 [Test worker] hikari.HikariDataSource.<init> - HikariPool-8 - Started.
?[m?[37m[INFO] 01:38:19,322 [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database.
?[m?[37m[INFO] 01:38:19,323 [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
?[m?[37m[INFO] 01:38:19,325 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
?[m?[37m[INFO] 01:38:19,329 [Test worker] internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider
?[m?[37m[INFO] 01:38:19,336 [Test worker] dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
?[m?[37m[INFO] 01:38:19,339 [Test worker] type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@409301d
?[m?[37m[INFO] 01:38:19,432 [Test worker] connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@2d0f2d32] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
?[m?[37m[INFO] 01:38:19,475 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
?[m?[37m[INFO] 01:38:19,477 [Test worker] internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory
?[m?[37m[INFO] 01:38:19,483 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null
?[m?[37m[INFO] 01:38:19,484 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572299484)
?[m?[37m[INFO] 01:38:19,487 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
?[m?[37m[INFO] 01:38:19,494 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572299484)
?[m?[37m[INFO] 01:38:19,497 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572299484)
?[m?[37m[INFO] 01:38:19,668 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 9EC89A87A31C1FF30AEEB5D29BA4290073CA8BFEBCAFFED179D0A87E097AC421
?[m?[37m[INFO] 01:38:19,803 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DAE15B0B886AD6558683A2786053AA585DC34C32CCF4D87EC1F91D53D2DE4F6A
?[m?[37m[INFO] 01:38:19,901 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91
?[m?[31m[WARN] 01:38:19,904 [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html
?[m?[37m[INFO] 01:38:19,919 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1)
?[m?[37m[INFO] 01:38:19,923 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2)
?[m?[37m[INFO] 01:38:19,924 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1)
?[m?[37m[INFO] 01:38:19,925 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1)
?[m?[37m[INFO] 01:38:19,926 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1)
?[m?[31m[WARN] 01:38:19,943 [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 00F2AA58F1ED85E32A125CA7879C38C48FC296E3ED335D3E2BA2B613EF7A6226, not inserting the second time
?[m?[37m[INFO] 01:38:19,950 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572298828)
?[m?[37m[INFO] 01:38:19,958 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
?[m?[37m[INFO] 01:38:20,045 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572298828)
?[m?[37m[INFO] 01:38:20,055 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572299484)
?[m?[37m[INFO] 01:38:20,059 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
?[m?[37m[INFO] 01:38:20,070 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572299484)
?[m?[37m[INFO] 01:38:20,073 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572299484)
?[m?[37m[INFO] 01:38:20,083 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
?[m?[37m[INFO] 01:38:20,084 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572299484)
?[m?[37m[INFO] 01:38:20,085 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572299484)
?[m?[37m[INFO] 01:38:20,086 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
?[m?[37m[INFO] 01:38:20,087 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572299484)
?[m?[37m[INFO] 01:38:20,092 [Test worker] internal.InternalMockNetwork$MockNode.start - Node starting up ...
?[m?[31m[WARN] 01:38:20,094 [Test worker] internal.InternalMockNetwork$MockNode.initCertificate - Corda node is running in dev mode.
?[m?[37m[INFO] 01:38:20,123 [Test worker] internal.InternalMockNetwork$MockNode.obtainIdentity - identity-private-key not found in key store /nodes/2/certificates/nodekeystore.jks, generating fresh key!
?[m?[37m[INFO] 01:38:20,136 [Test worker] internal.NetworkParametersReader.retrieveNetworkParameters - Loaded network parameters: net.corda.core.internal.SignedDataWithCert@6c58df2
?[m?[37m[INFO] 01:38:20,143 [Test worker] hikari.HikariDataSource.<init> - HikariPool-9 - Started.
?[m?[37m[INFO] 01:38:20,148 [Test worker] internal.InternalMockNetwork$MockNode.invoke - Connected to H2 database.
?[m?[37m[INFO] 01:38:20,155 [Test worker] persistence.HibernateConfiguration.<init> - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
?[m?[37m[INFO] 01:38:20,156 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
?[m?[37m[INFO] 01:38:20,165 [Test worker] internal.ConnectionProviderInitiator.initiateService - HHH000130: Instantiating explicit connection provider: net.corda.nodeapi.internal.persistence.HibernateConfiguration$NodeDatabaseConnectionProvider
?[m?[37m[INFO] 01:38:20,167 [Test worker] dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
?[m?[37m[INFO] 01:38:20,170 [Test worker] type.BasicTypeRegistry.register - HHH000270: Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@409301d
?[m?[37m[INFO] 01:38:20,273 [Test worker] connections.access.getIsolatedConnection - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@3859ab2e] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
?[m?[37m[INFO] 01:38:20,306 [Test worker] persistence.HibernateConfiguration.makeSessionFactoryForSchemas - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), PrideSchemaV1(name=com.twig.schema.PrideSchema, version=1)]
?[m?[37m[INFO] 01:38:20,308 [Test worker] internal.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory
?[m?[37m[INFO] 01:38:20,313 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - Node-info has changed so submitting update. Old node-info was null
?[m?[37m[INFO] 01:38:20,314 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572300314)
?[m?[37m[INFO] 01:38:20,318 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
?[m?[37m[INFO] 01:38:20,327 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572300314)
?[m?[37m[INFO] 01:38:20,328 [Test worker] internal.InternalMockNetwork$MockNode.updateNodeInfo - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572300314)
?[m?[37m[INFO] 01:38:20,459 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 9EC89A87A31C1FF30AEEB5D29BA4290073CA8BFEBCAFFED179D0A87E097AC421
?[m?[37m[INFO] 01:38:20,580 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment DAE15B0B886AD6558683A2786053AA585DC34C32CCF4D87EC1F91D53D2DE4F6A
?[m?[37m[INFO] 01:38:20,669 [Test worker] persistence.NodeAttachmentService.invoke - Stored new attachment 7C96C691C3A6FB93A51BE3DE53DE835B4A7D7252D6794B80AE51B5E041719B91
?[m?[31m[WARN] 01:38:20,671 [Test worker] cordapp.CordappProviderImpl.verifyInstalledCordapps - The network parameters don't specify any whitelisted contract implementations. Please contact your zone operator. See https://docs.corda.net/network-map.html
?[m?[37m[INFO] 01:38:20,683 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Seller to initiate com.qn7265.flow.AssetTradeFlow$Commission (version 1)
?[m?[37m[INFO] 01:38:20,684 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.qn7265.flow.AssetTradeFlow$Buyer to initiate com.qn7265.flow.AssetTradeFlow$Seller (version 2)
?[m?[37m[INFO] 01:38:20,685 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideIssueFlow$Initiator to initiate com.twig.flow.PrideIssueFlow$Acceptor (version 1)
?[m?[37m[INFO] 01:38:20,686 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.PrideTransferFlow$Initiator to initiate com.twig.flow.PrideTransferFlow$Acceptor (version 1)
?[m?[37m[INFO] 01:38:20,687 [Test worker] internal.InternalMockNetwork$MockNode.registerInitiatedFlowInternal - Registered com.twig.flow.BroadcastTransaction to initiate com.twig.flow.RecordTransactionAsObserver (version 1)
?[m?[31m[WARN] 01:38:20,698 [Test worker] utilities.AppendOnlyPersistentMapBase.set - Double insert in net.corda.node.utilities.AppendOnlyPersistentMap for entity class class net.corda.node.services.identity.PersistentIdentityService$PersistentIdentity key 2EF7554F7AA021D55F1E341FEEFDBD31CC0424B1E074307041889272BE4BDB64, not inserting the second time
?[m?[37m[INFO] 01:38:20,709 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572298828)
?[m?[37m[INFO] 01:38:20,712 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
?[m?[37m[INFO] 01:38:20,726 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=1, serial=1572572298828)
?[m?[37m[INFO] 01:38:20,732 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572300314)
?[m?[37m[INFO] 01:38:20,735 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
?[m?[37m[INFO] 01:38:20,742 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572300314)
?[m?[37m[INFO] 01:38:20,743 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572299484)
?[m?[37m[INFO] 01:38:20,748 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
?[m?[37m[INFO] 01:38:20,760 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=1, serial=1572572299484)
?[m?[37m[INFO] 01:38:20,761 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572300314)
?[m?[37m[INFO] 01:38:20,764 [Test worker] network.PersistentNetworkMapCache.addNode - No previous node found
?[m?[37m[INFO] 01:38:20,774 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572300314)
?[m?[37m[INFO] 01:38:20,775 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572300314)
?[m?[37m[INFO] 01:38:20,786 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
?[m?[37m[INFO] 01:38:20,792 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572300314)
?[m?[37m[INFO] 01:38:20,793 [Test worker] network.PersistentNetworkMapCache.addNode - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572300314)
?[m?[37m[INFO] 01:38:20,797 [Test worker] network.PersistentNetworkMapCache.addNode - Previous node was identical to incoming one - doing nothing
?[m?[37m[INFO] 01:38:20,799 [Test worker] network.PersistentNetworkMapCache.addNode - Done adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Regulator, L=Manila, C=PH], platformVersion=1, serial=1572572300314)
?[m?[31m[WARN] 01:38:20,888 [Mock network] flow.[938c5643-b7aa-4e40-aae7-785002ea4171].run - Flow finished with exception
?[m net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: A newly issued asset must have a positive amount., contract: com.qn7265.issue.AssetContract, transaction: 56E2BE17BBE3792FA935309E8D6163A1444587EC7A9FB7E9E27B4460773D5C0E
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:127) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:80) ~[corda-core-3.4-corda.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:143) ~[corda-core-3.4-corda.jar:?]
	at com.qn7265.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:82) ~[main/:?]
	at com.qn7265.flow.AssetIssueFlow$Initiator.call(AssetIssueFlow.kt:27) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:96) [corda-node-3.4-corda.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:44) [corda-node-3.4-corda.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) [quasar-core-0.7.9-jdk8.jar:0.7.9]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_211]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_211]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_211]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_211]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:62) [corda-node-3.4-corda.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: A newly issued asset must have a positive amount.
	at com.qn7265.issue.AssetContract.verifyIssue(AssetContract.kt:80) ~[qn7265-contracts.jar:?]
	at com.qn7265.issue.AssetContract.verify(AssetContract.kt:29) ~[qn7265-contracts.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verifyContracts(LedgerTransaction.kt:125) ~[corda-core-3.4-corda.jar:?]
	... 17 more
?[37m[INFO] 01:38:21,014 [Mock network] flow.[cfaae8e3-2df9-4d02-85ee-979ee171d18a].initiateSession - Initiating flow session with party O=Regulator, L=Manila, C=PH. Session id for tracing purposes is SessionId(toLong=-7114488977308417457).
?[m?[37m[INFO] 01:38:21,107 [Mock network] statemachine.StateMachineManagerImpl.onSessionInit - Accepting flow session from party O=Mock Company 1, L=London, C=GB. Session id for tracing purposes is SessionId(toLong=-7114488977308417457). {invocation_id=39c2c008-636c-4251-94d2-1869cfde2533, invocation_timestamp=2019-11-01T01:38:21.106Z, session_id=39c2c008-636c-4251-94d2-1869cfde2533, session_timestamp=2019-11-01T01:38:21.106Z}
?[m?[37m[INFO] 01:38:21,315 [Test worker] pool.HikariPool.shutdown - HikariPool-7 - Close initiated...
?[m?[37m[INFO] 01:38:21,320 [Test worker] pool.HikariPool.shutdown - HikariPool-7 - Closed.
?[m?[37m[INFO] 01:38:21,322 [Test worker] pool.HikariPool.shutdown - HikariPool-8 - Close initiated...
?[m?[37m[INFO] 01:38:21,325 [Test worker] pool.HikariPool.shutdown - HikariPool-8 - Closed.
?[m?[37m[INFO] 01:38:21,326 [Test worker] pool.HikariPool.shutdown - HikariPool-9 - Close initiated...
?[m?[37m[INFO] 01:38:21,329 [Test worker] pool.HikariPool.shutdown - HikariPool-9 - Closed.
?[m]]></system-out>
  <system-err><![CDATA[QUASAR WARNING: Assertions enabled. This may harm performance.
QUASAR WARNING: Fibers are set to verify instrumentation. This may *severely* harm performance.
]]></system-err>
</testsuite>
